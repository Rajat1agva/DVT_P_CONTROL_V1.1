
ET_Pcontrol.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00804000  000012ee  00001382  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007a  0080409e  0080409e  00001420  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001420  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001450  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00001490  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004287  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002cd7  00000000  00000000  000057f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b48  00000000  00000000  000084ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b0  00000000  00000000  00009018  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001aad  00000000  00000000  000092c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000955  00000000  00000000  0000ad75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000b6ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      10:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      14:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      18:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      1c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      20:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      24:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      28:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      2c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      30:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      34:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      38:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      3c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      40:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      44:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      48:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      4c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      50:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      54:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      58:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      5c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      60:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      64:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      68:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      6c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      70:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      74:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      78:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      7c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      80:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      84:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      88:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      8c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      90:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      94:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      98:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      9c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      a0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      a4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      a8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      ac:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      b0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      b4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      b8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      bc:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      c0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      c4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      c8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      cc:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      d0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      d4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      d8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      dc:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      e0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      e4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      e8:	07 63       	ori	r16, 0x37	; 55
      ea:	42 36       	cpi	r20, 0x62	; 98
      ec:	b7 9b       	sbis	0x16, 7	; 22
      ee:	d8 a7       	std	Y+40, r29	; 0x28
      f0:	1a 39       	cpi	r17, 0x9A	; 154
      f2:	68 56       	subi	r22, 0x68	; 104
      f4:	18 ae       	std	Y+56, r1	; 0x38
      f6:	ba ab       	std	Y+50, r27	; 0x32
      f8:	55 8c       	ldd	r5, Z+29	; 0x1d
      fa:	1d 3c       	cpi	r17, 0xCD	; 205
      fc:	b7 cc       	rjmp	.-1682   	; 0xfffffa6c <__eeprom_end+0xff7efa6c>
      fe:	57 63       	ori	r21, 0x37	; 55
     100:	bd 6d       	ori	r27, 0xDD	; 221
     102:	ed fd       	.word	0xfded	; ????
     104:	75 3e       	cpi	r23, 0xE5	; 229
     106:	f6 17       	cp	r31, r22
     108:	72 31       	cpi	r23, 0x12	; 18
     10a:	bf 00       	.word	0x00bf	; ????
     10c:	00 00       	nop
     10e:	80 3f       	cpi	r24, 0xF0	; 240
     110:	08 00       	.word	0x0008	; ????
     112:	00 00       	nop
     114:	be 92       	st	-X, r11
     116:	24 49       	sbci	r18, 0x94	; 148
     118:	12 3e       	cpi	r17, 0xE2	; 226
     11a:	ab aa       	std	Y+51, r10	; 0x33
     11c:	aa 2a       	or	r10, r26
     11e:	be cd       	rjmp	.-1156   	; 0xfffffc9c <__eeprom_end+0xff7efc9c>
     120:	cc cc       	rjmp	.-1640   	; 0xfffffaba <__eeprom_end+0xff7efaba>
     122:	4c 3e       	cpi	r20, 0xEC	; 236
     124:	00 00       	nop
     126:	00 80       	ld	r0, Z
     128:	be ab       	std	Y+54, r27	; 0x36
     12a:	aa aa       	std	Y+50, r10	; 0x32
     12c:	aa 3e       	cpi	r26, 0xEA	; 234
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	bf 00       	.word	0x00bf	; ????
     134:	00 00       	nop
     136:	80 3f       	cpi	r24, 0xF0	; 240
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	00 08       	sbc	r0, r0
     13e:	41 78       	andi	r20, 0x81	; 129
     140:	d3 bb       	out	0x13, r29	; 19
     142:	43 87       	std	Z+11, r20	; 0x0b
     144:	d1 13       	cpse	r29, r17
     146:	3d 19       	sub	r19, r13
     148:	0e 3c       	cpi	r16, 0xCE	; 206
     14a:	c3 bd       	out	0x23, r28	; 35
     14c:	42 82       	std	Z+2, r4	; 0x02
     14e:	ad 2b       	or	r26, r29
     150:	3e 68       	ori	r19, 0x8E	; 142
     152:	ec 82       	std	Y+4, r14	; 0x04
     154:	76 be       	out	0x36, r7	; 54
     156:	d9 8f       	std	Y+25, r29	; 0x19
     158:	e1 a9       	ldd	r30, Z+49	; 0x31
     15a:	3e 4c       	sbci	r19, 0xCE	; 206
     15c:	80 ef       	ldi	r24, 0xF0	; 240
     15e:	ff be       	out	0x3f, r15	; 63
     160:	01 c4       	rjmp	.+2050   	; 0x964 <continous_intubation+0xfc>
     162:	ff 7f       	andi	r31, 0xFF	; 255
     164:	3f 00       	.word	0x003f	; ????
     166:	00 00       	nop
	...

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	cd bf       	out	0x3d, r28	; 61
     172:	df e7       	ldi	r29, 0x7F	; 127
     174:	de bf       	out	0x3e, r29	; 62

00000176 <__do_copy_data>:
     176:	10 e4       	ldi	r17, 0x40	; 64
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b0 e4       	ldi	r27, 0x40	; 64
     17c:	ee ee       	ldi	r30, 0xEE	; 238
     17e:	f2 e1       	ldi	r31, 0x12	; 18
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	ae 39       	cpi	r26, 0x9E	; 158
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	21 e4       	ldi	r18, 0x41	; 65
     192:	ae e9       	ldi	r26, 0x9E	; 158
     194:	b0 e4       	ldi	r27, 0x40	; 64
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a8 31       	cpi	r26, 0x18	; 24
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	0e 94 40 05 	call	0xa80	; 0xa80 <main>
     1a4:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <_exit>

000001a8 <__bad_interrupt>:
     1a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ac <reverse>:


void I2C_0_recvtrans(void)
{
	TWI0.MCTRLB &= ~(1 << 4);   // Send ACK
	TWI0.MCTRLB |= 0x2;         // RECVTRANS
     1ac:	61 50       	subi	r22, 0x01	; 1
     1ae:	71 09       	sbc	r23, r1
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	0e c0       	rjmp	.+28     	; 0x1d2 <reverse+0x26>
     1b6:	dc 01       	movw	r26, r24
     1b8:	a2 0f       	add	r26, r18
     1ba:	b3 1f       	adc	r27, r19
     1bc:	4c 91       	ld	r20, X
     1be:	fc 01       	movw	r30, r24
     1c0:	e6 0f       	add	r30, r22
     1c2:	f7 1f       	adc	r31, r23
     1c4:	50 81       	ld	r21, Z
     1c6:	5c 93       	st	X, r21
     1c8:	40 83       	st	Z, r20
     1ca:	2f 5f       	subi	r18, 0xFF	; 255
     1cc:	3f 4f       	sbci	r19, 0xFF	; 255
     1ce:	61 50       	subi	r22, 0x01	; 1
     1d0:	71 09       	sbc	r23, r1
     1d2:	26 17       	cp	r18, r22
     1d4:	37 07       	cpc	r19, r23
     1d6:	7c f3       	brlt	.-34     	; 0x1b6 <reverse+0xa>
     1d8:	08 95       	ret

000001da <intToStr>:
     1da:	cf 92       	push	r12
     1dc:	df 92       	push	r13
     1de:	ef 92       	push	r14
     1e0:	ff 92       	push	r15
     1e2:	0f 93       	push	r16
     1e4:	1f 93       	push	r17
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	8a 01       	movw	r16, r20
     1ec:	69 01       	movw	r12, r18
     1ee:	c0 e0       	ldi	r28, 0x00	; 0
     1f0:	d0 e0       	ldi	r29, 0x00	; 0
     1f2:	11 c0       	rjmp	.+34     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
     1f4:	78 01       	movw	r14, r16
     1f6:	ec 0e       	add	r14, r28
     1f8:	fd 1e       	adc	r15, r29
     1fa:	2a e0       	ldi	r18, 0x0A	; 10
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e0       	ldi	r20, 0x00	; 0
     200:	50 e0       	ldi	r21, 0x00	; 0
     202:	0e 94 1a 09 	call	0x1234	; 0x1234 <__divmodsi4>
     206:	60 5d       	subi	r22, 0xD0	; 208
     208:	f7 01       	movw	r30, r14
     20a:	60 83       	st	Z, r22
     20c:	62 2f       	mov	r22, r18
     20e:	73 2f       	mov	r23, r19
     210:	84 2f       	mov	r24, r20
     212:	95 2f       	mov	r25, r21
     214:	21 96       	adiw	r28, 0x01	; 1
     216:	61 15       	cp	r22, r1
     218:	71 05       	cpc	r23, r1
     21a:	81 05       	cpc	r24, r1
     21c:	91 05       	cpc	r25, r1
     21e:	51 f7       	brne	.-44     	; 0x1f4 <intToStr+0x1a>
     220:	06 c0       	rjmp	.+12     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
     222:	f8 01       	movw	r30, r16
     224:	ec 0f       	add	r30, r28
     226:	fd 1f       	adc	r31, r29
     228:	80 e3       	ldi	r24, 0x30	; 48
     22a:	80 83       	st	Z, r24
     22c:	21 96       	adiw	r28, 0x01	; 1
     22e:	cc 15       	cp	r28, r12
     230:	dd 05       	cpc	r29, r13
     232:	bc f3       	brlt	.-18     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
     234:	be 01       	movw	r22, r28
     236:	c8 01       	movw	r24, r16
     238:	0e 94 d6 00 	call	0x1ac	; 0x1ac <reverse>
     23c:	f8 01       	movw	r30, r16
     23e:	ec 0f       	add	r30, r28
     240:	fd 1f       	adc	r31, r29
     242:	10 82       	st	Z, r1
     244:	ce 01       	movw	r24, r28
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	1f 91       	pop	r17
     24c:	0f 91       	pop	r16
     24e:	ff 90       	pop	r15
     250:	ef 90       	pop	r14
     252:	df 90       	pop	r13
     254:	cf 90       	pop	r12
     256:	08 95       	ret

00000258 <ftoa>:
     258:	8f 92       	push	r8
     25a:	9f 92       	push	r9
     25c:	af 92       	push	r10
     25e:	bf 92       	push	r11
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	4b 01       	movw	r8, r22
     272:	5c 01       	movw	r10, r24
     274:	8a 01       	movw	r16, r20
     276:	e9 01       	movw	r28, r18
     278:	0e 94 3b 06 	call	0xc76	; 0xc76 <__fixsfsi>
     27c:	6b 01       	movw	r12, r22
     27e:	77 0f       	add	r23, r23
     280:	ee 08       	sbc	r14, r14
     282:	ff 08       	sbc	r15, r15
     284:	c7 01       	movw	r24, r14
     286:	b6 01       	movw	r22, r12
     288:	0e 94 73 06 	call	0xce6	; 0xce6 <__floatsisf>
     28c:	9b 01       	movw	r18, r22
     28e:	ac 01       	movw	r20, r24
     290:	c5 01       	movw	r24, r10
     292:	b4 01       	movw	r22, r8
     294:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     298:	4b 01       	movw	r8, r22
     29a:	5c 01       	movw	r10, r24
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	a8 01       	movw	r20, r16
     2a2:	c7 01       	movw	r24, r14
     2a4:	b6 01       	movw	r22, r12
     2a6:	0e 94 ed 00 	call	0x1da	; 0x1da <intToStr>
     2aa:	7c 01       	movw	r14, r24
     2ac:	20 97       	sbiw	r28, 0x00	; 0
     2ae:	49 f1       	breq	.+82     	; 0x302 <ftoa+0xaa>
     2b0:	f8 01       	movw	r30, r16
     2b2:	e8 0f       	add	r30, r24
     2b4:	f9 1f       	adc	r31, r25
     2b6:	8e e2       	ldi	r24, 0x2E	; 46
     2b8:	80 83       	st	Z, r24
     2ba:	be 01       	movw	r22, r28
     2bc:	0d 2e       	mov	r0, r29
     2be:	00 0c       	add	r0, r0
     2c0:	88 0b       	sbc	r24, r24
     2c2:	99 0b       	sbc	r25, r25
     2c4:	0e 94 73 06 	call	0xce6	; 0xce6 <__floatsisf>
     2c8:	9b 01       	movw	r18, r22
     2ca:	ac 01       	movw	r20, r24
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	70 e0       	ldi	r23, 0x00	; 0
     2d0:	80 e2       	ldi	r24, 0x20	; 32
     2d2:	91 e4       	ldi	r25, 0x41	; 65
     2d4:	0e 94 95 07 	call	0xf2a	; 0xf2a <pow>
     2d8:	9b 01       	movw	r18, r22
     2da:	ac 01       	movw	r20, r24
     2dc:	c5 01       	movw	r24, r10
     2de:	b4 01       	movw	r22, r8
     2e0:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     2e4:	2f ef       	ldi	r18, 0xFF	; 255
     2e6:	e2 1a       	sub	r14, r18
     2e8:	f2 0a       	sbc	r15, r18
     2ea:	0e 94 3b 06 	call	0xc76	; 0xc76 <__fixsfsi>
     2ee:	a8 01       	movw	r20, r16
     2f0:	4e 0d       	add	r20, r14
     2f2:	5f 1d       	adc	r21, r15
     2f4:	07 2e       	mov	r0, r23
     2f6:	00 0c       	add	r0, r0
     2f8:	88 0b       	sbc	r24, r24
     2fa:	99 0b       	sbc	r25, r25
     2fc:	9e 01       	movw	r18, r28
     2fe:	0e 94 ed 00 	call	0x1da	; 0x1da <intToStr>
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	1f 91       	pop	r17
     308:	0f 91       	pop	r16
     30a:	ff 90       	pop	r15
     30c:	ef 90       	pop	r14
     30e:	df 90       	pop	r13
     310:	cf 90       	pop	r12
     312:	bf 90       	pop	r11
     314:	af 90       	pop	r10
     316:	9f 90       	pop	r9
     318:	8f 90       	pop	r8
     31a:	08 95       	ret

0000031c <USART1_init>:
     31c:	e0 e4       	ldi	r30, 0x40	; 64
     31e:	f4 e0       	ldi	r31, 0x04	; 4
     320:	20 81       	ld	r18, Z
     322:	2d 7f       	andi	r18, 0xFD	; 253
     324:	20 83       	st	Z, r18
     326:	20 81       	ld	r18, Z
     328:	21 60       	ori	r18, 0x01	; 1
     32a:	20 83       	st	Z, r18
     32c:	bc 01       	movw	r22, r24
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 71 06 	call	0xce2	; 0xce2 <__floatunsisf>
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	40 e8       	ldi	r20, 0x80	; 128
     33c:	51 e4       	ldi	r21, 0x41	; 65
     33e:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     342:	9b 01       	movw	r18, r22
     344:	ac 01       	movw	r20, r24
     346:	60 e0       	ldi	r22, 0x00	; 0
     348:	74 e2       	ldi	r23, 0x24	; 36
     34a:	84 e7       	ldi	r24, 0x74	; 116
     34c:	9d e4       	ldi	r25, 0x4D	; 77
     34e:	0e 94 c9 05 	call	0xb92	; 0xb92 <__divsf3>
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	40 e0       	ldi	r20, 0x00	; 0
     358:	5f e3       	ldi	r21, 0x3F	; 63
     35a:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     35e:	0e 94 42 06 	call	0xc84	; 0xc84 <__fixunssfsi>
     362:	e0 e2       	ldi	r30, 0x20	; 32
     364:	f8 e0       	ldi	r31, 0x08	; 8
     366:	60 87       	std	Z+8, r22	; 0x08
     368:	71 87       	std	Z+9, r23	; 0x09
     36a:	86 81       	ldd	r24, Z+6	; 0x06
     36c:	80 6c       	ori	r24, 0xC0	; 192
     36e:	86 83       	std	Z+6, r24	; 0x06
     370:	08 95       	ret

00000372 <USART1_sendChar>:
     372:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
     376:	95 ff       	sbrs	r25, 5
     378:	fc cf       	rjmp	.-8      	; 0x372 <USART1_sendChar>
     37a:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     37e:	08 95       	ret

00000380 <USART1_sendString>:
     380:	0f 93       	push	r16
     382:	1f 93       	push	r17
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	8c 01       	movw	r16, r24
     38a:	c0 e0       	ldi	r28, 0x00	; 0
     38c:	d0 e0       	ldi	r29, 0x00	; 0
     38e:	07 c0       	rjmp	.+14     	; 0x39e <USART1_sendString+0x1e>
     390:	f8 01       	movw	r30, r16
     392:	ec 0f       	add	r30, r28
     394:	fd 1f       	adc	r31, r29
     396:	80 81       	ld	r24, Z
     398:	0e 94 b9 01 	call	0x372	; 0x372 <USART1_sendChar>
     39c:	21 96       	adiw	r28, 0x01	; 1
     39e:	f8 01       	movw	r30, r16
     3a0:	01 90       	ld	r0, Z+
     3a2:	00 20       	and	r0, r0
     3a4:	e9 f7       	brne	.-6      	; 0x3a0 <USART1_sendString+0x20>
     3a6:	31 97       	sbiw	r30, 0x01	; 1
     3a8:	e0 1b       	sub	r30, r16
     3aa:	f1 0b       	sbc	r31, r17
     3ac:	ce 17       	cp	r28, r30
     3ae:	df 07       	cpc	r29, r31
     3b0:	78 f3       	brcs	.-34     	; 0x390 <USART1_sendString+0x10>
     3b2:	8a e0       	ldi	r24, 0x0A	; 10
     3b4:	0e 94 b9 01 	call	0x372	; 0x372 <USART1_sendChar>
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	08 95       	ret

000003c2 <USART1_sendFloat>:
     3c2:	9a 01       	movw	r18, r20
     3c4:	41 ec       	ldi	r20, 0xC1	; 193
     3c6:	50 e4       	ldi	r21, 0x40	; 64
     3c8:	0e 94 2c 01 	call	0x258	; 0x258 <ftoa>
     3cc:	81 ec       	ldi	r24, 0xC1	; 193
     3ce:	90 e4       	ldi	r25, 0x40	; 64
     3d0:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     3d4:	08 95       	ret

000003d6 <I2C_0_stop_transmission>:
     3d6:	e0 e0       	ldi	r30, 0x00	; 0
     3d8:	f9 e0       	ldi	r31, 0x09	; 9
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	85 83       	std	Z+5, r24	; 0x05
     3de:	83 e0       	ldi	r24, 0x03	; 3
     3e0:	84 83       	std	Z+4, r24	; 0x04
     3e2:	08 95       	ret

000003e4 <I2C_0_master_initialization>:
     3e4:	e0 e0       	ldi	r30, 0x00	; 0
     3e6:	f9 e0       	ldi	r31, 0x09	; 9
     3e8:	8d e0       	ldi	r24, 0x0D	; 13
     3ea:	86 83       	std	Z+6, r24	; 0x06
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	85 83       	std	Z+5, r24	; 0x05
     3f0:	83 81       	ldd	r24, Z+3	; 0x03
     3f2:	8a 60       	ori	r24, 0x0A	; 10
     3f4:	83 83       	std	Z+3, r24	; 0x03
     3f6:	83 81       	ldd	r24, Z+3	; 0x03
     3f8:	81 60       	ori	r24, 0x01	; 1
     3fa:	83 83       	std	Z+3, r24	; 0x03
     3fc:	08 95       	ret

000003fe <I2C_0_sendAddress>:
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	c8 2f       	mov	r28, r24
     404:	d6 2f       	mov	r29, r22
     406:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     40a:	83 70       	andi	r24, 0x03	; 3
     40c:	83 30       	cpi	r24, 0x03	; 3
     40e:	89 f4       	brne	.+34     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     410:	80 e4       	ldi	r24, 0x40	; 64
     412:	90 e4       	ldi	r25, 0x40	; 64
     414:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     418:	20 e6       	ldi	r18, 0x60	; 96
     41a:	3a ee       	ldi	r19, 0xEA	; 234
     41c:	01 c0       	rjmp	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41e:	9c 01       	movw	r18, r24
     420:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     424:	83 70       	andi	r24, 0x03	; 3
     426:	83 30       	cpi	r24, 0x03	; 3
     428:	21 f4       	brne	.+8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     42a:	c9 01       	movw	r24, r18
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	23 2b       	or	r18, r19
     430:	b1 f7       	brne	.-20     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     432:	85 e0       	ldi	r24, 0x05	; 5
     434:	80 93 05 09 	sts	0x0905, r24	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     438:	dd 23       	and	r29, r29
     43a:	41 f0       	breq	.+16     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     43c:	8c 2f       	mov	r24, r28
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	88 0f       	add	r24, r24
     442:	99 1f       	adc	r25, r25
     444:	81 60       	ori	r24, 0x01	; 1
     446:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     44a:	04 c0       	rjmp	.+8      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     44c:	8c 2f       	mov	r24, r28
     44e:	88 0f       	add	r24, r24
     450:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     454:	80 e6       	ldi	r24, 0x60	; 96
     456:	9a ee       	ldi	r25, 0xEA	; 234
     458:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     45c:	24 ff       	sbrs	r18, 4
     45e:	06 c0       	rjmp	.+12     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     460:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     464:	26 fd       	sbrc	r18, 6
     466:	02 c0       	rjmp	.+4      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     468:	01 97       	sbiw	r24, 0x01	; 1
     46a:	b1 f7       	brne	.-20     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     46c:	89 2b       	or	r24, r25
     46e:	21 f4       	brne	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     470:	8a e4       	ldi	r24, 0x4A	; 74
     472:	90 e4       	ldi	r25, 0x40	; 64
     474:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     478:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     47c:	82 ff       	sbrs	r24, 2
     47e:	04 c0       	rjmp	.+8      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     480:	82 e5       	ldi	r24, 0x52	; 82
     482:	90 e4       	ldi	r25, 0x40	; 64
     484:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     488:	df 91       	pop	r29
     48a:	cf 91       	pop	r28
     48c:	08 95       	ret

0000048e <I2C_0_sendData>:
     48e:	e7 ee       	ldi	r30, 0xE7	; 231
     490:	f3 e0       	ldi	r31, 0x03	; 3
     492:	31 97       	sbiw	r30, 0x01	; 1
     494:	f1 f7       	brne	.-4      	; 0x492 <I2C_0_sendData+0x4>
     496:	00 c0       	rjmp	.+0      	; 0x498 <I2C_0_sendData+0xa>
     498:	00 00       	nop
     49a:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     49e:	80 e6       	ldi	r24, 0x60	; 96
     4a0:	9a ee       	ldi	r25, 0xEA	; 234
     4a2:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4a6:	24 ff       	sbrs	r18, 4
     4a8:	02 c0       	rjmp	.+4      	; 0x4ae <I2C_0_sendData+0x20>
     4aa:	01 97       	sbiw	r24, 0x01	; 1
     4ac:	d1 f7       	brne	.-12     	; 0x4a2 <I2C_0_sendData+0x14>
     4ae:	89 2b       	or	r24, r25
     4b0:	21 f4       	brne	.+8      	; 0x4ba <I2C_0_sendData+0x2c>
     4b2:	8a e4       	ldi	r24, 0x4A	; 74
     4b4:	90 e4       	ldi	r25, 0x40	; 64
     4b6:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     4ba:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4be:	83 fd       	sbrc	r24, 3
     4c0:	04 c0       	rjmp	.+8      	; 0x4ca <I2C_0_sendData+0x3c>
     4c2:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4c6:	82 ff       	sbrs	r24, 2
     4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <I2C_0_sendData+0x48>
     4ca:	81 e7       	ldi	r24, 0x71	; 113
     4cc:	90 e4       	ldi	r25, 0x40	; 64
     4ce:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     4d2:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <I2C_0_stop_transmission>
     4d6:	08 95       	ret

000004d8 <I2C_0_recieveData>:
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	c0 e6       	ldi	r28, 0x60	; 96
     4de:	da ee       	ldi	r29, 0xEA	; 234
     4e0:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4e4:	88 23       	and	r24, r24
     4e6:	14 f0       	brlt	.+4      	; 0x4ec <I2C_0_recieveData+0x14>
     4e8:	21 97       	sbiw	r28, 0x01	; 1
     4ea:	d1 f7       	brne	.-12     	; 0x4e0 <I2C_0_recieveData+0x8>
     4ec:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4f0:	83 fd       	sbrc	r24, 3
     4f2:	04 c0       	rjmp	.+8      	; 0x4fc <I2C_0_recieveData+0x24>
     4f4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4f8:	82 ff       	sbrs	r24, 2
     4fa:	06 c0       	rjmp	.+12     	; 0x508 <I2C_0_recieveData+0x30>
     4fc:	85 e8       	ldi	r24, 0x85	; 133
     4fe:	90 e4       	ldi	r25, 0x40	; 64
     500:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     504:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <I2C_0_stop_transmission>
     508:	cd 2b       	or	r28, r29
     50a:	21 f4       	brne	.+8      	; 0x514 <I2C_0_recieveData+0x3c>
     50c:	8a e4       	ldi	r24, 0x4A	; 74
     50e:	90 e4       	ldi	r25, 0x40	; 64
     510:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     514:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     518:	df 91       	pop	r29
     51a:	cf 91       	pop	r28
     51c:	08 95       	ret

0000051e <Pressure_init>:
	
char out_str[35] = {0};	

void Pressure_init(void){
	
	PORTA.PIN2CTRL |= (1 << 3);   // SDA pull up //PA2
     51e:	e0 e0       	ldi	r30, 0x00	; 0
     520:	f4 e0       	ldi	r31, 0x04	; 4
     522:	82 89       	ldd	r24, Z+18	; 0x12
     524:	88 60       	ori	r24, 0x08	; 8
     526:	82 8b       	std	Z+18, r24	; 0x12
	PORTA.PIN3CTRL |= (1 << 3);   // SCL pull up //PA3
     528:	83 89       	ldd	r24, Z+19	; 0x13
     52a:	88 60       	ori	r24, 0x08	; 8
     52c:	83 8b       	std	Z+19, r24	; 0x13

	_OUTPUT_min=3355443;
     52e:	83 e3       	ldi	r24, 0x33	; 51
     530:	93 e3       	ldi	r25, 0x33	; 51
     532:	a3 e3       	ldi	r26, 0x33	; 51
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	80 93 14 41 	sts	0x4114, r24	; 0x804114 <_OUTPUT_min>
     53a:	90 93 15 41 	sts	0x4115, r25	; 0x804115 <_OUTPUT_min+0x1>
     53e:	a0 93 16 41 	sts	0x4116, r26	; 0x804116 <_OUTPUT_min+0x2>
     542:	b0 93 17 41 	sts	0x4117, r27	; 0x804117 <_OUTPUT_min+0x3>
	_OUTPUT_max=13421772;
     546:	8c ec       	ldi	r24, 0xCC	; 204
     548:	9c ec       	ldi	r25, 0xCC	; 204
     54a:	ac ec       	ldi	r26, 0xCC	; 204
     54c:	b0 e0       	ldi	r27, 0x00	; 0
     54e:	80 93 bd 40 	sts	0x40BD, r24	; 0x8040bd <_OUTPUT_max>
     552:	90 93 be 40 	sts	0x40BE, r25	; 0x8040be <_OUTPUT_max+0x1>
     556:	a0 93 bf 40 	sts	0x40BF, r26	; 0x8040bf <_OUTPUT_max+0x2>
     55a:	b0 93 c0 40 	sts	0x40C0, r27	; 0x8040c0 <_OUTPUT_max+0x3>
	
	USART1_init(9600);
     55e:	80 e8       	ldi	r24, 0x80	; 128
     560:	95 e2       	ldi	r25, 0x25	; 37
     562:	0e 94 8e 01 	call	0x31c	; 0x31c <USART1_init>
	I2C_0_master_initialization();
     566:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <I2C_0_master_initialization>
     56a:	08 95       	ret

0000056c <Pressure_read>:
	
}

float Pressure_read(void){
     56c:	8f 92       	push	r8
     56e:	9f 92       	push	r9
     570:	af 92       	push	r10
     572:	bf 92       	push	r11
     574:	cf 92       	push	r12
     576:	df 92       	push	r13
     578:	ef 92       	push	r14
     57a:	ff 92       	push	r15
     57c:	cf 93       	push	r28
     57e:	df 93       	push	r29

		
		
		I2C_0_sendAddress(MPRLS, 0);
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	88 e1       	ldi	r24, 0x18	; 24
     584:	0e 94 ff 01 	call	0x3fe	; 0x3fe <I2C_0_sendAddress>
		I2C_0_sendData(0xAA);
     588:	8a ea       	ldi	r24, 0xAA	; 170
     58a:	0e 94 47 02 	call	0x48e	; 0x48e <I2C_0_sendData>
		I2C_0_sendData(0x00);
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	0e 94 47 02 	call	0x48e	; 0x48e <I2C_0_sendData>
		I2C_0_sendData(0x00);
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	0e 94 47 02 	call	0x48e	; 0x48e <I2C_0_sendData>
		I2C_0_stop_transmission();
     59a:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <I2C_0_stop_transmission>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     59e:	8f e0       	ldi	r24, 0x0F	; 15
     5a0:	97 e2       	ldi	r25, 0x27	; 39
     5a2:	01 97       	sbiw	r24, 0x01	; 1
     5a4:	f1 f7       	brne	.-4      	; 0x5a2 <Pressure_read+0x36>
     5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <Pressure_read+0x3c>
     5a8:	00 00       	nop
		_delay_ms(10);
		
		I2C_0_sendAddress(MPRLS, 1);
     5aa:	61 e0       	ldi	r22, 0x01	; 1
     5ac:	88 e1       	ldi	r24, 0x18	; 24
     5ae:	0e 94 ff 01 	call	0x3fe	; 0x3fe <I2C_0_sendAddress>
		sdata = I2C_0_recieveData(); //status byte send by sensor
     5b2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <I2C_0_recieveData>
     5b6:	80 93 b4 40 	sts	0x40B4, r24	; 0x8040b4 <sdata>
		T24BitValue =I2C_0_recieveData();
     5ba:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <I2C_0_recieveData>
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	a0 e0       	ldi	r26, 0x00	; 0
     5c2:	b0 e0       	ldi	r27, 0x00	; 0
		T24BitValue <<=8;
     5c4:	ba 2f       	mov	r27, r26
     5c6:	a9 2f       	mov	r26, r25
     5c8:	98 2f       	mov	r25, r24
     5ca:	88 27       	eor	r24, r24
     5cc:	80 93 b5 40 	sts	0x40B5, r24	; 0x8040b5 <T24BitValue>
     5d0:	90 93 b6 40 	sts	0x40B6, r25	; 0x8040b6 <T24BitValue+0x1>
     5d4:	a0 93 b7 40 	sts	0x40B7, r26	; 0x8040b7 <T24BitValue+0x2>
     5d8:	b0 93 b8 40 	sts	0x40B8, r27	; 0x8040b8 <T24BitValue+0x3>
		T24BitValue |=I2C_0_recieveData();
     5dc:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <I2C_0_recieveData>
     5e0:	40 91 b5 40 	lds	r20, 0x40B5	; 0x8040b5 <T24BitValue>
     5e4:	50 91 b6 40 	lds	r21, 0x40B6	; 0x8040b6 <T24BitValue+0x1>
     5e8:	60 91 b7 40 	lds	r22, 0x40B7	; 0x8040b7 <T24BitValue+0x2>
     5ec:	70 91 b8 40 	lds	r23, 0x40B8	; 0x8040b8 <T24BitValue+0x3>
     5f0:	48 2b       	or	r20, r24
		T24BitValue <<=8;
     5f2:	76 2f       	mov	r23, r22
     5f4:	65 2f       	mov	r22, r21
     5f6:	54 2f       	mov	r21, r20
     5f8:	44 27       	eor	r20, r20
     5fa:	40 93 b5 40 	sts	0x40B5, r20	; 0x8040b5 <T24BitValue>
     5fe:	50 93 b6 40 	sts	0x40B6, r21	; 0x8040b6 <T24BitValue+0x1>
     602:	60 93 b7 40 	sts	0x40B7, r22	; 0x8040b7 <T24BitValue+0x2>
     606:	70 93 b8 40 	sts	0x40B8, r23	; 0x8040b8 <T24BitValue+0x3>
		T24BitValue |=I2C_0_recieveData();
     60a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <I2C_0_recieveData>
     60e:	40 91 b5 40 	lds	r20, 0x40B5	; 0x8040b5 <T24BitValue>
     612:	50 91 b6 40 	lds	r21, 0x40B6	; 0x8040b6 <T24BitValue+0x1>
     616:	60 91 b7 40 	lds	r22, 0x40B7	; 0x8040b7 <T24BitValue+0x2>
     61a:	70 91 b8 40 	lds	r23, 0x40B8	; 0x8040b8 <T24BitValue+0x3>
     61e:	48 2b       	or	r20, r24
     620:	40 93 b5 40 	sts	0x40B5, r20	; 0x8040b5 <T24BitValue>
     624:	50 93 b6 40 	sts	0x40B6, r21	; 0x8040b6 <T24BitValue+0x1>
     628:	60 93 b7 40 	sts	0x40B7, r22	; 0x8040b7 <T24BitValue+0x2>
     62c:	70 93 b8 40 	sts	0x40B8, r23	; 0x8040b8 <T24BitValue+0x3>
		
		TWI0.MCTRLB |= (1 << 2);   // Send NACK
     630:	e0 e0       	ldi	r30, 0x00	; 0
     632:	f9 e0       	ldi	r31, 0x09	; 9
     634:	84 81       	ldd	r24, Z+4	; 0x04
     636:	84 60       	ori	r24, 0x04	; 4
     638:	84 83       	std	Z+4, r24	; 0x04
     63a:	8f e0       	ldi	r24, 0x0F	; 15
     63c:	97 e2       	ldi	r25, 0x27	; 39
     63e:	01 97       	sbiw	r24, 0x01	; 1
     640:	f1 f7       	brne	.-4      	; 0x63e <Pressure_read+0xd2>
     642:	00 c0       	rjmp	.+0      	; 0x644 <Pressure_read+0xd8>
     644:	00 00       	nop
		//I2C_0_stop_transmission();
		_delay_ms(10);
				

		psi = (T24BitValue - _OUTPUT_min) * (_PSI_max - _PSI_min);
     646:	80 90 14 41 	lds	r8, 0x4114	; 0x804114 <_OUTPUT_min>
     64a:	90 90 15 41 	lds	r9, 0x4115	; 0x804115 <_OUTPUT_min+0x1>
     64e:	a0 90 16 41 	lds	r10, 0x4116	; 0x804116 <_OUTPUT_min+0x2>
     652:	b0 90 17 41 	lds	r11, 0x4117	; 0x804117 <_OUTPUT_min+0x3>
     656:	80 91 b5 40 	lds	r24, 0x40B5	; 0x8040b5 <T24BitValue>
     65a:	90 91 b6 40 	lds	r25, 0x40B6	; 0x8040b6 <T24BitValue+0x1>
     65e:	a0 91 b7 40 	lds	r26, 0x40B7	; 0x8040b7 <T24BitValue+0x2>
     662:	b0 91 b8 40 	lds	r27, 0x40B8	; 0x8040b8 <T24BitValue+0x3>
     666:	9c 01       	movw	r18, r24
     668:	ad 01       	movw	r20, r26
     66a:	28 19       	sub	r18, r8
     66c:	39 09       	sbc	r19, r9
     66e:	4a 09       	sbc	r20, r10
     670:	5b 09       	sbc	r21, r11
     672:	c0 91 b2 40 	lds	r28, 0x40B2	; 0x8040b2 <_PSI_min>
     676:	d0 91 b3 40 	lds	r29, 0x40B3	; 0x8040b3 <_PSI_min+0x1>
     67a:	a0 91 09 40 	lds	r26, 0x4009	; 0x804009 <_PSI_max>
     67e:	b0 91 0a 40 	lds	r27, 0x400A	; 0x80400a <_PSI_max+0x1>
     682:	ac 1b       	sub	r26, r28
     684:	bd 0b       	sbc	r27, r29
     686:	0e 94 39 09 	call	0x1272	; 0x1272 <__muluhisi3>
     68a:	0e 94 71 06 	call	0xce2	; 0xce2 <__floatunsisf>
     68e:	6b 01       	movw	r12, r22
     690:	7c 01       	movw	r14, r24
		psi /= (_OUTPUT_max - _OUTPUT_min);
     692:	80 91 bd 40 	lds	r24, 0x40BD	; 0x8040bd <_OUTPUT_max>
     696:	90 91 be 40 	lds	r25, 0x40BE	; 0x8040be <_OUTPUT_max+0x1>
     69a:	a0 91 bf 40 	lds	r26, 0x40BF	; 0x8040bf <_OUTPUT_max+0x2>
     69e:	b0 91 c0 40 	lds	r27, 0x40C0	; 0x8040c0 <_OUTPUT_max+0x3>
     6a2:	bc 01       	movw	r22, r24
     6a4:	cd 01       	movw	r24, r26
     6a6:	68 19       	sub	r22, r8
     6a8:	79 09       	sbc	r23, r9
     6aa:	8a 09       	sbc	r24, r10
     6ac:	9b 09       	sbc	r25, r11
     6ae:	0e 94 71 06 	call	0xce2	; 0xce2 <__floatunsisf>
     6b2:	9b 01       	movw	r18, r22
     6b4:	ac 01       	movw	r20, r24
     6b6:	c7 01       	movw	r24, r14
     6b8:	b6 01       	movw	r22, r12
     6ba:	0e 94 c9 05 	call	0xb92	; 0xb92 <__divsf3>
     6be:	6b 01       	movw	r12, r22
     6c0:	7c 01       	movw	r14, r24
		psi += _PSI_min;
     6c2:	be 01       	movw	r22, r28
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 71 06 	call	0xce2	; 0xce2 <__floatunsisf>
     6cc:	a7 01       	movw	r20, r14
     6ce:	96 01       	movw	r18, r12
     6d0:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     6d4:	60 93 ae 40 	sts	0x40AE, r22	; 0x8040ae <psi>
     6d8:	70 93 af 40 	sts	0x40AF, r23	; 0x8040af <psi+0x1>
     6dc:	80 93 b0 40 	sts	0x40B0, r24	; 0x8040b0 <psi+0x2>
     6e0:	90 93 b1 40 	sts	0x40B1, r25	; 0x8040b1 <psi+0x3>
		
		cmh2o = psi*70.307;
     6e4:	2f e2       	ldi	r18, 0x2F	; 47
     6e6:	3d e9       	ldi	r19, 0x9D	; 157
     6e8:	4c e8       	ldi	r20, 0x8C	; 140
     6ea:	52 e4       	ldi	r21, 0x42	; 66
     6ec:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     6f0:	60 93 aa 40 	sts	0x40AA, r22	; 0x8040aa <cmh2o>
     6f4:	70 93 ab 40 	sts	0x40AB, r23	; 0x8040ab <cmh2o+0x1>
     6f8:	80 93 ac 40 	sts	0x40AC, r24	; 0x8040ac <cmh2o+0x2>
     6fc:	90 93 ad 40 	sts	0x40AD, r25	; 0x8040ad <cmh2o+0x3>
		
		if (cmh2o > 1000)
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	4a e7       	ldi	r20, 0x7A	; 122
     706:	54 e4       	ldi	r21, 0x44	; 68
     708:	0e 94 23 07 	call	0xe46	; 0xe46 <__gesf2>
     70c:	18 16       	cp	r1, r24
     70e:	44 f4       	brge	.+16     	; 0x720 <Pressure_read+0x1b4>
		{
			cmh2o = 0;
     710:	10 92 aa 40 	sts	0x40AA, r1	; 0x8040aa <cmh2o>
     714:	10 92 ab 40 	sts	0x40AB, r1	; 0x8040ab <cmh2o+0x1>
     718:	10 92 ac 40 	sts	0x40AC, r1	; 0x8040ac <cmh2o+0x2>
     71c:	10 92 ad 40 	sts	0x40AD, r1	; 0x8040ad <cmh2o+0x3>
		}
		
		USART1_sendFloat(cmh2o, 1);
     720:	60 91 aa 40 	lds	r22, 0x40AA	; 0x8040aa <cmh2o>
     724:	70 91 ab 40 	lds	r23, 0x40AB	; 0x8040ab <cmh2o+0x1>
     728:	80 91 ac 40 	lds	r24, 0x40AC	; 0x8040ac <cmh2o+0x2>
     72c:	90 91 ad 40 	lds	r25, 0x40AD	; 0x8040ad <cmh2o+0x3>
     730:	41 e0       	ldi	r20, 0x01	; 1
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <USART1_sendFloat>
		return cmh2o;
     738:	60 91 aa 40 	lds	r22, 0x40AA	; 0x8040aa <cmh2o>
     73c:	70 91 ab 40 	lds	r23, 0x40AB	; 0x8040ab <cmh2o+0x1>
     740:	80 91 ac 40 	lds	r24, 0x40AC	; 0x8040ac <cmh2o+0x2>
     744:	90 91 ad 40 	lds	r25, 0x40AD	; 0x8040ad <cmh2o+0x3>
		
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	ff 90       	pop	r15
     74e:	ef 90       	pop	r14
     750:	df 90       	pop	r13
     752:	cf 90       	pop	r12
     754:	bf 90       	pop	r11
     756:	af 90       	pop	r10
     758:	9f 90       	pop	r9
     75a:	8f 90       	pop	r8
     75c:	08 95       	ret

0000075e <TCA0_PWM_init>:
void TCA0_PWM_init(void)
{
//sei();
/* First PWM on PA1 PIN */
/* Direction set and set output to high */
PORTA.DIR |= (1 << 0);
     75e:	e0 e0       	ldi	r30, 0x00	; 0
     760:	f4 e0       	ldi	r31, 0x04	; 4
     762:	80 81       	ld	r24, Z
     764:	81 60       	ori	r24, 0x01	; 1
     766:	80 83       	st	Z, r24
PORTA.PIN0CTRL |= (1 << 3);
     768:	80 89       	ldd	r24, Z+16	; 0x10
     76a:	88 60       	ori	r24, 0x08	; 8
     76c:	80 8b       	std	Z+16, r24	; 0x10
//PORTA.OUTSET |= (1 << 0);
TCA0.SINGLE.PER = 3999;//lculation for 1ms
     76e:	e0 e0       	ldi	r30, 0x00	; 0
     770:	fa e0       	ldi	r31, 0x0A	; 10
     772:	8f e9       	ldi	r24, 0x9F	; 159
     774:	9f e0       	ldi	r25, 0x0F	; 15
     776:	86 a3       	std	Z+38, r24	; 0x26
     778:	97 a3       	std	Z+39, r25	; 0x27

TCA0.SINGLE.CNT = 0;
     77a:	10 a2       	std	Z+32, r1	; 0x20
     77c:	11 a2       	std	Z+33, r1	; 0x21

TCA0.SINGLE.CTRLA |= (0x0 << 1); //Ftca = fclk_per
     77e:	80 81       	ld	r24, Z
     780:	80 83       	st	Z, r24
TCA0.SINGLE.CTRLB |= (1 << 4); // compare 0 enable
     782:	81 81       	ldd	r24, Z+1	; 0x01
     784:	80 61       	ori	r24, 0x10	; 16
     786:	81 83       	std	Z+1, r24	; 0x01
TCA0.SINGLE.CTRLB |= (0x3 << 0); // Single slope PWM
     788:	81 81       	ldd	r24, Z+1	; 0x01
     78a:	83 60       	ori	r24, 0x03	; 3
     78c:	81 83       	std	Z+1, r24	; 0x01
TCA0.SINGLE.CTRLA |= (1 << 0); // Enable PWM
     78e:	80 81       	ld	r24, Z
     790:	81 60       	ori	r24, 0x01	; 1
     792:	80 83       	st	Z, r24
     794:	08 95       	ret

00000796 <PWM_Condition>:

}

void PWM_Condition(void)
{
if (dutyCycle >3999)
     796:	80 91 9e 40 	lds	r24, 0x409E	; 0x80409e <__data_end>
     79a:	90 91 9f 40 	lds	r25, 0x409F	; 0x80409f <__data_end+0x1>
     79e:	a0 91 a0 40 	lds	r26, 0x40A0	; 0x8040a0 <__data_end+0x2>
     7a2:	b0 91 a1 40 	lds	r27, 0x40A1	; 0x8040a1 <__data_end+0x3>
     7a6:	80 3a       	cpi	r24, 0xA0	; 160
     7a8:	9f 40       	sbci	r25, 0x0F	; 15
     7aa:	a1 05       	cpc	r26, r1
     7ac:	b1 05       	cpc	r27, r1
     7ae:	60 f0       	brcs	.+24     	; 0x7c8 <PWM_Condition+0x32>
{
dutyCycle  = 3999;
     7b0:	8f e9       	ldi	r24, 0x9F	; 159
     7b2:	9f e0       	ldi	r25, 0x0F	; 15
     7b4:	a0 e0       	ldi	r26, 0x00	; 0
     7b6:	b0 e0       	ldi	r27, 0x00	; 0
     7b8:	80 93 9e 40 	sts	0x409E, r24	; 0x80409e <__data_end>
     7bc:	90 93 9f 40 	sts	0x409F, r25	; 0x80409f <__data_end+0x1>
     7c0:	a0 93 a0 40 	sts	0x40A0, r26	; 0x8040a0 <__data_end+0x2>
     7c4:	b0 93 a1 40 	sts	0x40A1, r27	; 0x8040a1 <__data_end+0x3>
     7c8:	08 95       	ret

000007ca <P_control>:
// TCA0.SINGLE.CMP1 = 2500; // Duty cycle

}

void P_control(void)
{
     7ca:	cf 92       	push	r12
     7cc:	df 92       	push	r13
     7ce:	ef 92       	push	r14
     7d0:	ff 92       	push	r15
Kp_error = (Set_pressure + 1) - current_pressure;
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e8       	ldi	r20, 0x80	; 128
     7d8:	5f e3       	ldi	r21, 0x3F	; 63
     7da:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     7de:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     7e2:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     7e6:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     7ea:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     7ee:	20 91 a6 40 	lds	r18, 0x40A6	; 0x8040a6 <current_pressure>
     7f2:	30 91 a7 40 	lds	r19, 0x40A7	; 0x8040a7 <current_pressure+0x1>
     7f6:	40 91 a8 40 	lds	r20, 0x40A8	; 0x8040a8 <current_pressure+0x2>
     7fa:	50 91 a9 40 	lds	r21, 0x40A9	; 0x8040a9 <current_pressure+0x3>
     7fe:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     802:	60 93 a2 40 	sts	0x40A2, r22	; 0x8040a2 <Kp_error>
     806:	70 93 a3 40 	sts	0x40A3, r23	; 0x8040a3 <Kp_error+0x1>
     80a:	80 93 a4 40 	sts	0x40A4, r24	; 0x8040a4 <Kp_error+0x2>
     80e:	90 93 a5 40 	sts	0x40A5, r25	; 0x8040a5 <Kp_error+0x3>
dutyCycle = dutyCycle + (Kp*Kp_error); //OUTPUT ON PA0 PIN
     812:	20 91 05 40 	lds	r18, 0x4005	; 0x804005 <Kp>
     816:	30 91 06 40 	lds	r19, 0x4006	; 0x804006 <Kp+0x1>
     81a:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <Kp+0x2>
     81e:	50 91 08 40 	lds	r21, 0x4008	; 0x804008 <Kp+0x3>
     822:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     826:	6b 01       	movw	r12, r22
     828:	7c 01       	movw	r14, r24
     82a:	60 91 9e 40 	lds	r22, 0x409E	; 0x80409e <__data_end>
     82e:	70 91 9f 40 	lds	r23, 0x409F	; 0x80409f <__data_end+0x1>
     832:	80 91 a0 40 	lds	r24, 0x40A0	; 0x8040a0 <__data_end+0x2>
     836:	90 91 a1 40 	lds	r25, 0x40A1	; 0x8040a1 <__data_end+0x3>
     83a:	0e 94 71 06 	call	0xce2	; 0xce2 <__floatunsisf>
     83e:	a7 01       	movw	r20, r14
     840:	96 01       	movw	r18, r12
     842:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     846:	0e 94 42 06 	call	0xc84	; 0xc84 <__fixunssfsi>
     84a:	60 93 9e 40 	sts	0x409E, r22	; 0x80409e <__data_end>
     84e:	70 93 9f 40 	sts	0x409F, r23	; 0x80409f <__data_end+0x1>
     852:	80 93 a0 40 	sts	0x40A0, r24	; 0x8040a0 <__data_end+0x2>
     856:	90 93 a1 40 	sts	0x40A1, r25	; 0x8040a1 <__data_end+0x3>
PWM_Condition();
     85a:	0e 94 cb 03 	call	0x796	; 0x796 <PWM_Condition>

}
     85e:	ff 90       	pop	r15
     860:	ef 90       	pop	r14
     862:	df 90       	pop	r13
     864:	cf 90       	pop	r12
     866:	08 95       	ret

00000868 <continous_intubation>:
dutyCycle = 0;
}
}

void continous_intubation(void)
{
     868:	8f 92       	push	r8
     86a:	9f 92       	push	r9
     86c:	af 92       	push	r10
     86e:	bf 92       	push	r11
     870:	cf 92       	push	r12
     872:	df 92       	push	r13
     874:	ef 92       	push	r14
     876:	ff 92       	push	r15
	current_pressure = Pressure_read();
     878:	0e 94 b6 02 	call	0x56c	; 0x56c <Pressure_read>
     87c:	60 93 a6 40 	sts	0x40A6, r22	; 0x8040a6 <current_pressure>
     880:	70 93 a7 40 	sts	0x40A7, r23	; 0x8040a7 <current_pressure+0x1>
     884:	80 93 a8 40 	sts	0x40A8, r24	; 0x8040a8 <current_pressure+0x2>
     888:	90 93 a9 40 	sts	0x40A9, r25	; 0x8040a9 <current_pressure+0x3>
	USART1_sendFloat(current_pressure , 1);
     88c:	41 e0       	ldi	r20, 0x01	; 1
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <USART1_sendFloat>
	P_control();
     894:	0e 94 e5 03 	call	0x7ca	; 0x7ca <P_control>
	
	if (current_pressure <= Set_pressure - 2)
     898:	20 e0       	ldi	r18, 0x00	; 0
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	40 e0       	ldi	r20, 0x00	; 0
     89e:	50 e4       	ldi	r21, 0x40	; 64
     8a0:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     8a4:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     8a8:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     8ac:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     8b0:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     8b4:	20 91 a6 40 	lds	r18, 0x40A6	; 0x8040a6 <current_pressure>
     8b8:	30 91 a7 40 	lds	r19, 0x40A7	; 0x8040a7 <current_pressure+0x1>
     8bc:	40 91 a8 40 	lds	r20, 0x40A8	; 0x8040a8 <current_pressure+0x2>
     8c0:	50 91 a9 40 	lds	r21, 0x40A9	; 0x8040a9 <current_pressure+0x3>
     8c4:	0e 94 23 07 	call	0xe46	; 0xe46 <__gesf2>
     8c8:	88 23       	and	r24, r24
     8ca:	1c f0       	brlt	.+6      	; 0x8d2 <continous_intubation+0x6a>
	{
		low_pressure_flag = true;
     8cc:	81 e0       	ldi	r24, 0x01	; 1
     8ce:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
	}

	if (low_pressure_flag == true)
     8d2:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     8d6:	88 23       	and	r24, r24
     8d8:	09 f4       	brne	.+2      	; 0x8dc <continous_intubation+0x74>
     8da:	61 c0       	rjmp	.+194    	; 0x99e <continous_intubation+0x136>
	{
		dutyCycle = 1999;
     8dc:	8f ec       	ldi	r24, 0xCF	; 207
     8de:	97 e0       	ldi	r25, 0x07	; 7
     8e0:	a0 e0       	ldi	r26, 0x00	; 0
     8e2:	b0 e0       	ldi	r27, 0x00	; 0
     8e4:	80 93 9e 40 	sts	0x409E, r24	; 0x80409e <__data_end>
     8e8:	90 93 9f 40 	sts	0x409F, r25	; 0x80409f <__data_end+0x1>
     8ec:	a0 93 a0 40 	sts	0x40A0, r26	; 0x8040a0 <__data_end+0x2>
     8f0:	b0 93 a1 40 	sts	0x40A1, r27	; 0x8040a1 <__data_end+0x3>
		while (current_pressure <= Set_pressure + 1)
     8f4:	1f c0       	rjmp	.+62     	; 0x934 <continous_intubation+0xcc>
		{
			current_pressure =  Pressure_read();
     8f6:	0e 94 b6 02 	call	0x56c	; 0x56c <Pressure_read>
     8fa:	60 93 a6 40 	sts	0x40A6, r22	; 0x8040a6 <current_pressure>
     8fe:	70 93 a7 40 	sts	0x40A7, r23	; 0x8040a7 <current_pressure+0x1>
     902:	80 93 a8 40 	sts	0x40A8, r24	; 0x8040a8 <current_pressure+0x2>
     906:	90 93 a9 40 	sts	0x40A9, r25	; 0x8040a9 <current_pressure+0x3>

			P_control();
     90a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <P_control>
			// USART1_sendFloat(current_pressure , 1);
			PORTE_OUT &= ~(1 << 0);				// SOL 1 OFF
     90e:	e4 e8       	ldi	r30, 0x84	; 132
     910:	f4 e0       	ldi	r31, 0x04	; 4
     912:	80 81       	ld	r24, Z
     914:	8e 7f       	andi	r24, 0xFE	; 254
     916:	80 83       	st	Z, r24
			PORTE_OUT |= (1 << 1);					// SOL 2 ON
     918:	80 81       	ld	r24, Z
     91a:	82 60       	ori	r24, 0x02	; 2
     91c:	80 83       	st	Z, r24
			TCA0.SINGLE.CTRLA |= (1 << 0);
     91e:	e0 e0       	ldi	r30, 0x00	; 0
     920:	fa e0       	ldi	r31, 0x0A	; 10
     922:	80 81       	ld	r24, Z
     924:	81 60       	ori	r24, 0x01	; 1
     926:	80 83       	st	Z, r24
		//	USART1_sendString("Increasing Pressure");
			TCA0.SINGLE.CMP0 = dutyCycle;			//MOTOR PWM
     928:	80 91 9e 40 	lds	r24, 0x409E	; 0x80409e <__data_end>
     92c:	90 91 9f 40 	lds	r25, 0x409F	; 0x80409f <__data_end+0x1>
     930:	80 a7       	std	Z+40, r24	; 0x28
     932:	91 a7       	std	Z+41, r25	; 0x29
	}

	if (low_pressure_flag == true)
	{
		dutyCycle = 1999;
		while (current_pressure <= Set_pressure + 1)
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	40 e8       	ldi	r20, 0x80	; 128
     93a:	5f e3       	ldi	r21, 0x3F	; 63
     93c:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     940:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     944:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     948:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     94c:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     950:	20 91 a6 40 	lds	r18, 0x40A6	; 0x8040a6 <current_pressure>
     954:	30 91 a7 40 	lds	r19, 0x40A7	; 0x8040a7 <current_pressure+0x1>
     958:	40 91 a8 40 	lds	r20, 0x40A8	; 0x8040a8 <current_pressure+0x2>
     95c:	50 91 a9 40 	lds	r21, 0x40A9	; 0x8040a9 <current_pressure+0x3>
     960:	0e 94 23 07 	call	0xe46	; 0xe46 <__gesf2>
     964:	88 23       	and	r24, r24
     966:	3c f6       	brge	.-114    	; 0x8f6 <continous_intubation+0x8e>
			PORTE_OUT |= (1 << 1);					// SOL 2 ON
			TCA0.SINGLE.CTRLA |= (1 << 0);
		//	USART1_sendString("Increasing Pressure");
			TCA0.SINGLE.CMP0 = dutyCycle;			//MOTOR PWM
		}
		low_pressure_flag = false;
     968:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
     96c:	18 c0       	rjmp	.+48     	; 0x99e <continous_intubation+0x136>

	}
	while (current_pressure > Set_pressure + 2)
	{
		current_pressure =  Pressure_read();
     96e:	0e 94 b6 02 	call	0x56c	; 0x56c <Pressure_read>
     972:	60 93 a6 40 	sts	0x40A6, r22	; 0x8040a6 <current_pressure>
     976:	70 93 a7 40 	sts	0x40A7, r23	; 0x8040a7 <current_pressure+0x1>
     97a:	80 93 a8 40 	sts	0x40A8, r24	; 0x8040a8 <current_pressure+0x2>
     97e:	90 93 a9 40 	sts	0x40A9, r25	; 0x8040a9 <current_pressure+0x3>
		// USART1_sendFloat(current_pressure , 1);
		P_control();
     982:	0e 94 e5 03 	call	0x7ca	; 0x7ca <P_control>
		// PORTE_OUT |= (1 << 0);					// SOL 1 ON
		PORTE_OUT &= ~(1 << 1);					// SOL 2 OFF
     986:	e4 e8       	ldi	r30, 0x84	; 132
     988:	f4 e0       	ldi	r31, 0x04	; 4
     98a:	80 81       	ld	r24, Z
     98c:	8d 7f       	andi	r24, 0xFD	; 253
     98e:	80 83       	st	Z, r24
		TCA0.SINGLE.CTRLA |= (1 << 0);
     990:	e0 e0       	ldi	r30, 0x00	; 0
     992:	fa e0       	ldi	r31, 0x0A	; 10
     994:	80 81       	ld	r24, Z
     996:	81 60       	ori	r24, 0x01	; 1
     998:	80 83       	st	Z, r24
		TCA0.SINGLE.CMP0 = 0;//dutyCycle;			//MOTOR PWM
     99a:	10 a6       	std	Z+40, r1	; 0x28
     99c:	11 a6       	std	Z+41, r1	; 0x29
			TCA0.SINGLE.CMP0 = dutyCycle;			//MOTOR PWM
		}
		low_pressure_flag = false;

	}
	while (current_pressure > Set_pressure + 2)
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 e0       	ldi	r20, 0x00	; 0
     9a4:	50 e4       	ldi	r21, 0x40	; 64
     9a6:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     9aa:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     9ae:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     9b2:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     9b6:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     9ba:	20 91 a6 40 	lds	r18, 0x40A6	; 0x8040a6 <current_pressure>
     9be:	30 91 a7 40 	lds	r19, 0x40A7	; 0x8040a7 <current_pressure+0x1>
     9c2:	40 91 a8 40 	lds	r20, 0x40A8	; 0x8040a8 <current_pressure+0x2>
     9c6:	50 91 a9 40 	lds	r21, 0x40A9	; 0x8040a9 <current_pressure+0x3>
     9ca:	0e 94 c4 05 	call	0xb88	; 0xb88 <__cmpsf2>
     9ce:	88 23       	and	r24, r24
     9d0:	74 f2       	brlt	.-100    	; 0x96e <continous_intubation+0x106>
     9d2:	1e c0       	rjmp	.+60     	; 0xa10 <continous_intubation+0x1a8>
		
	}
	
	while (current_pressure <= (Set_pressure + 2) && current_pressure >= (Set_pressure - 2))
	{
		current_pressure =  Pressure_read();
     9d4:	0e 94 b6 02 	call	0x56c	; 0x56c <Pressure_read>
     9d8:	60 93 a6 40 	sts	0x40A6, r22	; 0x8040a6 <current_pressure>
     9dc:	70 93 a7 40 	sts	0x40A7, r23	; 0x8040a7 <current_pressure+0x1>
     9e0:	80 93 a8 40 	sts	0x40A8, r24	; 0x8040a8 <current_pressure+0x2>
     9e4:	90 93 a9 40 	sts	0x40A9, r25	; 0x8040a9 <current_pressure+0x3>
		// USART1_sendFloat(current_pressure , 1);
		PORTE_OUT &= ~(1 << 0);					// SOL 1 OFF
     9e8:	e4 e8       	ldi	r30, 0x84	; 132
     9ea:	f4 e0       	ldi	r31, 0x04	; 4
     9ec:	80 81       	ld	r24, Z
     9ee:	8e 7f       	andi	r24, 0xFE	; 254
     9f0:	80 83       	st	Z, r24
		PORTE_OUT &= ~(1 << 1);					// SOL 2 OFF
     9f2:	80 81       	ld	r24, Z
     9f4:	8d 7f       	andi	r24, 0xFD	; 253
     9f6:	80 83       	st	Z, r24
		//TCA0.SINGLE.CTRLA &= ~(1 << 0);		// MOTOR OFF
		dutyCycle = 0;
     9f8:	10 92 9e 40 	sts	0x409E, r1	; 0x80409e <__data_end>
     9fc:	10 92 9f 40 	sts	0x409F, r1	; 0x80409f <__data_end+0x1>
     a00:	10 92 a0 40 	sts	0x40A0, r1	; 0x8040a0 <__data_end+0x2>
     a04:	10 92 a1 40 	sts	0x40A1, r1	; 0x8040a1 <__data_end+0x3>
		TCA0.SINGLE.CMP0 = dutyCycle;
     a08:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     a0c:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
		TCA0.SINGLE.CTRLA |= (1 << 0);
		TCA0.SINGLE.CMP0 = 0;//dutyCycle;			//MOTOR PWM
		
	}
	
	while (current_pressure <= (Set_pressure + 2) && current_pressure >= (Set_pressure - 2))
     a10:	80 90 01 40 	lds	r8, 0x4001	; 0x804001 <Set_pressure>
     a14:	90 90 02 40 	lds	r9, 0x4002	; 0x804002 <Set_pressure+0x1>
     a18:	a0 90 03 40 	lds	r10, 0x4003	; 0x804003 <Set_pressure+0x2>
     a1c:	b0 90 04 40 	lds	r11, 0x4004	; 0x804004 <Set_pressure+0x3>
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	40 e0       	ldi	r20, 0x00	; 0
     a26:	50 e4       	ldi	r21, 0x40	; 64
     a28:	c5 01       	movw	r24, r10
     a2a:	b4 01       	movw	r22, r8
     a2c:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     a30:	c0 90 a6 40 	lds	r12, 0x40A6	; 0x8040a6 <current_pressure>
     a34:	d0 90 a7 40 	lds	r13, 0x40A7	; 0x8040a7 <current_pressure+0x1>
     a38:	e0 90 a8 40 	lds	r14, 0x40A8	; 0x8040a8 <current_pressure+0x2>
     a3c:	f0 90 a9 40 	lds	r15, 0x40A9	; 0x8040a9 <current_pressure+0x3>
     a40:	a7 01       	movw	r20, r14
     a42:	96 01       	movw	r18, r12
     a44:	0e 94 23 07 	call	0xe46	; 0xe46 <__gesf2>
     a48:	88 23       	and	r24, r24
     a4a:	8c f0       	brlt	.+34     	; 0xa6e <continous_intubation+0x206>
     a4c:	20 e0       	ldi	r18, 0x00	; 0
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	40 e0       	ldi	r20, 0x00	; 0
     a52:	50 e4       	ldi	r21, 0x40	; 64
     a54:	c5 01       	movw	r24, r10
     a56:	b4 01       	movw	r22, r8
     a58:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     a5c:	9b 01       	movw	r18, r22
     a5e:	ac 01       	movw	r20, r24
     a60:	c7 01       	movw	r24, r14
     a62:	b6 01       	movw	r22, r12
     a64:	0e 94 23 07 	call	0xe46	; 0xe46 <__gesf2>
     a68:	88 23       	and	r24, r24
     a6a:	0c f0       	brlt	.+2      	; 0xa6e <continous_intubation+0x206>
     a6c:	b3 cf       	rjmp	.-154    	; 0x9d4 <continous_intubation+0x16c>
		PORTE_OUT &= ~(1 << 1);					// SOL 2 OFF
		//TCA0.SINGLE.CTRLA &= ~(1 << 0);		// MOTOR OFF
		dutyCycle = 0;
		TCA0.SINGLE.CMP0 = dutyCycle;
	}
}
     a6e:	ff 90       	pop	r15
     a70:	ef 90       	pop	r14
     a72:	df 90       	pop	r13
     a74:	cf 90       	pop	r12
     a76:	bf 90       	pop	r11
     a78:	af 90       	pop	r10
     a7a:	9f 90       	pop	r9
     a7c:	8f 90       	pop	r8
     a7e:	08 95       	ret

00000a80 <main>:



int main(void)
{
  USART1_init(9600);
     a80:	80 e8       	ldi	r24, 0x80	; 128
     a82:	95 e2       	ldi	r25, 0x25	; 37
     a84:	0e 94 8e 01 	call	0x31c	; 0x31c <USART1_init>
  Pressure_init();
     a88:	0e 94 8f 02 	call	0x51e	; 0x51e <Pressure_init>
  TCA0_PWM_init();
     a8c:	0e 94 af 03 	call	0x75e	; 0x75e <TCA0_PWM_init>
    {


 

 USART1_sendFloat(current_pressure, 2);
     a90:	60 91 a6 40 	lds	r22, 0x40A6	; 0x8040a6 <current_pressure>
     a94:	70 91 a7 40 	lds	r23, 0x40A7	; 0x8040a7 <current_pressure+0x1>
     a98:	80 91 a8 40 	lds	r24, 0x40A8	; 0x8040a8 <current_pressure+0x2>
     a9c:	90 91 a9 40 	lds	r25, 0x40A9	; 0x8040a9 <current_pressure+0x3>
     aa0:	42 e0       	ldi	r20, 0x02	; 2
     aa2:	50 e0       	ldi	r21, 0x00	; 0
     aa4:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <USART1_sendFloat>
 continous_intubation();
     aa8:	0e 94 34 04 	call	0x868	; 0x868 <continous_intubation>
     aac:	f1 cf       	rjmp	.-30     	; 0xa90 <main+0x10>

00000aae <__subsf3>:
     aae:	50 58       	subi	r21, 0x80	; 128

00000ab0 <__addsf3>:
     ab0:	bb 27       	eor	r27, r27
     ab2:	aa 27       	eor	r26, r26
     ab4:	0e 94 6f 05 	call	0xade	; 0xade <__addsf3x>
     ab8:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__fp_round>
     abc:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fp_pscA>
     ac0:	38 f0       	brcs	.+14     	; 0xad0 <__addsf3+0x20>
     ac2:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__fp_pscB>
     ac6:	20 f0       	brcs	.+8      	; 0xad0 <__addsf3+0x20>
     ac8:	39 f4       	brne	.+14     	; 0xad8 <__addsf3+0x28>
     aca:	9f 3f       	cpi	r25, 0xFF	; 255
     acc:	19 f4       	brne	.+6      	; 0xad4 <__addsf3+0x24>
     ace:	26 f4       	brtc	.+8      	; 0xad8 <__addsf3+0x28>
     ad0:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_nan>
     ad4:	0e f4       	brtc	.+2      	; 0xad8 <__addsf3+0x28>
     ad6:	e0 95       	com	r30
     ad8:	e7 fb       	bst	r30, 7
     ada:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>

00000ade <__addsf3x>:
     ade:	e9 2f       	mov	r30, r25
     ae0:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__fp_split3>
     ae4:	58 f3       	brcs	.-42     	; 0xabc <__addsf3+0xc>
     ae6:	ba 17       	cp	r27, r26
     ae8:	62 07       	cpc	r22, r18
     aea:	73 07       	cpc	r23, r19
     aec:	84 07       	cpc	r24, r20
     aee:	95 07       	cpc	r25, r21
     af0:	20 f0       	brcs	.+8      	; 0xafa <__addsf3x+0x1c>
     af2:	79 f4       	brne	.+30     	; 0xb12 <__addsf3x+0x34>
     af4:	a6 f5       	brtc	.+104    	; 0xb5e <__addsf3x+0x80>
     af6:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_zero>
     afa:	0e f4       	brtc	.+2      	; 0xafe <__addsf3x+0x20>
     afc:	e0 95       	com	r30
     afe:	0b 2e       	mov	r0, r27
     b00:	ba 2f       	mov	r27, r26
     b02:	a0 2d       	mov	r26, r0
     b04:	0b 01       	movw	r0, r22
     b06:	b9 01       	movw	r22, r18
     b08:	90 01       	movw	r18, r0
     b0a:	0c 01       	movw	r0, r24
     b0c:	ca 01       	movw	r24, r20
     b0e:	a0 01       	movw	r20, r0
     b10:	11 24       	eor	r1, r1
     b12:	ff 27       	eor	r31, r31
     b14:	59 1b       	sub	r21, r25
     b16:	99 f0       	breq	.+38     	; 0xb3e <__addsf3x+0x60>
     b18:	59 3f       	cpi	r21, 0xF9	; 249
     b1a:	50 f4       	brcc	.+20     	; 0xb30 <__addsf3x+0x52>
     b1c:	50 3e       	cpi	r21, 0xE0	; 224
     b1e:	68 f1       	brcs	.+90     	; 0xb7a <__addsf3x+0x9c>
     b20:	1a 16       	cp	r1, r26
     b22:	f0 40       	sbci	r31, 0x00	; 0
     b24:	a2 2f       	mov	r26, r18
     b26:	23 2f       	mov	r18, r19
     b28:	34 2f       	mov	r19, r20
     b2a:	44 27       	eor	r20, r20
     b2c:	58 5f       	subi	r21, 0xF8	; 248
     b2e:	f3 cf       	rjmp	.-26     	; 0xb16 <__addsf3x+0x38>
     b30:	46 95       	lsr	r20
     b32:	37 95       	ror	r19
     b34:	27 95       	ror	r18
     b36:	a7 95       	ror	r26
     b38:	f0 40       	sbci	r31, 0x00	; 0
     b3a:	53 95       	inc	r21
     b3c:	c9 f7       	brne	.-14     	; 0xb30 <__addsf3x+0x52>
     b3e:	7e f4       	brtc	.+30     	; 0xb5e <__addsf3x+0x80>
     b40:	1f 16       	cp	r1, r31
     b42:	ba 0b       	sbc	r27, r26
     b44:	62 0b       	sbc	r22, r18
     b46:	73 0b       	sbc	r23, r19
     b48:	84 0b       	sbc	r24, r20
     b4a:	ba f0       	brmi	.+46     	; 0xb7a <__addsf3x+0x9c>
     b4c:	91 50       	subi	r25, 0x01	; 1
     b4e:	a1 f0       	breq	.+40     	; 0xb78 <__addsf3x+0x9a>
     b50:	ff 0f       	add	r31, r31
     b52:	bb 1f       	adc	r27, r27
     b54:	66 1f       	adc	r22, r22
     b56:	77 1f       	adc	r23, r23
     b58:	88 1f       	adc	r24, r24
     b5a:	c2 f7       	brpl	.-16     	; 0xb4c <__addsf3x+0x6e>
     b5c:	0e c0       	rjmp	.+28     	; 0xb7a <__addsf3x+0x9c>
     b5e:	ba 0f       	add	r27, r26
     b60:	62 1f       	adc	r22, r18
     b62:	73 1f       	adc	r23, r19
     b64:	84 1f       	adc	r24, r20
     b66:	48 f4       	brcc	.+18     	; 0xb7a <__addsf3x+0x9c>
     b68:	87 95       	ror	r24
     b6a:	77 95       	ror	r23
     b6c:	67 95       	ror	r22
     b6e:	b7 95       	ror	r27
     b70:	f7 95       	ror	r31
     b72:	9e 3f       	cpi	r25, 0xFE	; 254
     b74:	08 f0       	brcs	.+2      	; 0xb78 <__addsf3x+0x9a>
     b76:	b0 cf       	rjmp	.-160    	; 0xad8 <__addsf3+0x28>
     b78:	93 95       	inc	r25
     b7a:	88 0f       	add	r24, r24
     b7c:	08 f0       	brcs	.+2      	; 0xb80 <__addsf3x+0xa2>
     b7e:	99 27       	eor	r25, r25
     b80:	ee 0f       	add	r30, r30
     b82:	97 95       	ror	r25
     b84:	87 95       	ror	r24
     b86:	08 95       	ret

00000b88 <__cmpsf2>:
     b88:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fp_cmp>
     b8c:	08 f4       	brcc	.+2      	; 0xb90 <__cmpsf2+0x8>
     b8e:	81 e0       	ldi	r24, 0x01	; 1
     b90:	08 95       	ret

00000b92 <__divsf3>:
     b92:	0e 94 dd 05 	call	0xbba	; 0xbba <__divsf3x>
     b96:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__fp_round>
     b9a:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__fp_pscB>
     b9e:	58 f0       	brcs	.+22     	; 0xbb6 <__divsf3+0x24>
     ba0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fp_pscA>
     ba4:	40 f0       	brcs	.+16     	; 0xbb6 <__divsf3+0x24>
     ba6:	29 f4       	brne	.+10     	; 0xbb2 <__divsf3+0x20>
     ba8:	5f 3f       	cpi	r21, 0xFF	; 255
     baa:	29 f0       	breq	.+10     	; 0xbb6 <__divsf3+0x24>
     bac:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>
     bb0:	51 11       	cpse	r21, r1
     bb2:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fp_szero>
     bb6:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_nan>

00000bba <__divsf3x>:
     bba:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__fp_split3>
     bbe:	68 f3       	brcs	.-38     	; 0xb9a <__divsf3+0x8>

00000bc0 <__divsf3_pse>:
     bc0:	99 23       	and	r25, r25
     bc2:	b1 f3       	breq	.-20     	; 0xbb0 <__divsf3+0x1e>
     bc4:	55 23       	and	r21, r21
     bc6:	91 f3       	breq	.-28     	; 0xbac <__divsf3+0x1a>
     bc8:	95 1b       	sub	r25, r21
     bca:	55 0b       	sbc	r21, r21
     bcc:	bb 27       	eor	r27, r27
     bce:	aa 27       	eor	r26, r26
     bd0:	62 17       	cp	r22, r18
     bd2:	73 07       	cpc	r23, r19
     bd4:	84 07       	cpc	r24, r20
     bd6:	38 f0       	brcs	.+14     	; 0xbe6 <__divsf3_pse+0x26>
     bd8:	9f 5f       	subi	r25, 0xFF	; 255
     bda:	5f 4f       	sbci	r21, 0xFF	; 255
     bdc:	22 0f       	add	r18, r18
     bde:	33 1f       	adc	r19, r19
     be0:	44 1f       	adc	r20, r20
     be2:	aa 1f       	adc	r26, r26
     be4:	a9 f3       	breq	.-22     	; 0xbd0 <__divsf3_pse+0x10>
     be6:	35 d0       	rcall	.+106    	; 0xc52 <__divsf3_pse+0x92>
     be8:	0e 2e       	mov	r0, r30
     bea:	3a f0       	brmi	.+14     	; 0xbfa <__divsf3_pse+0x3a>
     bec:	e0 e8       	ldi	r30, 0x80	; 128
     bee:	32 d0       	rcall	.+100    	; 0xc54 <__divsf3_pse+0x94>
     bf0:	91 50       	subi	r25, 0x01	; 1
     bf2:	50 40       	sbci	r21, 0x00	; 0
     bf4:	e6 95       	lsr	r30
     bf6:	00 1c       	adc	r0, r0
     bf8:	ca f7       	brpl	.-14     	; 0xbec <__divsf3_pse+0x2c>
     bfa:	2b d0       	rcall	.+86     	; 0xc52 <__divsf3_pse+0x92>
     bfc:	fe 2f       	mov	r31, r30
     bfe:	29 d0       	rcall	.+82     	; 0xc52 <__divsf3_pse+0x92>
     c00:	66 0f       	add	r22, r22
     c02:	77 1f       	adc	r23, r23
     c04:	88 1f       	adc	r24, r24
     c06:	bb 1f       	adc	r27, r27
     c08:	26 17       	cp	r18, r22
     c0a:	37 07       	cpc	r19, r23
     c0c:	48 07       	cpc	r20, r24
     c0e:	ab 07       	cpc	r26, r27
     c10:	b0 e8       	ldi	r27, 0x80	; 128
     c12:	09 f0       	breq	.+2      	; 0xc16 <__divsf3_pse+0x56>
     c14:	bb 0b       	sbc	r27, r27
     c16:	80 2d       	mov	r24, r0
     c18:	bf 01       	movw	r22, r30
     c1a:	ff 27       	eor	r31, r31
     c1c:	93 58       	subi	r25, 0x83	; 131
     c1e:	5f 4f       	sbci	r21, 0xFF	; 255
     c20:	3a f0       	brmi	.+14     	; 0xc30 <__divsf3_pse+0x70>
     c22:	9e 3f       	cpi	r25, 0xFE	; 254
     c24:	51 05       	cpc	r21, r1
     c26:	78 f0       	brcs	.+30     	; 0xc46 <__divsf3_pse+0x86>
     c28:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>
     c2c:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fp_szero>
     c30:	5f 3f       	cpi	r21, 0xFF	; 255
     c32:	e4 f3       	brlt	.-8      	; 0xc2c <__divsf3_pse+0x6c>
     c34:	98 3e       	cpi	r25, 0xE8	; 232
     c36:	d4 f3       	brlt	.-12     	; 0xc2c <__divsf3_pse+0x6c>
     c38:	86 95       	lsr	r24
     c3a:	77 95       	ror	r23
     c3c:	67 95       	ror	r22
     c3e:	b7 95       	ror	r27
     c40:	f7 95       	ror	r31
     c42:	9f 5f       	subi	r25, 0xFF	; 255
     c44:	c9 f7       	brne	.-14     	; 0xc38 <__divsf3_pse+0x78>
     c46:	88 0f       	add	r24, r24
     c48:	91 1d       	adc	r25, r1
     c4a:	96 95       	lsr	r25
     c4c:	87 95       	ror	r24
     c4e:	97 f9       	bld	r25, 7
     c50:	08 95       	ret
     c52:	e1 e0       	ldi	r30, 0x01	; 1
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	88 1f       	adc	r24, r24
     c5a:	bb 1f       	adc	r27, r27
     c5c:	62 17       	cp	r22, r18
     c5e:	73 07       	cpc	r23, r19
     c60:	84 07       	cpc	r24, r20
     c62:	ba 07       	cpc	r27, r26
     c64:	20 f0       	brcs	.+8      	; 0xc6e <__divsf3_pse+0xae>
     c66:	62 1b       	sub	r22, r18
     c68:	73 0b       	sbc	r23, r19
     c6a:	84 0b       	sbc	r24, r20
     c6c:	ba 0b       	sbc	r27, r26
     c6e:	ee 1f       	adc	r30, r30
     c70:	88 f7       	brcc	.-30     	; 0xc54 <__divsf3_pse+0x94>
     c72:	e0 95       	com	r30
     c74:	08 95       	ret

00000c76 <__fixsfsi>:
     c76:	0e 94 42 06 	call	0xc84	; 0xc84 <__fixunssfsi>
     c7a:	68 94       	set
     c7c:	b1 11       	cpse	r27, r1
     c7e:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fp_szero>
     c82:	08 95       	ret

00000c84 <__fixunssfsi>:
     c84:	0e 94 02 07 	call	0xe04	; 0xe04 <__fp_splitA>
     c88:	88 f0       	brcs	.+34     	; 0xcac <__fixunssfsi+0x28>
     c8a:	9f 57       	subi	r25, 0x7F	; 127
     c8c:	98 f0       	brcs	.+38     	; 0xcb4 <__fixunssfsi+0x30>
     c8e:	b9 2f       	mov	r27, r25
     c90:	99 27       	eor	r25, r25
     c92:	b7 51       	subi	r27, 0x17	; 23
     c94:	b0 f0       	brcs	.+44     	; 0xcc2 <__fixunssfsi+0x3e>
     c96:	e1 f0       	breq	.+56     	; 0xcd0 <__fixunssfsi+0x4c>
     c98:	66 0f       	add	r22, r22
     c9a:	77 1f       	adc	r23, r23
     c9c:	88 1f       	adc	r24, r24
     c9e:	99 1f       	adc	r25, r25
     ca0:	1a f0       	brmi	.+6      	; 0xca8 <__fixunssfsi+0x24>
     ca2:	ba 95       	dec	r27
     ca4:	c9 f7       	brne	.-14     	; 0xc98 <__fixunssfsi+0x14>
     ca6:	14 c0       	rjmp	.+40     	; 0xcd0 <__fixunssfsi+0x4c>
     ca8:	b1 30       	cpi	r27, 0x01	; 1
     caa:	91 f0       	breq	.+36     	; 0xcd0 <__fixunssfsi+0x4c>
     cac:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fp_zero>
     cb0:	b1 e0       	ldi	r27, 0x01	; 1
     cb2:	08 95       	ret
     cb4:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_zero>
     cb8:	67 2f       	mov	r22, r23
     cba:	78 2f       	mov	r23, r24
     cbc:	88 27       	eor	r24, r24
     cbe:	b8 5f       	subi	r27, 0xF8	; 248
     cc0:	39 f0       	breq	.+14     	; 0xcd0 <__fixunssfsi+0x4c>
     cc2:	b9 3f       	cpi	r27, 0xF9	; 249
     cc4:	cc f3       	brlt	.-14     	; 0xcb8 <__fixunssfsi+0x34>
     cc6:	86 95       	lsr	r24
     cc8:	77 95       	ror	r23
     cca:	67 95       	ror	r22
     ccc:	b3 95       	inc	r27
     cce:	d9 f7       	brne	.-10     	; 0xcc6 <__fixunssfsi+0x42>
     cd0:	3e f4       	brtc	.+14     	; 0xce0 <__fixunssfsi+0x5c>
     cd2:	90 95       	com	r25
     cd4:	80 95       	com	r24
     cd6:	70 95       	com	r23
     cd8:	61 95       	neg	r22
     cda:	7f 4f       	sbci	r23, 0xFF	; 255
     cdc:	8f 4f       	sbci	r24, 0xFF	; 255
     cde:	9f 4f       	sbci	r25, 0xFF	; 255
     ce0:	08 95       	ret

00000ce2 <__floatunsisf>:
     ce2:	e8 94       	clt
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <__floatsisf+0x12>

00000ce6 <__floatsisf>:
     ce6:	97 fb       	bst	r25, 7
     ce8:	3e f4       	brtc	.+14     	; 0xcf8 <__floatsisf+0x12>
     cea:	90 95       	com	r25
     cec:	80 95       	com	r24
     cee:	70 95       	com	r23
     cf0:	61 95       	neg	r22
     cf2:	7f 4f       	sbci	r23, 0xFF	; 255
     cf4:	8f 4f       	sbci	r24, 0xFF	; 255
     cf6:	9f 4f       	sbci	r25, 0xFF	; 255
     cf8:	99 23       	and	r25, r25
     cfa:	a9 f0       	breq	.+42     	; 0xd26 <__floatsisf+0x40>
     cfc:	f9 2f       	mov	r31, r25
     cfe:	96 e9       	ldi	r25, 0x96	; 150
     d00:	bb 27       	eor	r27, r27
     d02:	93 95       	inc	r25
     d04:	f6 95       	lsr	r31
     d06:	87 95       	ror	r24
     d08:	77 95       	ror	r23
     d0a:	67 95       	ror	r22
     d0c:	b7 95       	ror	r27
     d0e:	f1 11       	cpse	r31, r1
     d10:	f8 cf       	rjmp	.-16     	; 0xd02 <__floatsisf+0x1c>
     d12:	fa f4       	brpl	.+62     	; 0xd52 <__floatsisf+0x6c>
     d14:	bb 0f       	add	r27, r27
     d16:	11 f4       	brne	.+4      	; 0xd1c <__floatsisf+0x36>
     d18:	60 ff       	sbrs	r22, 0
     d1a:	1b c0       	rjmp	.+54     	; 0xd52 <__floatsisf+0x6c>
     d1c:	6f 5f       	subi	r22, 0xFF	; 255
     d1e:	7f 4f       	sbci	r23, 0xFF	; 255
     d20:	8f 4f       	sbci	r24, 0xFF	; 255
     d22:	9f 4f       	sbci	r25, 0xFF	; 255
     d24:	16 c0       	rjmp	.+44     	; 0xd52 <__floatsisf+0x6c>
     d26:	88 23       	and	r24, r24
     d28:	11 f0       	breq	.+4      	; 0xd2e <__floatsisf+0x48>
     d2a:	96 e9       	ldi	r25, 0x96	; 150
     d2c:	11 c0       	rjmp	.+34     	; 0xd50 <__floatsisf+0x6a>
     d2e:	77 23       	and	r23, r23
     d30:	21 f0       	breq	.+8      	; 0xd3a <__floatsisf+0x54>
     d32:	9e e8       	ldi	r25, 0x8E	; 142
     d34:	87 2f       	mov	r24, r23
     d36:	76 2f       	mov	r23, r22
     d38:	05 c0       	rjmp	.+10     	; 0xd44 <__floatsisf+0x5e>
     d3a:	66 23       	and	r22, r22
     d3c:	71 f0       	breq	.+28     	; 0xd5a <__floatsisf+0x74>
     d3e:	96 e8       	ldi	r25, 0x86	; 134
     d40:	86 2f       	mov	r24, r22
     d42:	70 e0       	ldi	r23, 0x00	; 0
     d44:	60 e0       	ldi	r22, 0x00	; 0
     d46:	2a f0       	brmi	.+10     	; 0xd52 <__floatsisf+0x6c>
     d48:	9a 95       	dec	r25
     d4a:	66 0f       	add	r22, r22
     d4c:	77 1f       	adc	r23, r23
     d4e:	88 1f       	adc	r24, r24
     d50:	da f7       	brpl	.-10     	; 0xd48 <__floatsisf+0x62>
     d52:	88 0f       	add	r24, r24
     d54:	96 95       	lsr	r25
     d56:	87 95       	ror	r24
     d58:	97 f9       	bld	r25, 7
     d5a:	08 95       	ret

00000d5c <__fp_cmp>:
     d5c:	99 0f       	add	r25, r25
     d5e:	00 08       	sbc	r0, r0
     d60:	55 0f       	add	r21, r21
     d62:	aa 0b       	sbc	r26, r26
     d64:	e0 e8       	ldi	r30, 0x80	; 128
     d66:	fe ef       	ldi	r31, 0xFE	; 254
     d68:	16 16       	cp	r1, r22
     d6a:	17 06       	cpc	r1, r23
     d6c:	e8 07       	cpc	r30, r24
     d6e:	f9 07       	cpc	r31, r25
     d70:	c0 f0       	brcs	.+48     	; 0xda2 <__fp_cmp+0x46>
     d72:	12 16       	cp	r1, r18
     d74:	13 06       	cpc	r1, r19
     d76:	e4 07       	cpc	r30, r20
     d78:	f5 07       	cpc	r31, r21
     d7a:	98 f0       	brcs	.+38     	; 0xda2 <__fp_cmp+0x46>
     d7c:	62 1b       	sub	r22, r18
     d7e:	73 0b       	sbc	r23, r19
     d80:	84 0b       	sbc	r24, r20
     d82:	95 0b       	sbc	r25, r21
     d84:	39 f4       	brne	.+14     	; 0xd94 <__fp_cmp+0x38>
     d86:	0a 26       	eor	r0, r26
     d88:	61 f0       	breq	.+24     	; 0xda2 <__fp_cmp+0x46>
     d8a:	23 2b       	or	r18, r19
     d8c:	24 2b       	or	r18, r20
     d8e:	25 2b       	or	r18, r21
     d90:	21 f4       	brne	.+8      	; 0xd9a <__fp_cmp+0x3e>
     d92:	08 95       	ret
     d94:	0a 26       	eor	r0, r26
     d96:	09 f4       	brne	.+2      	; 0xd9a <__fp_cmp+0x3e>
     d98:	a1 40       	sbci	r26, 0x01	; 1
     d9a:	a6 95       	lsr	r26
     d9c:	8f ef       	ldi	r24, 0xFF	; 255
     d9e:	81 1d       	adc	r24, r1
     da0:	81 1d       	adc	r24, r1
     da2:	08 95       	ret

00000da4 <__fp_inf>:
     da4:	97 f9       	bld	r25, 7
     da6:	9f 67       	ori	r25, 0x7F	; 127
     da8:	80 e8       	ldi	r24, 0x80	; 128
     daa:	70 e0       	ldi	r23, 0x00	; 0
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	08 95       	ret

00000db0 <__fp_nan>:
     db0:	9f ef       	ldi	r25, 0xFF	; 255
     db2:	80 ec       	ldi	r24, 0xC0	; 192
     db4:	08 95       	ret

00000db6 <__fp_pscA>:
     db6:	00 24       	eor	r0, r0
     db8:	0a 94       	dec	r0
     dba:	16 16       	cp	r1, r22
     dbc:	17 06       	cpc	r1, r23
     dbe:	18 06       	cpc	r1, r24
     dc0:	09 06       	cpc	r0, r25
     dc2:	08 95       	ret

00000dc4 <__fp_pscB>:
     dc4:	00 24       	eor	r0, r0
     dc6:	0a 94       	dec	r0
     dc8:	12 16       	cp	r1, r18
     dca:	13 06       	cpc	r1, r19
     dcc:	14 06       	cpc	r1, r20
     dce:	05 06       	cpc	r0, r21
     dd0:	08 95       	ret

00000dd2 <__fp_round>:
     dd2:	09 2e       	mov	r0, r25
     dd4:	03 94       	inc	r0
     dd6:	00 0c       	add	r0, r0
     dd8:	11 f4       	brne	.+4      	; 0xdde <__fp_round+0xc>
     dda:	88 23       	and	r24, r24
     ddc:	52 f0       	brmi	.+20     	; 0xdf2 <__fp_round+0x20>
     dde:	bb 0f       	add	r27, r27
     de0:	40 f4       	brcc	.+16     	; 0xdf2 <__fp_round+0x20>
     de2:	bf 2b       	or	r27, r31
     de4:	11 f4       	brne	.+4      	; 0xdea <__fp_round+0x18>
     de6:	60 ff       	sbrs	r22, 0
     de8:	04 c0       	rjmp	.+8      	; 0xdf2 <__fp_round+0x20>
     dea:	6f 5f       	subi	r22, 0xFF	; 255
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	8f 4f       	sbci	r24, 0xFF	; 255
     df0:	9f 4f       	sbci	r25, 0xFF	; 255
     df2:	08 95       	ret

00000df4 <__fp_split3>:
     df4:	57 fd       	sbrc	r21, 7
     df6:	90 58       	subi	r25, 0x80	; 128
     df8:	44 0f       	add	r20, r20
     dfa:	55 1f       	adc	r21, r21
     dfc:	59 f0       	breq	.+22     	; 0xe14 <__fp_splitA+0x10>
     dfe:	5f 3f       	cpi	r21, 0xFF	; 255
     e00:	71 f0       	breq	.+28     	; 0xe1e <__fp_splitA+0x1a>
     e02:	47 95       	ror	r20

00000e04 <__fp_splitA>:
     e04:	88 0f       	add	r24, r24
     e06:	97 fb       	bst	r25, 7
     e08:	99 1f       	adc	r25, r25
     e0a:	61 f0       	breq	.+24     	; 0xe24 <__fp_splitA+0x20>
     e0c:	9f 3f       	cpi	r25, 0xFF	; 255
     e0e:	79 f0       	breq	.+30     	; 0xe2e <__fp_splitA+0x2a>
     e10:	87 95       	ror	r24
     e12:	08 95       	ret
     e14:	12 16       	cp	r1, r18
     e16:	13 06       	cpc	r1, r19
     e18:	14 06       	cpc	r1, r20
     e1a:	55 1f       	adc	r21, r21
     e1c:	f2 cf       	rjmp	.-28     	; 0xe02 <__fp_split3+0xe>
     e1e:	46 95       	lsr	r20
     e20:	f1 df       	rcall	.-30     	; 0xe04 <__fp_splitA>
     e22:	08 c0       	rjmp	.+16     	; 0xe34 <__fp_splitA+0x30>
     e24:	16 16       	cp	r1, r22
     e26:	17 06       	cpc	r1, r23
     e28:	18 06       	cpc	r1, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	f1 cf       	rjmp	.-30     	; 0xe10 <__fp_splitA+0xc>
     e2e:	86 95       	lsr	r24
     e30:	71 05       	cpc	r23, r1
     e32:	61 05       	cpc	r22, r1
     e34:	08 94       	sec
     e36:	08 95       	ret

00000e38 <__fp_zero>:
     e38:	e8 94       	clt

00000e3a <__fp_szero>:
     e3a:	bb 27       	eor	r27, r27
     e3c:	66 27       	eor	r22, r22
     e3e:	77 27       	eor	r23, r23
     e40:	cb 01       	movw	r24, r22
     e42:	97 f9       	bld	r25, 7
     e44:	08 95       	ret

00000e46 <__gesf2>:
     e46:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fp_cmp>
     e4a:	08 f4       	brcc	.+2      	; 0xe4e <__gesf2+0x8>
     e4c:	8f ef       	ldi	r24, 0xFF	; 255
     e4e:	08 95       	ret

00000e50 <__mulsf3>:
     e50:	0e 94 3b 07 	call	0xe76	; 0xe76 <__mulsf3x>
     e54:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__fp_round>
     e58:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fp_pscA>
     e5c:	38 f0       	brcs	.+14     	; 0xe6c <__mulsf3+0x1c>
     e5e:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__fp_pscB>
     e62:	20 f0       	brcs	.+8      	; 0xe6c <__mulsf3+0x1c>
     e64:	95 23       	and	r25, r21
     e66:	11 f0       	breq	.+4      	; 0xe6c <__mulsf3+0x1c>
     e68:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>
     e6c:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_nan>
     e70:	11 24       	eor	r1, r1
     e72:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fp_szero>

00000e76 <__mulsf3x>:
     e76:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__fp_split3>
     e7a:	70 f3       	brcs	.-36     	; 0xe58 <__mulsf3+0x8>

00000e7c <__mulsf3_pse>:
     e7c:	95 9f       	mul	r25, r21
     e7e:	c1 f3       	breq	.-16     	; 0xe70 <__mulsf3+0x20>
     e80:	95 0f       	add	r25, r21
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	55 1f       	adc	r21, r21
     e86:	62 9f       	mul	r22, r18
     e88:	f0 01       	movw	r30, r0
     e8a:	72 9f       	mul	r23, r18
     e8c:	bb 27       	eor	r27, r27
     e8e:	f0 0d       	add	r31, r0
     e90:	b1 1d       	adc	r27, r1
     e92:	63 9f       	mul	r22, r19
     e94:	aa 27       	eor	r26, r26
     e96:	f0 0d       	add	r31, r0
     e98:	b1 1d       	adc	r27, r1
     e9a:	aa 1f       	adc	r26, r26
     e9c:	64 9f       	mul	r22, r20
     e9e:	66 27       	eor	r22, r22
     ea0:	b0 0d       	add	r27, r0
     ea2:	a1 1d       	adc	r26, r1
     ea4:	66 1f       	adc	r22, r22
     ea6:	82 9f       	mul	r24, r18
     ea8:	22 27       	eor	r18, r18
     eaa:	b0 0d       	add	r27, r0
     eac:	a1 1d       	adc	r26, r1
     eae:	62 1f       	adc	r22, r18
     eb0:	73 9f       	mul	r23, r19
     eb2:	b0 0d       	add	r27, r0
     eb4:	a1 1d       	adc	r26, r1
     eb6:	62 1f       	adc	r22, r18
     eb8:	83 9f       	mul	r24, r19
     eba:	a0 0d       	add	r26, r0
     ebc:	61 1d       	adc	r22, r1
     ebe:	22 1f       	adc	r18, r18
     ec0:	74 9f       	mul	r23, r20
     ec2:	33 27       	eor	r19, r19
     ec4:	a0 0d       	add	r26, r0
     ec6:	61 1d       	adc	r22, r1
     ec8:	23 1f       	adc	r18, r19
     eca:	84 9f       	mul	r24, r20
     ecc:	60 0d       	add	r22, r0
     ece:	21 1d       	adc	r18, r1
     ed0:	82 2f       	mov	r24, r18
     ed2:	76 2f       	mov	r23, r22
     ed4:	6a 2f       	mov	r22, r26
     ed6:	11 24       	eor	r1, r1
     ed8:	9f 57       	subi	r25, 0x7F	; 127
     eda:	50 40       	sbci	r21, 0x00	; 0
     edc:	9a f0       	brmi	.+38     	; 0xf04 <__mulsf3_pse+0x88>
     ede:	f1 f0       	breq	.+60     	; 0xf1c <__mulsf3_pse+0xa0>
     ee0:	88 23       	and	r24, r24
     ee2:	4a f0       	brmi	.+18     	; 0xef6 <__mulsf3_pse+0x7a>
     ee4:	ee 0f       	add	r30, r30
     ee6:	ff 1f       	adc	r31, r31
     ee8:	bb 1f       	adc	r27, r27
     eea:	66 1f       	adc	r22, r22
     eec:	77 1f       	adc	r23, r23
     eee:	88 1f       	adc	r24, r24
     ef0:	91 50       	subi	r25, 0x01	; 1
     ef2:	50 40       	sbci	r21, 0x00	; 0
     ef4:	a9 f7       	brne	.-22     	; 0xee0 <__mulsf3_pse+0x64>
     ef6:	9e 3f       	cpi	r25, 0xFE	; 254
     ef8:	51 05       	cpc	r21, r1
     efa:	80 f0       	brcs	.+32     	; 0xf1c <__mulsf3_pse+0xa0>
     efc:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>
     f00:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fp_szero>
     f04:	5f 3f       	cpi	r21, 0xFF	; 255
     f06:	e4 f3       	brlt	.-8      	; 0xf00 <__mulsf3_pse+0x84>
     f08:	98 3e       	cpi	r25, 0xE8	; 232
     f0a:	d4 f3       	brlt	.-12     	; 0xf00 <__mulsf3_pse+0x84>
     f0c:	86 95       	lsr	r24
     f0e:	77 95       	ror	r23
     f10:	67 95       	ror	r22
     f12:	b7 95       	ror	r27
     f14:	f7 95       	ror	r31
     f16:	e7 95       	ror	r30
     f18:	9f 5f       	subi	r25, 0xFF	; 255
     f1a:	c1 f7       	brne	.-16     	; 0xf0c <__mulsf3_pse+0x90>
     f1c:	fe 2b       	or	r31, r30
     f1e:	88 0f       	add	r24, r24
     f20:	91 1d       	adc	r25, r1
     f22:	96 95       	lsr	r25
     f24:	87 95       	ror	r24
     f26:	97 f9       	bld	r25, 7
     f28:	08 95       	ret

00000f2a <pow>:
     f2a:	fa 01       	movw	r30, r20
     f2c:	ee 0f       	add	r30, r30
     f2e:	ff 1f       	adc	r31, r31
     f30:	30 96       	adiw	r30, 0x00	; 0
     f32:	21 05       	cpc	r18, r1
     f34:	31 05       	cpc	r19, r1
     f36:	a1 f1       	breq	.+104    	; 0xfa0 <pow+0x76>
     f38:	61 15       	cp	r22, r1
     f3a:	71 05       	cpc	r23, r1
     f3c:	61 f4       	brne	.+24     	; 0xf56 <pow+0x2c>
     f3e:	80 38       	cpi	r24, 0x80	; 128
     f40:	bf e3       	ldi	r27, 0x3F	; 63
     f42:	9b 07       	cpc	r25, r27
     f44:	49 f1       	breq	.+82     	; 0xf98 <pow+0x6e>
     f46:	68 94       	set
     f48:	90 38       	cpi	r25, 0x80	; 128
     f4a:	81 05       	cpc	r24, r1
     f4c:	61 f0       	breq	.+24     	; 0xf66 <pow+0x3c>
     f4e:	80 38       	cpi	r24, 0x80	; 128
     f50:	bf ef       	ldi	r27, 0xFF	; 255
     f52:	9b 07       	cpc	r25, r27
     f54:	41 f0       	breq	.+16     	; 0xf66 <pow+0x3c>
     f56:	99 23       	and	r25, r25
     f58:	4a f5       	brpl	.+82     	; 0xfac <pow+0x82>
     f5a:	ff 3f       	cpi	r31, 0xFF	; 255
     f5c:	e1 05       	cpc	r30, r1
     f5e:	31 05       	cpc	r19, r1
     f60:	21 05       	cpc	r18, r1
     f62:	19 f1       	breq	.+70     	; 0xfaa <pow+0x80>
     f64:	e8 94       	clt
     f66:	08 94       	sec
     f68:	e7 95       	ror	r30
     f6a:	d9 01       	movw	r26, r18
     f6c:	aa 23       	and	r26, r26
     f6e:	29 f4       	brne	.+10     	; 0xf7a <pow+0x50>
     f70:	ab 2f       	mov	r26, r27
     f72:	be 2f       	mov	r27, r30
     f74:	f8 5f       	subi	r31, 0xF8	; 248
     f76:	d0 f3       	brcs	.-12     	; 0xf6c <pow+0x42>
     f78:	10 c0       	rjmp	.+32     	; 0xf9a <pow+0x70>
     f7a:	ff 5f       	subi	r31, 0xFF	; 255
     f7c:	70 f4       	brcc	.+28     	; 0xf9a <pow+0x70>
     f7e:	a6 95       	lsr	r26
     f80:	e0 f7       	brcc	.-8      	; 0xf7a <pow+0x50>
     f82:	f7 39       	cpi	r31, 0x97	; 151
     f84:	50 f0       	brcs	.+20     	; 0xf9a <pow+0x70>
     f86:	19 f0       	breq	.+6      	; 0xf8e <pow+0x64>
     f88:	ff 3a       	cpi	r31, 0xAF	; 175
     f8a:	38 f4       	brcc	.+14     	; 0xf9a <pow+0x70>
     f8c:	9f 77       	andi	r25, 0x7F	; 127
     f8e:	9f 93       	push	r25
     f90:	0d d0       	rcall	.+26     	; 0xfac <pow+0x82>
     f92:	0f 90       	pop	r0
     f94:	07 fc       	sbrc	r0, 7
     f96:	90 58       	subi	r25, 0x80	; 128
     f98:	08 95       	ret
     f9a:	46 f0       	brts	.+16     	; 0xfac <pow+0x82>
     f9c:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_nan>
     fa0:	60 e0       	ldi	r22, 0x00	; 0
     fa2:	70 e0       	ldi	r23, 0x00	; 0
     fa4:	80 e8       	ldi	r24, 0x80	; 128
     fa6:	9f e3       	ldi	r25, 0x3F	; 63
     fa8:	08 95       	ret
     faa:	4f e7       	ldi	r20, 0x7F	; 127
     fac:	9f 77       	andi	r25, 0x7F	; 127
     fae:	5f 93       	push	r21
     fb0:	4f 93       	push	r20
     fb2:	3f 93       	push	r19
     fb4:	2f 93       	push	r18
     fb6:	0e 94 90 08 	call	0x1120	; 0x1120 <log>
     fba:	2f 91       	pop	r18
     fbc:	3f 91       	pop	r19
     fbe:	4f 91       	pop	r20
     fc0:	5f 91       	pop	r21
     fc2:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     fc6:	0c 94 ed 07 	jmp	0xfda	; 0xfda <exp>
     fca:	29 f4       	brne	.+10     	; 0xfd6 <pow+0xac>
     fcc:	16 f0       	brts	.+4      	; 0xfd2 <pow+0xa8>
     fce:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>
     fd2:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_zero>
     fd6:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_nan>

00000fda <exp>:
     fda:	0e 94 02 07 	call	0xe04	; 0xe04 <__fp_splitA>
     fde:	a8 f3       	brcs	.-22     	; 0xfca <pow+0xa0>
     fe0:	96 38       	cpi	r25, 0x86	; 134
     fe2:	a0 f7       	brcc	.-24     	; 0xfcc <pow+0xa2>
     fe4:	07 f8       	bld	r0, 7
     fe6:	0f 92       	push	r0
     fe8:	e8 94       	clt
     fea:	2b e3       	ldi	r18, 0x3B	; 59
     fec:	3a ea       	ldi	r19, 0xAA	; 170
     fee:	48 eb       	ldi	r20, 0xB8	; 184
     ff0:	5f e7       	ldi	r21, 0x7F	; 127
     ff2:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__mulsf3_pse>
     ff6:	0f 92       	push	r0
     ff8:	0f 92       	push	r0
     ffa:	0f 92       	push	r0
     ffc:	4d b7       	in	r20, 0x3d	; 61
     ffe:	5e b7       	in	r21, 0x3e	; 62
    1000:	0f 92       	push	r0
    1002:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <modf>
    1006:	e8 ee       	ldi	r30, 0xE8	; 232
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	0e 94 1f 08 	call	0x103e	; 0x103e <__fp_powser>
    100e:	4f 91       	pop	r20
    1010:	5f 91       	pop	r21
    1012:	ef 91       	pop	r30
    1014:	ff 91       	pop	r31
    1016:	e5 95       	asr	r30
    1018:	ee 1f       	adc	r30, r30
    101a:	ff 1f       	adc	r31, r31
    101c:	49 f0       	breq	.+18     	; 0x1030 <exp+0x56>
    101e:	fe 57       	subi	r31, 0x7E	; 126
    1020:	e0 68       	ori	r30, 0x80	; 128
    1022:	44 27       	eor	r20, r20
    1024:	ee 0f       	add	r30, r30
    1026:	44 1f       	adc	r20, r20
    1028:	fa 95       	dec	r31
    102a:	e1 f7       	brne	.-8      	; 0x1024 <exp+0x4a>
    102c:	41 95       	neg	r20
    102e:	55 0b       	sbc	r21, r21
    1030:	0e 94 52 08 	call	0x10a4	; 0x10a4 <ldexp>
    1034:	0f 90       	pop	r0
    1036:	07 fe       	sbrs	r0, 7
    1038:	0c 94 46 08 	jmp	0x108c	; 0x108c <inverse>
    103c:	08 95       	ret

0000103e <__fp_powser>:
    103e:	df 93       	push	r29
    1040:	cf 93       	push	r28
    1042:	1f 93       	push	r17
    1044:	0f 93       	push	r16
    1046:	ff 92       	push	r15
    1048:	ef 92       	push	r14
    104a:	df 92       	push	r13
    104c:	7b 01       	movw	r14, r22
    104e:	8c 01       	movw	r16, r24
    1050:	68 94       	set
    1052:	06 c0       	rjmp	.+12     	; 0x1060 <__fp_powser+0x22>
    1054:	da 2e       	mov	r13, r26
    1056:	ef 01       	movw	r28, r30
    1058:	0e 94 3b 07 	call	0xe76	; 0xe76 <__mulsf3x>
    105c:	fe 01       	movw	r30, r28
    105e:	e8 94       	clt
    1060:	a5 91       	lpm	r26, Z+
    1062:	25 91       	lpm	r18, Z+
    1064:	35 91       	lpm	r19, Z+
    1066:	45 91       	lpm	r20, Z+
    1068:	55 91       	lpm	r21, Z+
    106a:	a6 f3       	brts	.-24     	; 0x1054 <__fp_powser+0x16>
    106c:	ef 01       	movw	r28, r30
    106e:	0e 94 6f 05 	call	0xade	; 0xade <__addsf3x>
    1072:	fe 01       	movw	r30, r28
    1074:	97 01       	movw	r18, r14
    1076:	a8 01       	movw	r20, r16
    1078:	da 94       	dec	r13
    107a:	69 f7       	brne	.-38     	; 0x1056 <__fp_powser+0x18>
    107c:	df 90       	pop	r13
    107e:	ef 90       	pop	r14
    1080:	ff 90       	pop	r15
    1082:	0f 91       	pop	r16
    1084:	1f 91       	pop	r17
    1086:	cf 91       	pop	r28
    1088:	df 91       	pop	r29
    108a:	08 95       	ret

0000108c <inverse>:
    108c:	9b 01       	movw	r18, r22
    108e:	ac 01       	movw	r20, r24
    1090:	60 e0       	ldi	r22, 0x00	; 0
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	80 e8       	ldi	r24, 0x80	; 128
    1096:	9f e3       	ldi	r25, 0x3F	; 63
    1098:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <__divsf3>
    109c:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>
    10a0:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__fp_mpack>

000010a4 <ldexp>:
    10a4:	0e 94 02 07 	call	0xe04	; 0xe04 <__fp_splitA>
    10a8:	d8 f3       	brcs	.-10     	; 0x10a0 <inverse+0x14>
    10aa:	99 23       	and	r25, r25
    10ac:	c9 f3       	breq	.-14     	; 0x10a0 <inverse+0x14>
    10ae:	94 0f       	add	r25, r20
    10b0:	51 1d       	adc	r21, r1
    10b2:	a3 f3       	brvs	.-24     	; 0x109c <inverse+0x10>
    10b4:	91 50       	subi	r25, 0x01	; 1
    10b6:	50 40       	sbci	r21, 0x00	; 0
    10b8:	94 f0       	brlt	.+36     	; 0x10de <ldexp+0x3a>
    10ba:	59 f0       	breq	.+22     	; 0x10d2 <ldexp+0x2e>
    10bc:	88 23       	and	r24, r24
    10be:	32 f0       	brmi	.+12     	; 0x10cc <ldexp+0x28>
    10c0:	66 0f       	add	r22, r22
    10c2:	77 1f       	adc	r23, r23
    10c4:	88 1f       	adc	r24, r24
    10c6:	91 50       	subi	r25, 0x01	; 1
    10c8:	50 40       	sbci	r21, 0x00	; 0
    10ca:	c1 f7       	brne	.-16     	; 0x10bc <ldexp+0x18>
    10cc:	9e 3f       	cpi	r25, 0xFE	; 254
    10ce:	51 05       	cpc	r21, r1
    10d0:	2c f7       	brge	.-54     	; 0x109c <inverse+0x10>
    10d2:	88 0f       	add	r24, r24
    10d4:	91 1d       	adc	r25, r1
    10d6:	96 95       	lsr	r25
    10d8:	87 95       	ror	r24
    10da:	97 f9       	bld	r25, 7
    10dc:	08 95       	ret
    10de:	5f 3f       	cpi	r21, 0xFF	; 255
    10e0:	ac f0       	brlt	.+42     	; 0x110c <ldexp+0x68>
    10e2:	98 3e       	cpi	r25, 0xE8	; 232
    10e4:	9c f0       	brlt	.+38     	; 0x110c <ldexp+0x68>
    10e6:	bb 27       	eor	r27, r27
    10e8:	86 95       	lsr	r24
    10ea:	77 95       	ror	r23
    10ec:	67 95       	ror	r22
    10ee:	b7 95       	ror	r27
    10f0:	08 f4       	brcc	.+2      	; 0x10f4 <ldexp+0x50>
    10f2:	b1 60       	ori	r27, 0x01	; 1
    10f4:	93 95       	inc	r25
    10f6:	c1 f7       	brne	.-16     	; 0x10e8 <ldexp+0x44>
    10f8:	bb 0f       	add	r27, r27
    10fa:	58 f7       	brcc	.-42     	; 0x10d2 <ldexp+0x2e>
    10fc:	11 f4       	brne	.+4      	; 0x1102 <ldexp+0x5e>
    10fe:	60 ff       	sbrs	r22, 0
    1100:	e8 cf       	rjmp	.-48     	; 0x10d2 <ldexp+0x2e>
    1102:	6f 5f       	subi	r22, 0xFF	; 255
    1104:	7f 4f       	sbci	r23, 0xFF	; 255
    1106:	8f 4f       	sbci	r24, 0xFF	; 255
    1108:	9f 4f       	sbci	r25, 0xFF	; 255
    110a:	e3 cf       	rjmp	.-58     	; 0x10d2 <ldexp+0x2e>
    110c:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fp_szero>
    1110:	16 f0       	brts	.+4      	; 0x1116 <ldexp+0x72>
    1112:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__fp_mpack>
    1116:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_nan>
    111a:	68 94       	set
    111c:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__fp_inf>

00001120 <log>:
    1120:	0e 94 02 07 	call	0xe04	; 0xe04 <__fp_splitA>
    1124:	a8 f3       	brcs	.-22     	; 0x1110 <ldexp+0x6c>
    1126:	99 23       	and	r25, r25
    1128:	c1 f3       	breq	.-16     	; 0x111a <ldexp+0x76>
    112a:	ae f3       	brts	.-22     	; 0x1116 <ldexp+0x72>
    112c:	df 93       	push	r29
    112e:	cf 93       	push	r28
    1130:	1f 93       	push	r17
    1132:	0f 93       	push	r16
    1134:	ff 92       	push	r15
    1136:	c9 2f       	mov	r28, r25
    1138:	dd 27       	eor	r29, r29
    113a:	88 23       	and	r24, r24
    113c:	2a f0       	brmi	.+10     	; 0x1148 <log+0x28>
    113e:	21 97       	sbiw	r28, 0x01	; 1
    1140:	66 0f       	add	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	88 1f       	adc	r24, r24
    1146:	da f7       	brpl	.-10     	; 0x113e <log+0x1e>
    1148:	20 e0       	ldi	r18, 0x00	; 0
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	40 e8       	ldi	r20, 0x80	; 128
    114e:	5f eb       	ldi	r21, 0xBF	; 191
    1150:	9f e3       	ldi	r25, 0x3F	; 63
    1152:	88 39       	cpi	r24, 0x98	; 152
    1154:	20 f0       	brcs	.+8      	; 0x115e <log+0x3e>
    1156:	80 3e       	cpi	r24, 0xE0	; 224
    1158:	38 f0       	brcs	.+14     	; 0x1168 <log+0x48>
    115a:	21 96       	adiw	r28, 0x01	; 1
    115c:	8f 77       	andi	r24, 0x7F	; 127
    115e:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
    1162:	e0 e1       	ldi	r30, 0x10	; 16
    1164:	f1 e0       	ldi	r31, 0x01	; 1
    1166:	04 c0       	rjmp	.+8      	; 0x1170 <log+0x50>
    1168:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
    116c:	ed e3       	ldi	r30, 0x3D	; 61
    116e:	f1 e0       	ldi	r31, 0x01	; 1
    1170:	0e 94 1f 08 	call	0x103e	; 0x103e <__fp_powser>
    1174:	8b 01       	movw	r16, r22
    1176:	be 01       	movw	r22, r28
    1178:	ec 01       	movw	r28, r24
    117a:	fb 2e       	mov	r15, r27
    117c:	6f 57       	subi	r22, 0x7F	; 127
    117e:	71 09       	sbc	r23, r1
    1180:	75 95       	asr	r23
    1182:	77 1f       	adc	r23, r23
    1184:	88 0b       	sbc	r24, r24
    1186:	99 0b       	sbc	r25, r25
    1188:	0e 94 73 06 	call	0xce6	; 0xce6 <__floatsisf>
    118c:	28 e1       	ldi	r18, 0x18	; 24
    118e:	32 e7       	ldi	r19, 0x72	; 114
    1190:	41 e3       	ldi	r20, 0x31	; 49
    1192:	5f e3       	ldi	r21, 0x3F	; 63
    1194:	0e 94 3b 07 	call	0xe76	; 0xe76 <__mulsf3x>
    1198:	af 2d       	mov	r26, r15
    119a:	98 01       	movw	r18, r16
    119c:	ae 01       	movw	r20, r28
    119e:	ff 90       	pop	r15
    11a0:	0f 91       	pop	r16
    11a2:	1f 91       	pop	r17
    11a4:	cf 91       	pop	r28
    11a6:	df 91       	pop	r29
    11a8:	0e 94 6f 05 	call	0xade	; 0xade <__addsf3x>
    11ac:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__fp_round>

000011b0 <modf>:
    11b0:	fa 01       	movw	r30, r20
    11b2:	dc 01       	movw	r26, r24
    11b4:	aa 0f       	add	r26, r26
    11b6:	bb 1f       	adc	r27, r27
    11b8:	9b 01       	movw	r18, r22
    11ba:	ac 01       	movw	r20, r24
    11bc:	bf 57       	subi	r27, 0x7F	; 127
    11be:	28 f4       	brcc	.+10     	; 0x11ca <modf+0x1a>
    11c0:	22 27       	eor	r18, r18
    11c2:	33 27       	eor	r19, r19
    11c4:	44 27       	eor	r20, r20
    11c6:	50 78       	andi	r21, 0x80	; 128
    11c8:	20 c0       	rjmp	.+64     	; 0x120a <modf+0x5a>
    11ca:	b7 51       	subi	r27, 0x17	; 23
    11cc:	90 f4       	brcc	.+36     	; 0x11f2 <modf+0x42>
    11ce:	ab 2f       	mov	r26, r27
    11d0:	00 24       	eor	r0, r0
    11d2:	46 95       	lsr	r20
    11d4:	37 95       	ror	r19
    11d6:	27 95       	ror	r18
    11d8:	01 1c       	adc	r0, r1
    11da:	a3 95       	inc	r26
    11dc:	d2 f3       	brmi	.-12     	; 0x11d2 <modf+0x22>
    11de:	00 20       	and	r0, r0
    11e0:	71 f0       	breq	.+28     	; 0x11fe <modf+0x4e>
    11e2:	22 0f       	add	r18, r18
    11e4:	33 1f       	adc	r19, r19
    11e6:	44 1f       	adc	r20, r20
    11e8:	b3 95       	inc	r27
    11ea:	da f3       	brmi	.-10     	; 0x11e2 <modf+0x32>
    11ec:	0e d0       	rcall	.+28     	; 0x120a <modf+0x5a>
    11ee:	0c 94 57 05 	jmp	0xaae	; 0xaae <__subsf3>
    11f2:	61 30       	cpi	r22, 0x01	; 1
    11f4:	71 05       	cpc	r23, r1
    11f6:	a0 e8       	ldi	r26, 0x80	; 128
    11f8:	8a 07       	cpc	r24, r26
    11fa:	b9 46       	sbci	r27, 0x69	; 105
    11fc:	30 f4       	brcc	.+12     	; 0x120a <modf+0x5a>
    11fe:	9b 01       	movw	r18, r22
    1200:	ac 01       	movw	r20, r24
    1202:	66 27       	eor	r22, r22
    1204:	77 27       	eor	r23, r23
    1206:	88 27       	eor	r24, r24
    1208:	90 78       	andi	r25, 0x80	; 128
    120a:	30 96       	adiw	r30, 0x00	; 0
    120c:	21 f0       	breq	.+8      	; 0x1216 <modf+0x66>
    120e:	20 83       	st	Z, r18
    1210:	31 83       	std	Z+1, r19	; 0x01
    1212:	42 83       	std	Z+2, r20	; 0x02
    1214:	53 83       	std	Z+3, r21	; 0x03
    1216:	08 95       	ret

00001218 <__fp_mpack>:
    1218:	9f 3f       	cpi	r25, 0xFF	; 255
    121a:	31 f0       	breq	.+12     	; 0x1228 <__fp_mpack_finite+0xc>

0000121c <__fp_mpack_finite>:
    121c:	91 50       	subi	r25, 0x01	; 1
    121e:	20 f4       	brcc	.+8      	; 0x1228 <__fp_mpack_finite+0xc>
    1220:	87 95       	ror	r24
    1222:	77 95       	ror	r23
    1224:	67 95       	ror	r22
    1226:	b7 95       	ror	r27
    1228:	88 0f       	add	r24, r24
    122a:	91 1d       	adc	r25, r1
    122c:	96 95       	lsr	r25
    122e:	87 95       	ror	r24
    1230:	97 f9       	bld	r25, 7
    1232:	08 95       	ret

00001234 <__divmodsi4>:
    1234:	05 2e       	mov	r0, r21
    1236:	97 fb       	bst	r25, 7
    1238:	1e f4       	brtc	.+6      	; 0x1240 <__divmodsi4+0xc>
    123a:	00 94       	com	r0
    123c:	0e 94 31 09 	call	0x1262	; 0x1262 <__negsi2>
    1240:	57 fd       	sbrc	r21, 7
    1242:	07 d0       	rcall	.+14     	; 0x1252 <__divmodsi4_neg2>
    1244:	0e 94 44 09 	call	0x1288	; 0x1288 <__udivmodsi4>
    1248:	07 fc       	sbrc	r0, 7
    124a:	03 d0       	rcall	.+6      	; 0x1252 <__divmodsi4_neg2>
    124c:	4e f4       	brtc	.+18     	; 0x1260 <__divmodsi4_exit>
    124e:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__negsi2>

00001252 <__divmodsi4_neg2>:
    1252:	50 95       	com	r21
    1254:	40 95       	com	r20
    1256:	30 95       	com	r19
    1258:	21 95       	neg	r18
    125a:	3f 4f       	sbci	r19, 0xFF	; 255
    125c:	4f 4f       	sbci	r20, 0xFF	; 255
    125e:	5f 4f       	sbci	r21, 0xFF	; 255

00001260 <__divmodsi4_exit>:
    1260:	08 95       	ret

00001262 <__negsi2>:
    1262:	90 95       	com	r25
    1264:	80 95       	com	r24
    1266:	70 95       	com	r23
    1268:	61 95       	neg	r22
    126a:	7f 4f       	sbci	r23, 0xFF	; 255
    126c:	8f 4f       	sbci	r24, 0xFF	; 255
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	08 95       	ret

00001272 <__muluhisi3>:
    1272:	0e 94 66 09 	call	0x12cc	; 0x12cc <__umulhisi3>
    1276:	a5 9f       	mul	r26, r21
    1278:	90 0d       	add	r25, r0
    127a:	b4 9f       	mul	r27, r20
    127c:	90 0d       	add	r25, r0
    127e:	a4 9f       	mul	r26, r20
    1280:	80 0d       	add	r24, r0
    1282:	91 1d       	adc	r25, r1
    1284:	11 24       	eor	r1, r1
    1286:	08 95       	ret

00001288 <__udivmodsi4>:
    1288:	a1 e2       	ldi	r26, 0x21	; 33
    128a:	1a 2e       	mov	r1, r26
    128c:	aa 1b       	sub	r26, r26
    128e:	bb 1b       	sub	r27, r27
    1290:	fd 01       	movw	r30, r26
    1292:	0d c0       	rjmp	.+26     	; 0x12ae <__udivmodsi4_ep>

00001294 <__udivmodsi4_loop>:
    1294:	aa 1f       	adc	r26, r26
    1296:	bb 1f       	adc	r27, r27
    1298:	ee 1f       	adc	r30, r30
    129a:	ff 1f       	adc	r31, r31
    129c:	a2 17       	cp	r26, r18
    129e:	b3 07       	cpc	r27, r19
    12a0:	e4 07       	cpc	r30, r20
    12a2:	f5 07       	cpc	r31, r21
    12a4:	20 f0       	brcs	.+8      	; 0x12ae <__udivmodsi4_ep>
    12a6:	a2 1b       	sub	r26, r18
    12a8:	b3 0b       	sbc	r27, r19
    12aa:	e4 0b       	sbc	r30, r20
    12ac:	f5 0b       	sbc	r31, r21

000012ae <__udivmodsi4_ep>:
    12ae:	66 1f       	adc	r22, r22
    12b0:	77 1f       	adc	r23, r23
    12b2:	88 1f       	adc	r24, r24
    12b4:	99 1f       	adc	r25, r25
    12b6:	1a 94       	dec	r1
    12b8:	69 f7       	brne	.-38     	; 0x1294 <__udivmodsi4_loop>
    12ba:	60 95       	com	r22
    12bc:	70 95       	com	r23
    12be:	80 95       	com	r24
    12c0:	90 95       	com	r25
    12c2:	9b 01       	movw	r18, r22
    12c4:	ac 01       	movw	r20, r24
    12c6:	bd 01       	movw	r22, r26
    12c8:	cf 01       	movw	r24, r30
    12ca:	08 95       	ret

000012cc <__umulhisi3>:
    12cc:	a2 9f       	mul	r26, r18
    12ce:	b0 01       	movw	r22, r0
    12d0:	b3 9f       	mul	r27, r19
    12d2:	c0 01       	movw	r24, r0
    12d4:	a3 9f       	mul	r26, r19
    12d6:	70 0d       	add	r23, r0
    12d8:	81 1d       	adc	r24, r1
    12da:	11 24       	eor	r1, r1
    12dc:	91 1d       	adc	r25, r1
    12de:	b2 9f       	mul	r27, r18
    12e0:	70 0d       	add	r23, r0
    12e2:	81 1d       	adc	r24, r1
    12e4:	11 24       	eor	r1, r1
    12e6:	91 1d       	adc	r25, r1
    12e8:	08 95       	ret

000012ea <_exit>:
    12ea:	f8 94       	cli

000012ec <__stop_program>:
    12ec:	ff cf       	rjmp	.-2      	; 0x12ec <__stop_program>
