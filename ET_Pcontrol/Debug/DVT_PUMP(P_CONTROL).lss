
DVT_PUMP(P_CONTROL).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00804000  000013a6  0000143a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007c  0080409e  0080409e  000014d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000014d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001508  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001548  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000440f  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002cef  00000000  00000000  00005a47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bc6  00000000  00000000  00008736  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  000092fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001af7  00000000  00000000  000095f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009c5  00000000  00000000  0000b0e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000baac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      10:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      14:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      18:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      1c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      20:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      24:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      28:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      2c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      30:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__vector_12>
      34:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      38:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      3c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      40:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      44:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      48:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      4c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      50:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      54:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      58:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      5c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      60:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      64:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      68:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      6c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      70:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      74:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      78:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      7c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      80:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      84:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      88:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      8c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      90:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      94:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      98:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      9c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      a0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      a4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      a8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      ac:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      b0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      b4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      b8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      bc:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      c0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      c4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      c8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      cc:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      d0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      d4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      d8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      dc:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      e0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      e4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      e8:	07 63       	ori	r16, 0x37	; 55
      ea:	42 36       	cpi	r20, 0x62	; 98
      ec:	b7 9b       	sbis	0x16, 7	; 22
      ee:	d8 a7       	std	Y+40, r29	; 0x28
      f0:	1a 39       	cpi	r17, 0x9A	; 154
      f2:	68 56       	subi	r22, 0x68	; 104
      f4:	18 ae       	std	Y+56, r1	; 0x38
      f6:	ba ab       	std	Y+50, r27	; 0x32
      f8:	55 8c       	ldd	r5, Z+29	; 0x1d
      fa:	1d 3c       	cpi	r17, 0xCD	; 205
      fc:	b7 cc       	rjmp	.-1682   	; 0xfffffa6c <__eeprom_end+0xff7efa6c>
      fe:	57 63       	ori	r21, 0x37	; 55
     100:	bd 6d       	ori	r27, 0xDD	; 221
     102:	ed fd       	.word	0xfded	; ????
     104:	75 3e       	cpi	r23, 0xE5	; 229
     106:	f6 17       	cp	r31, r22
     108:	72 31       	cpi	r23, 0x12	; 18
     10a:	bf 00       	.word	0x00bf	; ????
     10c:	00 00       	nop
     10e:	80 3f       	cpi	r24, 0xF0	; 240
     110:	08 00       	.word	0x0008	; ????
     112:	00 00       	nop
     114:	be 92       	st	-X, r11
     116:	24 49       	sbci	r18, 0x94	; 148
     118:	12 3e       	cpi	r17, 0xE2	; 226
     11a:	ab aa       	std	Y+51, r10	; 0x33
     11c:	aa 2a       	or	r10, r26
     11e:	be cd       	rjmp	.-1156   	; 0xfffffc9c <__eeprom_end+0xff7efc9c>
     120:	cc cc       	rjmp	.-1640   	; 0xfffffaba <__eeprom_end+0xff7efaba>
     122:	4c 3e       	cpi	r20, 0xEC	; 236
     124:	00 00       	nop
     126:	00 80       	ld	r0, Z
     128:	be ab       	std	Y+54, r27	; 0x36
     12a:	aa aa       	std	Y+50, r10	; 0x32
     12c:	aa 3e       	cpi	r26, 0xEA	; 234
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	bf 00       	.word	0x00bf	; ????
     134:	00 00       	nop
     136:	80 3f       	cpi	r24, 0xF0	; 240
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	00 08       	sbc	r0, r0
     13e:	41 78       	andi	r20, 0x81	; 129
     140:	d3 bb       	out	0x13, r29	; 19
     142:	43 87       	std	Z+11, r20	; 0x0b
     144:	d1 13       	cpse	r29, r17
     146:	3d 19       	sub	r19, r13
     148:	0e 3c       	cpi	r16, 0xCE	; 206
     14a:	c3 bd       	out	0x23, r28	; 35
     14c:	42 82       	std	Z+2, r4	; 0x02
     14e:	ad 2b       	or	r26, r29
     150:	3e 68       	ori	r19, 0x8E	; 142
     152:	ec 82       	std	Y+4, r14	; 0x04
     154:	76 be       	out	0x36, r7	; 54
     156:	d9 8f       	std	Y+25, r29	; 0x19
     158:	e1 a9       	ldd	r30, Z+49	; 0x31
     15a:	3e 4c       	sbci	r19, 0xCE	; 206
     15c:	80 ef       	ldi	r24, 0xF0	; 240
     15e:	ff be       	out	0x3f, r15	; 63
     160:	01 c4       	rjmp	.+2050   	; 0x964 <continous_intubation+0xe4>
     162:	ff 7f       	andi	r31, 0xFF	; 255
     164:	3f 00       	.word	0x003f	; ????
     166:	00 00       	nop
	...

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	cd bf       	out	0x3d, r28	; 61
     172:	df e7       	ldi	r29, 0x7F	; 127
     174:	de bf       	out	0x3e, r29	; 62

00000176 <__do_copy_data>:
     176:	10 e4       	ldi	r17, 0x40	; 64
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b0 e4       	ldi	r27, 0x40	; 64
     17c:	e6 ea       	ldi	r30, 0xA6	; 166
     17e:	f3 e1       	ldi	r31, 0x13	; 19
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	ae 39       	cpi	r26, 0x9E	; 158
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	21 e4       	ldi	r18, 0x41	; 65
     192:	ae e9       	ldi	r26, 0x9E	; 158
     194:	b0 e4       	ldi	r27, 0x40	; 64
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	aa 31       	cpi	r26, 0x1A	; 26
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	0e 94 44 05 	call	0xa88	; 0xa88 <main>
     1a4:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <_exit>

000001a8 <__bad_interrupt>:
     1a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ac <reverse>:


void I2C_0_recvtrans(void)
{
	TWI0.MCTRLB &= ~(1 << 4);   // Send ACK
	TWI0.MCTRLB |= 0x2;         // RECVTRANS
     1ac:	61 50       	subi	r22, 0x01	; 1
     1ae:	71 09       	sbc	r23, r1
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	0e c0       	rjmp	.+28     	; 0x1d2 <reverse+0x26>
     1b6:	dc 01       	movw	r26, r24
     1b8:	a2 0f       	add	r26, r18
     1ba:	b3 1f       	adc	r27, r19
     1bc:	4c 91       	ld	r20, X
     1be:	fc 01       	movw	r30, r24
     1c0:	e6 0f       	add	r30, r22
     1c2:	f7 1f       	adc	r31, r23
     1c4:	50 81       	ld	r21, Z
     1c6:	5c 93       	st	X, r21
     1c8:	40 83       	st	Z, r20
     1ca:	2f 5f       	subi	r18, 0xFF	; 255
     1cc:	3f 4f       	sbci	r19, 0xFF	; 255
     1ce:	61 50       	subi	r22, 0x01	; 1
     1d0:	71 09       	sbc	r23, r1
     1d2:	26 17       	cp	r18, r22
     1d4:	37 07       	cpc	r19, r23
     1d6:	7c f3       	brlt	.-34     	; 0x1b6 <reverse+0xa>
     1d8:	08 95       	ret

000001da <intToStr>:
     1da:	cf 92       	push	r12
     1dc:	df 92       	push	r13
     1de:	ef 92       	push	r14
     1e0:	ff 92       	push	r15
     1e2:	0f 93       	push	r16
     1e4:	1f 93       	push	r17
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	8a 01       	movw	r16, r20
     1ec:	69 01       	movw	r12, r18
     1ee:	c0 e0       	ldi	r28, 0x00	; 0
     1f0:	d0 e0       	ldi	r29, 0x00	; 0
     1f2:	11 c0       	rjmp	.+34     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
     1f4:	78 01       	movw	r14, r16
     1f6:	ec 0e       	add	r14, r28
     1f8:	fd 1e       	adc	r15, r29
     1fa:	2a e0       	ldi	r18, 0x0A	; 10
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e0       	ldi	r20, 0x00	; 0
     200:	50 e0       	ldi	r21, 0x00	; 0
     202:	0e 94 76 09 	call	0x12ec	; 0x12ec <__divmodsi4>
     206:	60 5d       	subi	r22, 0xD0	; 208
     208:	f7 01       	movw	r30, r14
     20a:	60 83       	st	Z, r22
     20c:	62 2f       	mov	r22, r18
     20e:	73 2f       	mov	r23, r19
     210:	84 2f       	mov	r24, r20
     212:	95 2f       	mov	r25, r21
     214:	21 96       	adiw	r28, 0x01	; 1
     216:	61 15       	cp	r22, r1
     218:	71 05       	cpc	r23, r1
     21a:	81 05       	cpc	r24, r1
     21c:	91 05       	cpc	r25, r1
     21e:	51 f7       	brne	.-44     	; 0x1f4 <intToStr+0x1a>
     220:	06 c0       	rjmp	.+12     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
     222:	f8 01       	movw	r30, r16
     224:	ec 0f       	add	r30, r28
     226:	fd 1f       	adc	r31, r29
     228:	80 e3       	ldi	r24, 0x30	; 48
     22a:	80 83       	st	Z, r24
     22c:	21 96       	adiw	r28, 0x01	; 1
     22e:	cc 15       	cp	r28, r12
     230:	dd 05       	cpc	r29, r13
     232:	bc f3       	brlt	.-18     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
     234:	be 01       	movw	r22, r28
     236:	c8 01       	movw	r24, r16
     238:	0e 94 d6 00 	call	0x1ac	; 0x1ac <reverse>
     23c:	f8 01       	movw	r30, r16
     23e:	ec 0f       	add	r30, r28
     240:	fd 1f       	adc	r31, r29
     242:	10 82       	st	Z, r1
     244:	ce 01       	movw	r24, r28
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	1f 91       	pop	r17
     24c:	0f 91       	pop	r16
     24e:	ff 90       	pop	r15
     250:	ef 90       	pop	r14
     252:	df 90       	pop	r13
     254:	cf 90       	pop	r12
     256:	08 95       	ret

00000258 <ftoa>:
     258:	8f 92       	push	r8
     25a:	9f 92       	push	r9
     25c:	af 92       	push	r10
     25e:	bf 92       	push	r11
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	4b 01       	movw	r8, r22
     272:	5c 01       	movw	r10, r24
     274:	8a 01       	movw	r16, r20
     276:	e9 01       	movw	r28, r18
     278:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixsfsi>
     27c:	6b 01       	movw	r12, r22
     27e:	77 0f       	add	r23, r23
     280:	ee 08       	sbc	r14, r14
     282:	ff 08       	sbc	r15, r15
     284:	c7 01       	movw	r24, r14
     286:	b6 01       	movw	r22, r12
     288:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__floatsisf>
     28c:	9b 01       	movw	r18, r22
     28e:	ac 01       	movw	r20, r24
     290:	c5 01       	movw	r24, r10
     292:	b4 01       	movw	r22, r8
     294:	0e 94 b3 05 	call	0xb66	; 0xb66 <__subsf3>
     298:	4b 01       	movw	r8, r22
     29a:	5c 01       	movw	r10, r24
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	a8 01       	movw	r20, r16
     2a2:	c7 01       	movw	r24, r14
     2a4:	b6 01       	movw	r22, r12
     2a6:	0e 94 ed 00 	call	0x1da	; 0x1da <intToStr>
     2aa:	7c 01       	movw	r14, r24
     2ac:	20 97       	sbiw	r28, 0x00	; 0
     2ae:	49 f1       	breq	.+82     	; 0x302 <ftoa+0xaa>
     2b0:	f8 01       	movw	r30, r16
     2b2:	e8 0f       	add	r30, r24
     2b4:	f9 1f       	adc	r31, r25
     2b6:	8e e2       	ldi	r24, 0x2E	; 46
     2b8:	80 83       	st	Z, r24
     2ba:	be 01       	movw	r22, r28
     2bc:	0d 2e       	mov	r0, r29
     2be:	00 0c       	add	r0, r0
     2c0:	88 0b       	sbc	r24, r24
     2c2:	99 0b       	sbc	r25, r25
     2c4:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__floatsisf>
     2c8:	9b 01       	movw	r18, r22
     2ca:	ac 01       	movw	r20, r24
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	70 e0       	ldi	r23, 0x00	; 0
     2d0:	80 e2       	ldi	r24, 0x20	; 32
     2d2:	91 e4       	ldi	r25, 0x41	; 65
     2d4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <pow>
     2d8:	9b 01       	movw	r18, r22
     2da:	ac 01       	movw	r20, r24
     2dc:	c5 01       	movw	r24, r10
     2de:	b4 01       	movw	r22, r8
     2e0:	0e 94 84 07 	call	0xf08	; 0xf08 <__mulsf3>
     2e4:	2f ef       	ldi	r18, 0xFF	; 255
     2e6:	e2 1a       	sub	r14, r18
     2e8:	f2 0a       	sbc	r15, r18
     2ea:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fixsfsi>
     2ee:	a8 01       	movw	r20, r16
     2f0:	4e 0d       	add	r20, r14
     2f2:	5f 1d       	adc	r21, r15
     2f4:	07 2e       	mov	r0, r23
     2f6:	00 0c       	add	r0, r0
     2f8:	88 0b       	sbc	r24, r24
     2fa:	99 0b       	sbc	r25, r25
     2fc:	9e 01       	movw	r18, r28
     2fe:	0e 94 ed 00 	call	0x1da	; 0x1da <intToStr>
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	1f 91       	pop	r17
     308:	0f 91       	pop	r16
     30a:	ff 90       	pop	r15
     30c:	ef 90       	pop	r14
     30e:	df 90       	pop	r13
     310:	cf 90       	pop	r12
     312:	bf 90       	pop	r11
     314:	af 90       	pop	r10
     316:	9f 90       	pop	r9
     318:	8f 90       	pop	r8
     31a:	08 95       	ret

0000031c <USART1_init>:
     31c:	e0 e4       	ldi	r30, 0x40	; 64
     31e:	f4 e0       	ldi	r31, 0x04	; 4
     320:	20 81       	ld	r18, Z
     322:	2d 7f       	andi	r18, 0xFD	; 253
     324:	20 83       	st	Z, r18
     326:	20 81       	ld	r18, Z
     328:	21 60       	ori	r18, 0x01	; 1
     32a:	20 83       	st	Z, r18
     32c:	bc 01       	movw	r22, r24
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__floatunsisf>
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	40 e8       	ldi	r20, 0x80	; 128
     33c:	51 e4       	ldi	r21, 0x41	; 65
     33e:	0e 94 84 07 	call	0xf08	; 0xf08 <__mulsf3>
     342:	9b 01       	movw	r18, r22
     344:	ac 01       	movw	r20, r24
     346:	60 e0       	ldi	r22, 0x00	; 0
     348:	74 e2       	ldi	r23, 0x24	; 36
     34a:	84 e7       	ldi	r24, 0x74	; 116
     34c:	9d e4       	ldi	r25, 0x4D	; 77
     34e:	0e 94 25 06 	call	0xc4a	; 0xc4a <__divsf3>
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	40 e0       	ldi	r20, 0x00	; 0
     358:	5f e3       	ldi	r21, 0x3F	; 63
     35a:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     35e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__fixunssfsi>
     362:	e0 e2       	ldi	r30, 0x20	; 32
     364:	f8 e0       	ldi	r31, 0x08	; 8
     366:	60 87       	std	Z+8, r22	; 0x08
     368:	71 87       	std	Z+9, r23	; 0x09
     36a:	86 81       	ldd	r24, Z+6	; 0x06
     36c:	80 6c       	ori	r24, 0xC0	; 192
     36e:	86 83       	std	Z+6, r24	; 0x06
     370:	08 95       	ret

00000372 <USART1_sendChar>:
     372:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
     376:	95 ff       	sbrs	r25, 5
     378:	fc cf       	rjmp	.-8      	; 0x372 <USART1_sendChar>
     37a:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     37e:	08 95       	ret

00000380 <USART1_sendString>:
     380:	0f 93       	push	r16
     382:	1f 93       	push	r17
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	8c 01       	movw	r16, r24
     38a:	c0 e0       	ldi	r28, 0x00	; 0
     38c:	d0 e0       	ldi	r29, 0x00	; 0
     38e:	07 c0       	rjmp	.+14     	; 0x39e <USART1_sendString+0x1e>
     390:	f8 01       	movw	r30, r16
     392:	ec 0f       	add	r30, r28
     394:	fd 1f       	adc	r31, r29
     396:	80 81       	ld	r24, Z
     398:	0e 94 b9 01 	call	0x372	; 0x372 <USART1_sendChar>
     39c:	21 96       	adiw	r28, 0x01	; 1
     39e:	f8 01       	movw	r30, r16
     3a0:	01 90       	ld	r0, Z+
     3a2:	00 20       	and	r0, r0
     3a4:	e9 f7       	brne	.-6      	; 0x3a0 <USART1_sendString+0x20>
     3a6:	31 97       	sbiw	r30, 0x01	; 1
     3a8:	e0 1b       	sub	r30, r16
     3aa:	f1 0b       	sbc	r31, r17
     3ac:	ce 17       	cp	r28, r30
     3ae:	df 07       	cpc	r29, r31
     3b0:	78 f3       	brcs	.-34     	; 0x390 <USART1_sendString+0x10>
     3b2:	8a e0       	ldi	r24, 0x0A	; 10
     3b4:	0e 94 b9 01 	call	0x372	; 0x372 <USART1_sendChar>
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	08 95       	ret

000003c2 <USART1_sendInt>:
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	43 ec       	ldi	r20, 0xC3	; 195
     3c8:	50 e4       	ldi	r21, 0x40	; 64
     3ca:	0e 94 ed 00 	call	0x1da	; 0x1da <intToStr>
     3ce:	83 ec       	ldi	r24, 0xC3	; 195
     3d0:	90 e4       	ldi	r25, 0x40	; 64
     3d2:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     3d6:	08 95       	ret

000003d8 <USART1_sendFloat>:
     3d8:	9a 01       	movw	r18, r20
     3da:	43 ec       	ldi	r20, 0xC3	; 195
     3dc:	50 e4       	ldi	r21, 0x40	; 64
     3de:	0e 94 2c 01 	call	0x258	; 0x258 <ftoa>
     3e2:	83 ec       	ldi	r24, 0xC3	; 195
     3e4:	90 e4       	ldi	r25, 0x40	; 64
     3e6:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     3ea:	08 95       	ret

000003ec <I2C_0_stop_transmission>:
     3ec:	e0 e0       	ldi	r30, 0x00	; 0
     3ee:	f9 e0       	ldi	r31, 0x09	; 9
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	85 83       	std	Z+5, r24	; 0x05
     3f4:	83 e0       	ldi	r24, 0x03	; 3
     3f6:	84 83       	std	Z+4, r24	; 0x04
     3f8:	08 95       	ret

000003fa <I2C_0_master_initialization>:
     3fa:	e0 e0       	ldi	r30, 0x00	; 0
     3fc:	f9 e0       	ldi	r31, 0x09	; 9
     3fe:	8d e0       	ldi	r24, 0x0D	; 13
     400:	86 83       	std	Z+6, r24	; 0x06
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	85 83       	std	Z+5, r24	; 0x05
     406:	83 81       	ldd	r24, Z+3	; 0x03
     408:	8a 60       	ori	r24, 0x0A	; 10
     40a:	83 83       	std	Z+3, r24	; 0x03
     40c:	83 81       	ldd	r24, Z+3	; 0x03
     40e:	81 60       	ori	r24, 0x01	; 1
     410:	83 83       	std	Z+3, r24	; 0x03
     412:	08 95       	ret

00000414 <I2C_0_sendAddress>:
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	c8 2f       	mov	r28, r24
     41a:	d6 2f       	mov	r29, r22
     41c:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     420:	83 70       	andi	r24, 0x03	; 3
     422:	83 30       	cpi	r24, 0x03	; 3
     424:	89 f4       	brne	.+34     	; 0x448 <I2C_0_sendAddress+0x34>
     426:	80 e4       	ldi	r24, 0x40	; 64
     428:	90 e4       	ldi	r25, 0x40	; 64
     42a:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     42e:	20 e6       	ldi	r18, 0x60	; 96
     430:	3a ee       	ldi	r19, 0xEA	; 234
     432:	01 c0       	rjmp	.+2      	; 0x436 <I2C_0_sendAddress+0x22>
     434:	9c 01       	movw	r18, r24
     436:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     43a:	83 70       	andi	r24, 0x03	; 3
     43c:	83 30       	cpi	r24, 0x03	; 3
     43e:	21 f4       	brne	.+8      	; 0x448 <I2C_0_sendAddress+0x34>
     440:	c9 01       	movw	r24, r18
     442:	01 97       	sbiw	r24, 0x01	; 1
     444:	23 2b       	or	r18, r19
     446:	b1 f7       	brne	.-20     	; 0x434 <I2C_0_sendAddress+0x20>
     448:	85 e0       	ldi	r24, 0x05	; 5
     44a:	80 93 05 09 	sts	0x0905, r24	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     44e:	dd 23       	and	r29, r29
     450:	41 f0       	breq	.+16     	; 0x462 <I2C_0_sendAddress+0x4e>
     452:	8c 2f       	mov	r24, r28
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	81 60       	ori	r24, 0x01	; 1
     45c:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     460:	04 c0       	rjmp	.+8      	; 0x46a <I2C_0_sendAddress+0x56>
     462:	8c 2f       	mov	r24, r28
     464:	88 0f       	add	r24, r24
     466:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     46a:	80 e6       	ldi	r24, 0x60	; 96
     46c:	9a ee       	ldi	r25, 0xEA	; 234
     46e:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     472:	24 ff       	sbrs	r18, 4
     474:	06 c0       	rjmp	.+12     	; 0x482 <I2C_0_sendAddress+0x6e>
     476:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     47a:	26 fd       	sbrc	r18, 6
     47c:	02 c0       	rjmp	.+4      	; 0x482 <I2C_0_sendAddress+0x6e>
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	b1 f7       	brne	.-20     	; 0x46e <I2C_0_sendAddress+0x5a>
     482:	89 2b       	or	r24, r25
     484:	21 f4       	brne	.+8      	; 0x48e <I2C_0_sendAddress+0x7a>
     486:	8a e4       	ldi	r24, 0x4A	; 74
     488:	90 e4       	ldi	r25, 0x40	; 64
     48a:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     48e:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     492:	82 ff       	sbrs	r24, 2
     494:	04 c0       	rjmp	.+8      	; 0x49e <I2C_0_sendAddress+0x8a>
     496:	82 e5       	ldi	r24, 0x52	; 82
     498:	90 e4       	ldi	r25, 0x40	; 64
     49a:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <I2C_0_sendData>:
     4a4:	e7 ee       	ldi	r30, 0xE7	; 231
     4a6:	f3 e0       	ldi	r31, 0x03	; 3
     4a8:	31 97       	sbiw	r30, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <I2C_0_sendData+0x4>
     4ac:	00 c0       	rjmp	.+0      	; 0x4ae <I2C_0_sendData+0xa>
     4ae:	00 00       	nop
     4b0:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     4b4:	80 e6       	ldi	r24, 0x60	; 96
     4b6:	9a ee       	ldi	r25, 0xEA	; 234
     4b8:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4bc:	24 ff       	sbrs	r18, 4
     4be:	02 c0       	rjmp	.+4      	; 0x4c4 <I2C_0_sendData+0x20>
     4c0:	01 97       	sbiw	r24, 0x01	; 1
     4c2:	d1 f7       	brne	.-12     	; 0x4b8 <I2C_0_sendData+0x14>
     4c4:	89 2b       	or	r24, r25
     4c6:	21 f4       	brne	.+8      	; 0x4d0 <I2C_0_sendData+0x2c>
     4c8:	8a e4       	ldi	r24, 0x4A	; 74
     4ca:	90 e4       	ldi	r25, 0x40	; 64
     4cc:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     4d0:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4d4:	83 fd       	sbrc	r24, 3
     4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <I2C_0_sendData+0x3c>
     4d8:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4dc:	82 ff       	sbrs	r24, 2
     4de:	06 c0       	rjmp	.+12     	; 0x4ec <I2C_0_sendData+0x48>
     4e0:	81 e7       	ldi	r24, 0x71	; 113
     4e2:	90 e4       	ldi	r25, 0x40	; 64
     4e4:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     4e8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <I2C_0_stop_transmission>
     4ec:	08 95       	ret

000004ee <I2C_0_recieveData>:
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	c0 e6       	ldi	r28, 0x60	; 96
     4f4:	da ee       	ldi	r29, 0xEA	; 234
     4f6:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     4fa:	88 23       	and	r24, r24
     4fc:	14 f0       	brlt	.+4      	; 0x502 <I2C_0_recieveData+0x14>
     4fe:	21 97       	sbiw	r28, 0x01	; 1
     500:	d1 f7       	brne	.-12     	; 0x4f6 <I2C_0_recieveData+0x8>
     502:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     506:	83 fd       	sbrc	r24, 3
     508:	04 c0       	rjmp	.+8      	; 0x512 <I2C_0_recieveData+0x24>
     50a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     50e:	82 ff       	sbrs	r24, 2
     510:	06 c0       	rjmp	.+12     	; 0x51e <I2C_0_recieveData+0x30>
     512:	85 e8       	ldi	r24, 0x85	; 133
     514:	90 e4       	ldi	r25, 0x40	; 64
     516:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     51a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <I2C_0_stop_transmission>
     51e:	cd 2b       	or	r28, r29
     520:	21 f4       	brne	.+8      	; 0x52a <I2C_0_recieveData+0x3c>
     522:	8a e4       	ldi	r24, 0x4A	; 74
     524:	90 e4       	ldi	r25, 0x40	; 64
     526:	0e 94 c0 01 	call	0x380	; 0x380 <USART1_sendString>
     52a:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	08 95       	ret

00000534 <Pressure_init>:
	
char out_str[35] = {0};	

void Pressure_init(void){
	
	PORTA.PIN2CTRL |= (1 << 3);   // SDA pull up //PA2
     534:	e0 e0       	ldi	r30, 0x00	; 0
     536:	f4 e0       	ldi	r31, 0x04	; 4
     538:	82 89       	ldd	r24, Z+18	; 0x12
     53a:	88 60       	ori	r24, 0x08	; 8
     53c:	82 8b       	std	Z+18, r24	; 0x12
	PORTA.PIN3CTRL |= (1 << 3);   // SCL pull up //PA3
     53e:	83 89       	ldd	r24, Z+19	; 0x13
     540:	88 60       	ori	r24, 0x08	; 8
     542:	83 8b       	std	Z+19, r24	; 0x13

	_OUTPUT_min=3355443;
     544:	83 e3       	ldi	r24, 0x33	; 51
     546:	93 e3       	ldi	r25, 0x33	; 51
     548:	a3 e3       	ldi	r26, 0x33	; 51
     54a:	b0 e0       	ldi	r27, 0x00	; 0
     54c:	80 93 16 41 	sts	0x4116, r24	; 0x804116 <_OUTPUT_min>
     550:	90 93 17 41 	sts	0x4117, r25	; 0x804117 <_OUTPUT_min+0x1>
     554:	a0 93 18 41 	sts	0x4118, r26	; 0x804118 <_OUTPUT_min+0x2>
     558:	b0 93 19 41 	sts	0x4119, r27	; 0x804119 <_OUTPUT_min+0x3>
	_OUTPUT_max=13421772;
     55c:	8c ec       	ldi	r24, 0xCC	; 204
     55e:	9c ec       	ldi	r25, 0xCC	; 204
     560:	ac ec       	ldi	r26, 0xCC	; 204
     562:	b0 e0       	ldi	r27, 0x00	; 0
     564:	80 93 bf 40 	sts	0x40BF, r24	; 0x8040bf <_OUTPUT_max>
     568:	90 93 c0 40 	sts	0x40C0, r25	; 0x8040c0 <_OUTPUT_max+0x1>
     56c:	a0 93 c1 40 	sts	0x40C1, r26	; 0x8040c1 <_OUTPUT_max+0x2>
     570:	b0 93 c2 40 	sts	0x40C2, r27	; 0x8040c2 <_OUTPUT_max+0x3>
	
	USART1_init(9600);
     574:	80 e8       	ldi	r24, 0x80	; 128
     576:	95 e2       	ldi	r25, 0x25	; 37
     578:	0e 94 8e 01 	call	0x31c	; 0x31c <USART1_init>
	I2C_0_master_initialization();
     57c:	0e 94 fd 01 	call	0x3fa	; 0x3fa <I2C_0_master_initialization>
     580:	08 95       	ret

00000582 <Pressure_read>:
	
}

float Pressure_read(void){
     582:	8f 92       	push	r8
     584:	9f 92       	push	r9
     586:	af 92       	push	r10
     588:	bf 92       	push	r11
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	cf 93       	push	r28
     594:	df 93       	push	r29

		
		
		I2C_0_sendAddress(MPRLS, 0);
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	88 e1       	ldi	r24, 0x18	; 24
     59a:	0e 94 0a 02 	call	0x414	; 0x414 <I2C_0_sendAddress>
		I2C_0_sendData(0xAA);
     59e:	8a ea       	ldi	r24, 0xAA	; 170
     5a0:	0e 94 52 02 	call	0x4a4	; 0x4a4 <I2C_0_sendData>
		I2C_0_sendData(0x00);
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	0e 94 52 02 	call	0x4a4	; 0x4a4 <I2C_0_sendData>
		I2C_0_sendData(0x00);
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	0e 94 52 02 	call	0x4a4	; 0x4a4 <I2C_0_sendData>
		I2C_0_stop_transmission();
     5b0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <I2C_0_stop_transmission>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5b4:	8f e0       	ldi	r24, 0x0F	; 15
     5b6:	97 e2       	ldi	r25, 0x27	; 39
     5b8:	01 97       	sbiw	r24, 0x01	; 1
     5ba:	f1 f7       	brne	.-4      	; 0x5b8 <Pressure_read+0x36>
     5bc:	00 c0       	rjmp	.+0      	; 0x5be <Pressure_read+0x3c>
     5be:	00 00       	nop
		_delay_ms(10);
		
		I2C_0_sendAddress(MPRLS, 1);
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	88 e1       	ldi	r24, 0x18	; 24
     5c4:	0e 94 0a 02 	call	0x414	; 0x414 <I2C_0_sendAddress>
		sdata = I2C_0_recieveData(); //status byte send by sensor
     5c8:	0e 94 77 02 	call	0x4ee	; 0x4ee <I2C_0_recieveData>
     5cc:	80 93 b6 40 	sts	0x40B6, r24	; 0x8040b6 <sdata>
		T24BitValue =I2C_0_recieveData();
     5d0:	0e 94 77 02 	call	0x4ee	; 0x4ee <I2C_0_recieveData>
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	a0 e0       	ldi	r26, 0x00	; 0
     5d8:	b0 e0       	ldi	r27, 0x00	; 0
		T24BitValue <<=8;
     5da:	ba 2f       	mov	r27, r26
     5dc:	a9 2f       	mov	r26, r25
     5de:	98 2f       	mov	r25, r24
     5e0:	88 27       	eor	r24, r24
     5e2:	80 93 b7 40 	sts	0x40B7, r24	; 0x8040b7 <T24BitValue>
     5e6:	90 93 b8 40 	sts	0x40B8, r25	; 0x8040b8 <T24BitValue+0x1>
     5ea:	a0 93 b9 40 	sts	0x40B9, r26	; 0x8040b9 <T24BitValue+0x2>
     5ee:	b0 93 ba 40 	sts	0x40BA, r27	; 0x8040ba <T24BitValue+0x3>
		T24BitValue |=I2C_0_recieveData();
     5f2:	0e 94 77 02 	call	0x4ee	; 0x4ee <I2C_0_recieveData>
     5f6:	40 91 b7 40 	lds	r20, 0x40B7	; 0x8040b7 <T24BitValue>
     5fa:	50 91 b8 40 	lds	r21, 0x40B8	; 0x8040b8 <T24BitValue+0x1>
     5fe:	60 91 b9 40 	lds	r22, 0x40B9	; 0x8040b9 <T24BitValue+0x2>
     602:	70 91 ba 40 	lds	r23, 0x40BA	; 0x8040ba <T24BitValue+0x3>
     606:	48 2b       	or	r20, r24
		T24BitValue <<=8;
     608:	76 2f       	mov	r23, r22
     60a:	65 2f       	mov	r22, r21
     60c:	54 2f       	mov	r21, r20
     60e:	44 27       	eor	r20, r20
     610:	40 93 b7 40 	sts	0x40B7, r20	; 0x8040b7 <T24BitValue>
     614:	50 93 b8 40 	sts	0x40B8, r21	; 0x8040b8 <T24BitValue+0x1>
     618:	60 93 b9 40 	sts	0x40B9, r22	; 0x8040b9 <T24BitValue+0x2>
     61c:	70 93 ba 40 	sts	0x40BA, r23	; 0x8040ba <T24BitValue+0x3>
		T24BitValue |=I2C_0_recieveData();
     620:	0e 94 77 02 	call	0x4ee	; 0x4ee <I2C_0_recieveData>
     624:	40 91 b7 40 	lds	r20, 0x40B7	; 0x8040b7 <T24BitValue>
     628:	50 91 b8 40 	lds	r21, 0x40B8	; 0x8040b8 <T24BitValue+0x1>
     62c:	60 91 b9 40 	lds	r22, 0x40B9	; 0x8040b9 <T24BitValue+0x2>
     630:	70 91 ba 40 	lds	r23, 0x40BA	; 0x8040ba <T24BitValue+0x3>
     634:	48 2b       	or	r20, r24
     636:	40 93 b7 40 	sts	0x40B7, r20	; 0x8040b7 <T24BitValue>
     63a:	50 93 b8 40 	sts	0x40B8, r21	; 0x8040b8 <T24BitValue+0x1>
     63e:	60 93 b9 40 	sts	0x40B9, r22	; 0x8040b9 <T24BitValue+0x2>
     642:	70 93 ba 40 	sts	0x40BA, r23	; 0x8040ba <T24BitValue+0x3>
		
		TWI0.MCTRLB |= (1 << 2);   // Send NACK
     646:	e0 e0       	ldi	r30, 0x00	; 0
     648:	f9 e0       	ldi	r31, 0x09	; 9
     64a:	84 81       	ldd	r24, Z+4	; 0x04
     64c:	84 60       	ori	r24, 0x04	; 4
     64e:	84 83       	std	Z+4, r24	; 0x04
     650:	8f e0       	ldi	r24, 0x0F	; 15
     652:	97 e2       	ldi	r25, 0x27	; 39
     654:	01 97       	sbiw	r24, 0x01	; 1
     656:	f1 f7       	brne	.-4      	; 0x654 <Pressure_read+0xd2>
     658:	00 c0       	rjmp	.+0      	; 0x65a <Pressure_read+0xd8>
     65a:	00 00       	nop
		//I2C_0_stop_transmission();
		_delay_ms(10);
				

		psi = (T24BitValue - _OUTPUT_min) * (_PSI_max - _PSI_min);
     65c:	80 90 16 41 	lds	r8, 0x4116	; 0x804116 <_OUTPUT_min>
     660:	90 90 17 41 	lds	r9, 0x4117	; 0x804117 <_OUTPUT_min+0x1>
     664:	a0 90 18 41 	lds	r10, 0x4118	; 0x804118 <_OUTPUT_min+0x2>
     668:	b0 90 19 41 	lds	r11, 0x4119	; 0x804119 <_OUTPUT_min+0x3>
     66c:	80 91 b7 40 	lds	r24, 0x40B7	; 0x8040b7 <T24BitValue>
     670:	90 91 b8 40 	lds	r25, 0x40B8	; 0x8040b8 <T24BitValue+0x1>
     674:	a0 91 b9 40 	lds	r26, 0x40B9	; 0x8040b9 <T24BitValue+0x2>
     678:	b0 91 ba 40 	lds	r27, 0x40BA	; 0x8040ba <T24BitValue+0x3>
     67c:	9c 01       	movw	r18, r24
     67e:	ad 01       	movw	r20, r26
     680:	28 19       	sub	r18, r8
     682:	39 09       	sbc	r19, r9
     684:	4a 09       	sbc	r20, r10
     686:	5b 09       	sbc	r21, r11
     688:	c0 91 b4 40 	lds	r28, 0x40B4	; 0x8040b4 <_PSI_min>
     68c:	d0 91 b5 40 	lds	r29, 0x40B5	; 0x8040b5 <_PSI_min+0x1>
     690:	a0 91 09 40 	lds	r26, 0x4009	; 0x804009 <_PSI_max>
     694:	b0 91 0a 40 	lds	r27, 0x400A	; 0x80400a <_PSI_max+0x1>
     698:	ac 1b       	sub	r26, r28
     69a:	bd 0b       	sbc	r27, r29
     69c:	0e 94 95 09 	call	0x132a	; 0x132a <__muluhisi3>
     6a0:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__floatunsisf>
     6a4:	6b 01       	movw	r12, r22
     6a6:	7c 01       	movw	r14, r24
		psi /= (_OUTPUT_max - _OUTPUT_min);
     6a8:	80 91 bf 40 	lds	r24, 0x40BF	; 0x8040bf <_OUTPUT_max>
     6ac:	90 91 c0 40 	lds	r25, 0x40C0	; 0x8040c0 <_OUTPUT_max+0x1>
     6b0:	a0 91 c1 40 	lds	r26, 0x40C1	; 0x8040c1 <_OUTPUT_max+0x2>
     6b4:	b0 91 c2 40 	lds	r27, 0x40C2	; 0x8040c2 <_OUTPUT_max+0x3>
     6b8:	bc 01       	movw	r22, r24
     6ba:	cd 01       	movw	r24, r26
     6bc:	68 19       	sub	r22, r8
     6be:	79 09       	sbc	r23, r9
     6c0:	8a 09       	sbc	r24, r10
     6c2:	9b 09       	sbc	r25, r11
     6c4:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__floatunsisf>
     6c8:	9b 01       	movw	r18, r22
     6ca:	ac 01       	movw	r20, r24
     6cc:	c7 01       	movw	r24, r14
     6ce:	b6 01       	movw	r22, r12
     6d0:	0e 94 25 06 	call	0xc4a	; 0xc4a <__divsf3>
     6d4:	6b 01       	movw	r12, r22
     6d6:	7c 01       	movw	r14, r24
		psi += _PSI_min;
     6d8:	be 01       	movw	r22, r28
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__floatunsisf>
     6e2:	a7 01       	movw	r20, r14
     6e4:	96 01       	movw	r18, r12
     6e6:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     6ea:	60 93 b0 40 	sts	0x40B0, r22	; 0x8040b0 <psi>
     6ee:	70 93 b1 40 	sts	0x40B1, r23	; 0x8040b1 <psi+0x1>
     6f2:	80 93 b2 40 	sts	0x40B2, r24	; 0x8040b2 <psi+0x2>
     6f6:	90 93 b3 40 	sts	0x40B3, r25	; 0x8040b3 <psi+0x3>
		
		cmh2o = psi*70.307;
     6fa:	2f e2       	ldi	r18, 0x2F	; 47
     6fc:	3d e9       	ldi	r19, 0x9D	; 157
     6fe:	4c e8       	ldi	r20, 0x8C	; 140
     700:	52 e4       	ldi	r21, 0x42	; 66
     702:	0e 94 84 07 	call	0xf08	; 0xf08 <__mulsf3>
     706:	60 93 ac 40 	sts	0x40AC, r22	; 0x8040ac <cmh2o>
     70a:	70 93 ad 40 	sts	0x40AD, r23	; 0x8040ad <cmh2o+0x1>
     70e:	80 93 ae 40 	sts	0x40AE, r24	; 0x8040ae <cmh2o+0x2>
     712:	90 93 af 40 	sts	0x40AF, r25	; 0x8040af <cmh2o+0x3>
		
		if (cmh2o > 1000)
     716:	20 e0       	ldi	r18, 0x00	; 0
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	4a e7       	ldi	r20, 0x7A	; 122
     71c:	54 e4       	ldi	r21, 0x44	; 68
     71e:	0e 94 7f 07 	call	0xefe	; 0xefe <__gesf2>
     722:	18 16       	cp	r1, r24
     724:	44 f4       	brge	.+16     	; 0x736 <Pressure_read+0x1b4>
		{
			cmh2o = 0;
     726:	10 92 ac 40 	sts	0x40AC, r1	; 0x8040ac <cmh2o>
     72a:	10 92 ad 40 	sts	0x40AD, r1	; 0x8040ad <cmh2o+0x1>
     72e:	10 92 ae 40 	sts	0x40AE, r1	; 0x8040ae <cmh2o+0x2>
     732:	10 92 af 40 	sts	0x40AF, r1	; 0x8040af <cmh2o+0x3>
		}
		
		USART1_sendFloat(cmh2o, 1);
     736:	60 91 ac 40 	lds	r22, 0x40AC	; 0x8040ac <cmh2o>
     73a:	70 91 ad 40 	lds	r23, 0x40AD	; 0x8040ad <cmh2o+0x1>
     73e:	80 91 ae 40 	lds	r24, 0x40AE	; 0x8040ae <cmh2o+0x2>
     742:	90 91 af 40 	lds	r25, 0x40AF	; 0x8040af <cmh2o+0x3>
     746:	41 e0       	ldi	r20, 0x01	; 1
     748:	50 e0       	ldi	r21, 0x00	; 0
     74a:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <USART1_sendFloat>
		return cmh2o;
     74e:	60 91 ac 40 	lds	r22, 0x40AC	; 0x8040ac <cmh2o>
     752:	70 91 ad 40 	lds	r23, 0x40AD	; 0x8040ad <cmh2o+0x1>
     756:	80 91 ae 40 	lds	r24, 0x40AE	; 0x8040ae <cmh2o+0x2>
     75a:	90 91 af 40 	lds	r25, 0x40AF	; 0x8040af <cmh2o+0x3>
		
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	ff 90       	pop	r15
     764:	ef 90       	pop	r14
     766:	df 90       	pop	r13
     768:	cf 90       	pop	r12
     76a:	bf 90       	pop	r11
     76c:	af 90       	pop	r10
     76e:	9f 90       	pop	r9
     770:	8f 90       	pop	r8
     772:	08 95       	ret

00000774 <TCA0_PWM_init>:
    }
}

void TCA0_PWM_init(void)
{
sei();
     774:	78 94       	sei
/* First PWM on PA1 PIN */
/* Direction set and set output to high */
PORTA.DIR |= (1 << 0);
     776:	e0 e0       	ldi	r30, 0x00	; 0
     778:	f4 e0       	ldi	r31, 0x04	; 4
     77a:	80 81       	ld	r24, Z
     77c:	81 60       	ori	r24, 0x01	; 1
     77e:	80 83       	st	Z, r24
PORTA.PIN0CTRL |= (1 << 3);
     780:	80 89       	ldd	r24, Z+16	; 0x10
     782:	88 60       	ori	r24, 0x08	; 8
     784:	80 8b       	std	Z+16, r24	; 0x10
//PORTA.OUTSET |= (1 << 0);
TCA0.SINGLE.PER = 3999;//calculation for 1ms
     786:	e0 e0       	ldi	r30, 0x00	; 0
     788:	fa e0       	ldi	r31, 0x0A	; 10
     78a:	8f e9       	ldi	r24, 0x9F	; 159
     78c:	9f e0       	ldi	r25, 0x0F	; 15
     78e:	86 a3       	std	Z+38, r24	; 0x26
     790:	97 a3       	std	Z+39, r25	; 0x27

TCA0.SINGLE.CNT = 0;
     792:	10 a2       	std	Z+32, r1	; 0x20
     794:	11 a2       	std	Z+33, r1	; 0x21

TCA0.SINGLE.CTRLA |= (0x0 << 1); //Ftca = fclk_per
     796:	80 81       	ld	r24, Z
     798:	80 83       	st	Z, r24
TCA0.SINGLE.CTRLB |= (1 << 4); // compare 0 enable
     79a:	81 81       	ldd	r24, Z+1	; 0x01
     79c:	80 61       	ori	r24, 0x10	; 16
     79e:	81 83       	std	Z+1, r24	; 0x01
TCA0.SINGLE.CTRLB |= (0x3 << 0); // Single slope PWM
     7a0:	81 81       	ldd	r24, Z+1	; 0x01
     7a2:	83 60       	ori	r24, 0x03	; 3
     7a4:	81 83       	std	Z+1, r24	; 0x01
TCA0.SINGLE.CTRLA |= (1 << 0); // Enable PWM
     7a6:	80 81       	ld	r24, Z
     7a8:	81 60       	ori	r24, 0x01	; 1
     7aa:	80 83       	st	Z, r24
     7ac:	08 95       	ret

000007ae <PWM_Condition>:

}

void PWM_Condition(void)
{
if (dutyCycle >3999)
     7ae:	80 91 a0 40 	lds	r24, 0x40A0	; 0x8040a0 <dutyCycle>
     7b2:	90 91 a1 40 	lds	r25, 0x40A1	; 0x8040a1 <dutyCycle+0x1>
     7b6:	a0 91 a2 40 	lds	r26, 0x40A2	; 0x8040a2 <dutyCycle+0x2>
     7ba:	b0 91 a3 40 	lds	r27, 0x40A3	; 0x8040a3 <dutyCycle+0x3>
     7be:	80 3a       	cpi	r24, 0xA0	; 160
     7c0:	9f 40       	sbci	r25, 0x0F	; 15
     7c2:	a1 05       	cpc	r26, r1
     7c4:	b1 05       	cpc	r27, r1
     7c6:	60 f0       	brcs	.+24     	; 0x7e0 <PWM_Condition+0x32>
{
dutyCycle  = 3999;
     7c8:	8f e9       	ldi	r24, 0x9F	; 159
     7ca:	9f e0       	ldi	r25, 0x0F	; 15
     7cc:	a0 e0       	ldi	r26, 0x00	; 0
     7ce:	b0 e0       	ldi	r27, 0x00	; 0
     7d0:	80 93 a0 40 	sts	0x40A0, r24	; 0x8040a0 <dutyCycle>
     7d4:	90 93 a1 40 	sts	0x40A1, r25	; 0x8040a1 <dutyCycle+0x1>
     7d8:	a0 93 a2 40 	sts	0x40A2, r26	; 0x8040a2 <dutyCycle+0x2>
     7dc:	b0 93 a3 40 	sts	0x40A3, r27	; 0x8040a3 <dutyCycle+0x3>
     7e0:	08 95       	ret

000007e2 <P_control>:
// TCA0.SINGLE.CMP1 = 2500; // Duty cycle

}

void P_control(void)
{
     7e2:	cf 92       	push	r12
     7e4:	df 92       	push	r13
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
Kp_error = (Set_pressure + 1) - current_pressure;
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e8       	ldi	r20, 0x80	; 128
     7f0:	5f e3       	ldi	r21, 0x3F	; 63
     7f2:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     7f6:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     7fa:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     7fe:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     802:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     806:	20 91 a8 40 	lds	r18, 0x40A8	; 0x8040a8 <current_pressure>
     80a:	30 91 a9 40 	lds	r19, 0x40A9	; 0x8040a9 <current_pressure+0x1>
     80e:	40 91 aa 40 	lds	r20, 0x40AA	; 0x8040aa <current_pressure+0x2>
     812:	50 91 ab 40 	lds	r21, 0x40AB	; 0x8040ab <current_pressure+0x3>
     816:	0e 94 b3 05 	call	0xb66	; 0xb66 <__subsf3>
     81a:	60 93 a4 40 	sts	0x40A4, r22	; 0x8040a4 <Kp_error>
     81e:	70 93 a5 40 	sts	0x40A5, r23	; 0x8040a5 <Kp_error+0x1>
     822:	80 93 a6 40 	sts	0x40A6, r24	; 0x8040a6 <Kp_error+0x2>
     826:	90 93 a7 40 	sts	0x40A7, r25	; 0x8040a7 <Kp_error+0x3>
dutyCycle = dutyCycle + (Kp*Kp_error); //OUTPUT ON PA0 PIN
     82a:	20 91 05 40 	lds	r18, 0x4005	; 0x804005 <Kp>
     82e:	30 91 06 40 	lds	r19, 0x4006	; 0x804006 <Kp+0x1>
     832:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <Kp+0x2>
     836:	50 91 08 40 	lds	r21, 0x4008	; 0x804008 <Kp+0x3>
     83a:	0e 94 84 07 	call	0xf08	; 0xf08 <__mulsf3>
     83e:	6b 01       	movw	r12, r22
     840:	7c 01       	movw	r14, r24
     842:	60 91 a0 40 	lds	r22, 0x40A0	; 0x8040a0 <dutyCycle>
     846:	70 91 a1 40 	lds	r23, 0x40A1	; 0x8040a1 <dutyCycle+0x1>
     84a:	80 91 a2 40 	lds	r24, 0x40A2	; 0x8040a2 <dutyCycle+0x2>
     84e:	90 91 a3 40 	lds	r25, 0x40A3	; 0x8040a3 <dutyCycle+0x3>
     852:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__floatunsisf>
     856:	a7 01       	movw	r20, r14
     858:	96 01       	movw	r18, r12
     85a:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     85e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__fixunssfsi>
     862:	60 93 a0 40 	sts	0x40A0, r22	; 0x8040a0 <dutyCycle>
     866:	70 93 a1 40 	sts	0x40A1, r23	; 0x8040a1 <dutyCycle+0x1>
     86a:	80 93 a2 40 	sts	0x40A2, r24	; 0x8040a2 <dutyCycle+0x2>
     86e:	90 93 a3 40 	sts	0x40A3, r25	; 0x8040a3 <dutyCycle+0x3>
PWM_Condition();
     872:	0e 94 d7 03 	call	0x7ae	; 0x7ae <PWM_Condition>

}
     876:	ff 90       	pop	r15
     878:	ef 90       	pop	r14
     87a:	df 90       	pop	r13
     87c:	cf 90       	pop	r12
     87e:	08 95       	ret

00000880 <continous_intubation>:
dutyCycle = 0;
}
}

void continous_intubation(void)
{
     880:	8f 92       	push	r8
     882:	9f 92       	push	r9
     884:	af 92       	push	r10
     886:	bf 92       	push	r11
     888:	cf 92       	push	r12
     88a:	df 92       	push	r13
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
	current_pressure = Pressure_read();
     890:	0e 94 c1 02 	call	0x582	; 0x582 <Pressure_read>
     894:	60 93 a8 40 	sts	0x40A8, r22	; 0x8040a8 <current_pressure>
     898:	70 93 a9 40 	sts	0x40A9, r23	; 0x8040a9 <current_pressure+0x1>
     89c:	80 93 aa 40 	sts	0x40AA, r24	; 0x8040aa <current_pressure+0x2>
     8a0:	90 93 ab 40 	sts	0x40AB, r25	; 0x8040ab <current_pressure+0x3>
	USART1_sendFloat(current_pressure , 1);
     8a4:	41 e0       	ldi	r20, 0x01	; 1
     8a6:	50 e0       	ldi	r21, 0x00	; 0
     8a8:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <USART1_sendFloat>
	P_control();
     8ac:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <P_control>
	
	if (current_pressure <= Set_pressure - 2)
     8b0:	20 e0       	ldi	r18, 0x00	; 0
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	40 e0       	ldi	r20, 0x00	; 0
     8b6:	50 e4       	ldi	r21, 0x40	; 64
     8b8:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     8bc:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     8c0:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     8c4:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     8c8:	0e 94 b3 05 	call	0xb66	; 0xb66 <__subsf3>
     8cc:	20 91 a8 40 	lds	r18, 0x40A8	; 0x8040a8 <current_pressure>
     8d0:	30 91 a9 40 	lds	r19, 0x40A9	; 0x8040a9 <current_pressure+0x1>
     8d4:	40 91 aa 40 	lds	r20, 0x40AA	; 0x8040aa <current_pressure+0x2>
     8d8:	50 91 ab 40 	lds	r21, 0x40AB	; 0x8040ab <current_pressure+0x3>
     8dc:	0e 94 7f 07 	call	0xefe	; 0xefe <__gesf2>
     8e0:	88 23       	and	r24, r24
     8e2:	1c f0       	brlt	.+6      	; 0x8ea <continous_intubation+0x6a>
	{
		low_pressure_flag = true;
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
	}

	if (low_pressure_flag == true)
     8ea:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     8ee:	88 23       	and	r24, r24
     8f0:	09 f4       	brne	.+2      	; 0x8f4 <continous_intubation+0x74>
     8f2:	54 c0       	rjmp	.+168    	; 0x99c <continous_intubation+0x11c>
	{
		dutyCycle = 1999;
     8f4:	8f ec       	ldi	r24, 0xCF	; 207
     8f6:	97 e0       	ldi	r25, 0x07	; 7
     8f8:	a0 e0       	ldi	r26, 0x00	; 0
     8fa:	b0 e0       	ldi	r27, 0x00	; 0
     8fc:	80 93 a0 40 	sts	0x40A0, r24	; 0x8040a0 <dutyCycle>
     900:	90 93 a1 40 	sts	0x40A1, r25	; 0x8040a1 <dutyCycle+0x1>
     904:	a0 93 a2 40 	sts	0x40A2, r26	; 0x8040a2 <dutyCycle+0x2>
     908:	b0 93 a3 40 	sts	0x40A3, r27	; 0x8040a3 <dutyCycle+0x3>
		while (current_pressure <= Set_pressure + 1)
     90c:	17 c0       	rjmp	.+46     	; 0x93c <continous_intubation+0xbc>
		{
			current_pressure =  Pressure_read();
     90e:	0e 94 c1 02 	call	0x582	; 0x582 <Pressure_read>
     912:	60 93 a8 40 	sts	0x40A8, r22	; 0x8040a8 <current_pressure>
     916:	70 93 a9 40 	sts	0x40A9, r23	; 0x8040a9 <current_pressure+0x1>
     91a:	80 93 aa 40 	sts	0x40AA, r24	; 0x8040aa <current_pressure+0x2>
     91e:	90 93 ab 40 	sts	0x40AB, r25	; 0x8040ab <current_pressure+0x3>

			P_control();
     922:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <P_control>
			// USART1_sendFloat(current_pressure , 1);
			
			TCA0.SINGLE.CTRLA |= (1 << 0);
     926:	e0 e0       	ldi	r30, 0x00	; 0
     928:	fa e0       	ldi	r31, 0x0A	; 10
     92a:	80 81       	ld	r24, Z
     92c:	81 60       	ori	r24, 0x01	; 1
     92e:	80 83       	st	Z, r24
		//	USART1_sendString("Increasing Pressure");
			TCA0.SINGLE.CMP0 = dutyCycle;			//MOTOR PWM
     930:	80 91 a0 40 	lds	r24, 0x40A0	; 0x8040a0 <dutyCycle>
     934:	90 91 a1 40 	lds	r25, 0x40A1	; 0x8040a1 <dutyCycle+0x1>
     938:	80 a7       	std	Z+40, r24	; 0x28
     93a:	91 a7       	std	Z+41, r25	; 0x29
	}

	if (low_pressure_flag == true)
	{
		dutyCycle = 1999;
		while (current_pressure <= Set_pressure + 1)
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e8       	ldi	r20, 0x80	; 128
     942:	5f e3       	ldi	r21, 0x3F	; 63
     944:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     948:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     94c:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     950:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     954:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     958:	20 91 a8 40 	lds	r18, 0x40A8	; 0x8040a8 <current_pressure>
     95c:	30 91 a9 40 	lds	r19, 0x40A9	; 0x8040a9 <current_pressure+0x1>
     960:	40 91 aa 40 	lds	r20, 0x40AA	; 0x8040aa <current_pressure+0x2>
     964:	50 91 ab 40 	lds	r21, 0x40AB	; 0x8040ab <current_pressure+0x3>
     968:	0e 94 7f 07 	call	0xefe	; 0xefe <__gesf2>
     96c:	88 23       	and	r24, r24
     96e:	7c f6       	brge	.-98     	; 0x90e <continous_intubation+0x8e>
			
			TCA0.SINGLE.CTRLA |= (1 << 0);
		//	USART1_sendString("Increasing Pressure");
			TCA0.SINGLE.CMP0 = dutyCycle;			//MOTOR PWM
		}
		low_pressure_flag = false;
     970:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
     974:	13 c0       	rjmp	.+38     	; 0x99c <continous_intubation+0x11c>

	}
	while (current_pressure > Set_pressure + 2)
	{
		current_pressure =  Pressure_read();
     976:	0e 94 c1 02 	call	0x582	; 0x582 <Pressure_read>
     97a:	60 93 a8 40 	sts	0x40A8, r22	; 0x8040a8 <current_pressure>
     97e:	70 93 a9 40 	sts	0x40A9, r23	; 0x8040a9 <current_pressure+0x1>
     982:	80 93 aa 40 	sts	0x40AA, r24	; 0x8040aa <current_pressure+0x2>
     986:	90 93 ab 40 	sts	0x40AB, r25	; 0x8040ab <current_pressure+0x3>
		// USART1_sendFloat(current_pressure , 1);
		P_control();
     98a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <P_control>
		TCA0.SINGLE.CTRLA |= (1 << 0);
     98e:	e0 e0       	ldi	r30, 0x00	; 0
     990:	fa e0       	ldi	r31, 0x0A	; 10
     992:	80 81       	ld	r24, Z
     994:	81 60       	ori	r24, 0x01	; 1
     996:	80 83       	st	Z, r24
		TCA0.SINGLE.CMP0 = 0;//dutyCycle;			//MOTOR PWM
     998:	10 a6       	std	Z+40, r1	; 0x28
     99a:	11 a6       	std	Z+41, r1	; 0x29
			TCA0.SINGLE.CMP0 = dutyCycle;			//MOTOR PWM
		}
		low_pressure_flag = false;

	}
	while (current_pressure > Set_pressure + 2)
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	50 e4       	ldi	r21, 0x40	; 64
     9a4:	60 91 01 40 	lds	r22, 0x4001	; 0x804001 <Set_pressure>
     9a8:	70 91 02 40 	lds	r23, 0x4002	; 0x804002 <Set_pressure+0x1>
     9ac:	80 91 03 40 	lds	r24, 0x4003	; 0x804003 <Set_pressure+0x2>
     9b0:	90 91 04 40 	lds	r25, 0x4004	; 0x804004 <Set_pressure+0x3>
     9b4:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     9b8:	20 91 a8 40 	lds	r18, 0x40A8	; 0x8040a8 <current_pressure>
     9bc:	30 91 a9 40 	lds	r19, 0x40A9	; 0x8040a9 <current_pressure+0x1>
     9c0:	40 91 aa 40 	lds	r20, 0x40AA	; 0x8040aa <current_pressure+0x2>
     9c4:	50 91 ab 40 	lds	r21, 0x40AB	; 0x8040ab <current_pressure+0x3>
     9c8:	0e 94 20 06 	call	0xc40	; 0xc40 <__cmpsf2>
     9cc:	88 23       	and	r24, r24
     9ce:	9c f2       	brlt	.-90     	; 0x976 <continous_intubation+0xf6>
     9d0:	16 c0       	rjmp	.+44     	; 0x9fe <continous_intubation+0x17e>
		
	}
	
	while (current_pressure <= (Set_pressure + 2) && current_pressure >= (Set_pressure - 2))
	{
		current_pressure =  Pressure_read();
     9d2:	0e 94 c1 02 	call	0x582	; 0x582 <Pressure_read>
     9d6:	60 93 a8 40 	sts	0x40A8, r22	; 0x8040a8 <current_pressure>
     9da:	70 93 a9 40 	sts	0x40A9, r23	; 0x8040a9 <current_pressure+0x1>
     9de:	80 93 aa 40 	sts	0x40AA, r24	; 0x8040aa <current_pressure+0x2>
     9e2:	90 93 ab 40 	sts	0x40AB, r25	; 0x8040ab <current_pressure+0x3>
		// USART1_sendFloat(current_pressure , 1);
        //TCA0.SINGLE.CTRLA &= ~(1 << 0);		// MOTOR OFF
		dutyCycle = 0;
     9e6:	10 92 a0 40 	sts	0x40A0, r1	; 0x8040a0 <dutyCycle>
     9ea:	10 92 a1 40 	sts	0x40A1, r1	; 0x8040a1 <dutyCycle+0x1>
     9ee:	10 92 a2 40 	sts	0x40A2, r1	; 0x8040a2 <dutyCycle+0x2>
     9f2:	10 92 a3 40 	sts	0x40A3, r1	; 0x8040a3 <dutyCycle+0x3>
		TCA0.SINGLE.CMP0 = dutyCycle;
     9f6:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     9fa:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
		TCA0.SINGLE.CTRLA |= (1 << 0);
		TCA0.SINGLE.CMP0 = 0;//dutyCycle;			//MOTOR PWM
		
	}
	
	while (current_pressure <= (Set_pressure + 2) && current_pressure >= (Set_pressure - 2))
     9fe:	80 90 01 40 	lds	r8, 0x4001	; 0x804001 <Set_pressure>
     a02:	90 90 02 40 	lds	r9, 0x4002	; 0x804002 <Set_pressure+0x1>
     a06:	a0 90 03 40 	lds	r10, 0x4003	; 0x804003 <Set_pressure+0x2>
     a0a:	b0 90 04 40 	lds	r11, 0x4004	; 0x804004 <Set_pressure+0x3>
     a0e:	20 e0       	ldi	r18, 0x00	; 0
     a10:	30 e0       	ldi	r19, 0x00	; 0
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	50 e4       	ldi	r21, 0x40	; 64
     a16:	c5 01       	movw	r24, r10
     a18:	b4 01       	movw	r22, r8
     a1a:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     a1e:	c0 90 a8 40 	lds	r12, 0x40A8	; 0x8040a8 <current_pressure>
     a22:	d0 90 a9 40 	lds	r13, 0x40A9	; 0x8040a9 <current_pressure+0x1>
     a26:	e0 90 aa 40 	lds	r14, 0x40AA	; 0x8040aa <current_pressure+0x2>
     a2a:	f0 90 ab 40 	lds	r15, 0x40AB	; 0x8040ab <current_pressure+0x3>
     a2e:	a7 01       	movw	r20, r14
     a30:	96 01       	movw	r18, r12
     a32:	0e 94 7f 07 	call	0xefe	; 0xefe <__gesf2>
     a36:	88 23       	and	r24, r24
     a38:	8c f0       	brlt	.+34     	; 0xa5c <continous_intubation+0x1dc>
     a3a:	20 e0       	ldi	r18, 0x00	; 0
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	40 e0       	ldi	r20, 0x00	; 0
     a40:	50 e4       	ldi	r21, 0x40	; 64
     a42:	c5 01       	movw	r24, r10
     a44:	b4 01       	movw	r22, r8
     a46:	0e 94 b3 05 	call	0xb66	; 0xb66 <__subsf3>
     a4a:	9b 01       	movw	r18, r22
     a4c:	ac 01       	movw	r20, r24
     a4e:	c7 01       	movw	r24, r14
     a50:	b6 01       	movw	r22, r12
     a52:	0e 94 7f 07 	call	0xefe	; 0xefe <__gesf2>
     a56:	88 23       	and	r24, r24
     a58:	0c f0       	brlt	.+2      	; 0xa5c <continous_intubation+0x1dc>
     a5a:	bb cf       	rjmp	.-138    	; 0x9d2 <continous_intubation+0x152>
		// USART1_sendFloat(current_pressure , 1);
        //TCA0.SINGLE.CTRLA &= ~(1 << 0);		// MOTOR OFF
		dutyCycle = 0;
		TCA0.SINGLE.CMP0 = dutyCycle;
	}
}
     a5c:	ff 90       	pop	r15
     a5e:	ef 90       	pop	r14
     a60:	df 90       	pop	r13
     a62:	cf 90       	pop	r12
     a64:	bf 90       	pop	r11
     a66:	af 90       	pop	r10
     a68:	9f 90       	pop	r9
     a6a:	8f 90       	pop	r8
     a6c:	08 95       	ret

00000a6e <TCB_TIMER_init>:


void TCB_TIMER_init(void)
{
	TCB0.CCMP = 3906;
     a6e:	e0 e0       	ldi	r30, 0x00	; 0
     a70:	fb e0       	ldi	r31, 0x0B	; 11
     a72:	82 e4       	ldi	r24, 0x42	; 66
     a74:	9f e0       	ldi	r25, 0x0F	; 15
     a76:	84 87       	std	Z+12, r24	; 0x0c
     a78:	95 87       	std	Z+13, r25	; 0x0d
	TCB0.CTRLA |= 0x05;
     a7a:	80 81       	ld	r24, Z
     a7c:	85 60       	ori	r24, 0x05	; 5
     a7e:	80 83       	st	Z, r24
	TCB0.INTCTRL |= (1<<0);
     a80:	85 81       	ldd	r24, Z+5	; 0x05
     a82:	81 60       	ori	r24, 0x01	; 1
     a84:	85 83       	std	Z+5, r24	; 0x05
     a86:	08 95       	ret

00000a88 <main>:



int main(void)
{
  USART1_init(9600);
     a88:	80 e8       	ldi	r24, 0x80	; 128
     a8a:	95 e2       	ldi	r25, 0x25	; 37
     a8c:	0e 94 8e 01 	call	0x31c	; 0x31c <USART1_init>
  Pressure_init();
     a90:	0e 94 9a 02 	call	0x534	; 0x534 <Pressure_init>
  TCA0_PWM_init();
     a94:	0e 94 ba 03 	call	0x774	; 0x774 <TCA0_PWM_init>
  TCB_TIMER_init();
     a98:	0e 94 37 05 	call	0xa6e	; 0xa6e <TCB_TIMER_init>
  PORTE.DIR |= (1<<0); //PE0 VALVE 1
     a9c:	e0 e8       	ldi	r30, 0x80	; 128
     a9e:	f4 e0       	ldi	r31, 0x04	; 4
     aa0:	80 81       	ld	r24, Z
     aa2:	81 60       	ori	r24, 0x01	; 1
     aa4:	80 83       	st	Z, r24
  PORTE.DIR |= (1<<1); // PE1 VALVE 2
     aa6:	80 81       	ld	r24, Z
     aa8:	82 60       	ori	r24, 0x02	; 2
     aaa:	80 83       	st	Z, r24
  PORTE.OUTSET |= (1<<0);
     aac:	85 81       	ldd	r24, Z+5	; 0x05
     aae:	81 60       	ori	r24, 0x01	; 1
     ab0:	85 83       	std	Z+5, r24	; 0x05
  PORTE.OUTSET |= (1<<1);
     ab2:	85 81       	ldd	r24, Z+5	; 0x05
     ab4:	82 60       	ori	r24, 0x02	; 2
     ab6:	85 83       	std	Z+5, r24	; 0x05


 

 //USART1_sendFloat(current_pressure, 2);
 if(!(PORTE.OUT && (1<<0)))
     ab8:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <__TEXT_REGION_LENGTH__+0x7e0484>
     abc:	81 11       	cpse	r24, r1
     abe:	03 c0       	rjmp	.+6      	; 0xac6 <main+0x3e>
{ continous_intubation();
     ac0:	0e 94 40 04 	call	0x880	; 0x880 <continous_intubation>
     ac4:	04 c0       	rjmp	.+8      	; 0xace <main+0x46>
}
else
{TCA0.SINGLE.CMP0 = 0;
     ac6:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     aca:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
}
 //previous_pressure = current_pressure;
USART1_sendInt(valve1_timer);
     ace:	60 91 9e 40 	lds	r22, 0x409E	; 0x80409e <__data_end>
     ad2:	70 91 9f 40 	lds	r23, 0x409F	; 0x80409f <__data_end+0x1>
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <USART1_sendInt>
    }
     ade:	ec cf       	rjmp	.-40     	; 0xab8 <main+0x30>

00000ae0 <__vector_12>:




ISR(TCB0_INT_vect)
{   valve1_timer = valve1_timer+1;
     ae0:	1f 92       	push	r1
     ae2:	0f 92       	push	r0
     ae4:	0f b6       	in	r0, 0x3f	; 63
     ae6:	0f 92       	push	r0
     ae8:	11 24       	eor	r1, r1
     aea:	0b b6       	in	r0, 0x3b	; 59
     aec:	0f 92       	push	r0
     aee:	2f 93       	push	r18
     af0:	8f 93       	push	r24
     af2:	9f 93       	push	r25
     af4:	ef 93       	push	r30
     af6:	ff 93       	push	r31
     af8:	80 91 9e 40 	lds	r24, 0x409E	; 0x80409e <__data_end>
     afc:	90 91 9f 40 	lds	r25, 0x409F	; 0x80409f <__data_end+0x1>
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	80 93 9e 40 	sts	0x409E, r24	; 0x80409e <__data_end>
     b06:	90 93 9f 40 	sts	0x409F, r25	; 0x80409f <__data_end+0x1>
	if(valve1_timer <= 32000)
     b0a:	81 30       	cpi	r24, 0x01	; 1
     b0c:	2d e7       	ldi	r18, 0x7D	; 125
     b0e:	92 07       	cpc	r25, r18
     b10:	78 f4       	brcc	.+30     	; 0xb30 <__vector_12+0x50>
	{
		if(valve1_timer <= 16000)
     b12:	81 38       	cpi	r24, 0x81	; 129
     b14:	9e 43       	sbci	r25, 0x3E	; 62
     b16:	30 f4       	brcc	.+12     	; 0xb24 <__vector_12+0x44>
		{
			PORTE.OUT |= (1<<0);
     b18:	e0 e8       	ldi	r30, 0x80	; 128
     b1a:	f4 e0       	ldi	r31, 0x04	; 4
     b1c:	84 81       	ldd	r24, Z+4	; 0x04
     b1e:	81 60       	ori	r24, 0x01	; 1
     b20:	84 83       	std	Z+4, r24	; 0x04
     b22:	10 c0       	rjmp	.+32     	; 0xb44 <__vector_12+0x64>
		}
		else
		{
			PORTE.OUT &=~ (1<<0);
     b24:	e0 e8       	ldi	r30, 0x80	; 128
     b26:	f4 e0       	ldi	r31, 0x04	; 4
     b28:	84 81       	ldd	r24, Z+4	; 0x04
     b2a:	8e 7f       	andi	r24, 0xFE	; 254
     b2c:	84 83       	std	Z+4, r24	; 0x04
     b2e:	0a c0       	rjmp	.+20     	; 0xb44 <__vector_12+0x64>
		}
		
	}
	else
	{
		valve1_timer = 0;
     b30:	10 92 9e 40 	sts	0x409E, r1	; 0x80409e <__data_end>
     b34:	10 92 9f 40 	sts	0x409F, r1	; 0x80409f <__data_end+0x1>
		PORTE_OUT ^= (1<<1); 
     b38:	e4 e8       	ldi	r30, 0x84	; 132
     b3a:	f4 e0       	ldi	r31, 0x04	; 4
     b3c:	90 81       	ld	r25, Z
     b3e:	82 e0       	ldi	r24, 0x02	; 2
     b40:	89 27       	eor	r24, r25
     b42:	80 83       	st	Z, r24
	}
	TCB0.INTFLAGS |= (1<<0);
     b44:	e0 e0       	ldi	r30, 0x00	; 0
     b46:	fb e0       	ldi	r31, 0x0B	; 11
     b48:	86 81       	ldd	r24, Z+6	; 0x06
     b4a:	81 60       	ori	r24, 0x01	; 1
     b4c:	86 83       	std	Z+6, r24	; 0x06
}
     b4e:	ff 91       	pop	r31
     b50:	ef 91       	pop	r30
     b52:	9f 91       	pop	r25
     b54:	8f 91       	pop	r24
     b56:	2f 91       	pop	r18
     b58:	0f 90       	pop	r0
     b5a:	0b be       	out	0x3b, r0	; 59
     b5c:	0f 90       	pop	r0
     b5e:	0f be       	out	0x3f, r0	; 63
     b60:	0f 90       	pop	r0
     b62:	1f 90       	pop	r1
     b64:	18 95       	reti

00000b66 <__subsf3>:
     b66:	50 58       	subi	r21, 0x80	; 128

00000b68 <__addsf3>:
     b68:	bb 27       	eor	r27, r27
     b6a:	aa 27       	eor	r26, r26
     b6c:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3x>
     b70:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__fp_round>
     b74:	0e 94 37 07 	call	0xe6e	; 0xe6e <__fp_pscA>
     b78:	38 f0       	brcs	.+14     	; 0xb88 <__addsf3+0x20>
     b7a:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__fp_pscB>
     b7e:	20 f0       	brcs	.+8      	; 0xb88 <__addsf3+0x20>
     b80:	39 f4       	brne	.+14     	; 0xb90 <__addsf3+0x28>
     b82:	9f 3f       	cpi	r25, 0xFF	; 255
     b84:	19 f4       	brne	.+6      	; 0xb8c <__addsf3+0x24>
     b86:	26 f4       	brtc	.+8      	; 0xb90 <__addsf3+0x28>
     b88:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_nan>
     b8c:	0e f4       	brtc	.+2      	; 0xb90 <__addsf3+0x28>
     b8e:	e0 95       	com	r30
     b90:	e7 fb       	bst	r30, 7
     b92:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>

00000b96 <__addsf3x>:
     b96:	e9 2f       	mov	r30, r25
     b98:	0e 94 56 07 	call	0xeac	; 0xeac <__fp_split3>
     b9c:	58 f3       	brcs	.-42     	; 0xb74 <__addsf3+0xc>
     b9e:	ba 17       	cp	r27, r26
     ba0:	62 07       	cpc	r22, r18
     ba2:	73 07       	cpc	r23, r19
     ba4:	84 07       	cpc	r24, r20
     ba6:	95 07       	cpc	r25, r21
     ba8:	20 f0       	brcs	.+8      	; 0xbb2 <__addsf3x+0x1c>
     baa:	79 f4       	brne	.+30     	; 0xbca <__addsf3x+0x34>
     bac:	a6 f5       	brtc	.+104    	; 0xc16 <__addsf3x+0x80>
     bae:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_zero>
     bb2:	0e f4       	brtc	.+2      	; 0xbb6 <__addsf3x+0x20>
     bb4:	e0 95       	com	r30
     bb6:	0b 2e       	mov	r0, r27
     bb8:	ba 2f       	mov	r27, r26
     bba:	a0 2d       	mov	r26, r0
     bbc:	0b 01       	movw	r0, r22
     bbe:	b9 01       	movw	r22, r18
     bc0:	90 01       	movw	r18, r0
     bc2:	0c 01       	movw	r0, r24
     bc4:	ca 01       	movw	r24, r20
     bc6:	a0 01       	movw	r20, r0
     bc8:	11 24       	eor	r1, r1
     bca:	ff 27       	eor	r31, r31
     bcc:	59 1b       	sub	r21, r25
     bce:	99 f0       	breq	.+38     	; 0xbf6 <__addsf3x+0x60>
     bd0:	59 3f       	cpi	r21, 0xF9	; 249
     bd2:	50 f4       	brcc	.+20     	; 0xbe8 <__addsf3x+0x52>
     bd4:	50 3e       	cpi	r21, 0xE0	; 224
     bd6:	68 f1       	brcs	.+90     	; 0xc32 <__addsf3x+0x9c>
     bd8:	1a 16       	cp	r1, r26
     bda:	f0 40       	sbci	r31, 0x00	; 0
     bdc:	a2 2f       	mov	r26, r18
     bde:	23 2f       	mov	r18, r19
     be0:	34 2f       	mov	r19, r20
     be2:	44 27       	eor	r20, r20
     be4:	58 5f       	subi	r21, 0xF8	; 248
     be6:	f3 cf       	rjmp	.-26     	; 0xbce <__addsf3x+0x38>
     be8:	46 95       	lsr	r20
     bea:	37 95       	ror	r19
     bec:	27 95       	ror	r18
     bee:	a7 95       	ror	r26
     bf0:	f0 40       	sbci	r31, 0x00	; 0
     bf2:	53 95       	inc	r21
     bf4:	c9 f7       	brne	.-14     	; 0xbe8 <__addsf3x+0x52>
     bf6:	7e f4       	brtc	.+30     	; 0xc16 <__addsf3x+0x80>
     bf8:	1f 16       	cp	r1, r31
     bfa:	ba 0b       	sbc	r27, r26
     bfc:	62 0b       	sbc	r22, r18
     bfe:	73 0b       	sbc	r23, r19
     c00:	84 0b       	sbc	r24, r20
     c02:	ba f0       	brmi	.+46     	; 0xc32 <__addsf3x+0x9c>
     c04:	91 50       	subi	r25, 0x01	; 1
     c06:	a1 f0       	breq	.+40     	; 0xc30 <__addsf3x+0x9a>
     c08:	ff 0f       	add	r31, r31
     c0a:	bb 1f       	adc	r27, r27
     c0c:	66 1f       	adc	r22, r22
     c0e:	77 1f       	adc	r23, r23
     c10:	88 1f       	adc	r24, r24
     c12:	c2 f7       	brpl	.-16     	; 0xc04 <__addsf3x+0x6e>
     c14:	0e c0       	rjmp	.+28     	; 0xc32 <__addsf3x+0x9c>
     c16:	ba 0f       	add	r27, r26
     c18:	62 1f       	adc	r22, r18
     c1a:	73 1f       	adc	r23, r19
     c1c:	84 1f       	adc	r24, r20
     c1e:	48 f4       	brcc	.+18     	; 0xc32 <__addsf3x+0x9c>
     c20:	87 95       	ror	r24
     c22:	77 95       	ror	r23
     c24:	67 95       	ror	r22
     c26:	b7 95       	ror	r27
     c28:	f7 95       	ror	r31
     c2a:	9e 3f       	cpi	r25, 0xFE	; 254
     c2c:	08 f0       	brcs	.+2      	; 0xc30 <__addsf3x+0x9a>
     c2e:	b0 cf       	rjmp	.-160    	; 0xb90 <__addsf3+0x28>
     c30:	93 95       	inc	r25
     c32:	88 0f       	add	r24, r24
     c34:	08 f0       	brcs	.+2      	; 0xc38 <__addsf3x+0xa2>
     c36:	99 27       	eor	r25, r25
     c38:	ee 0f       	add	r30, r30
     c3a:	97 95       	ror	r25
     c3c:	87 95       	ror	r24
     c3e:	08 95       	ret

00000c40 <__cmpsf2>:
     c40:	0e 94 0a 07 	call	0xe14	; 0xe14 <__fp_cmp>
     c44:	08 f4       	brcc	.+2      	; 0xc48 <__cmpsf2+0x8>
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	08 95       	ret

00000c4a <__divsf3>:
     c4a:	0e 94 39 06 	call	0xc72	; 0xc72 <__divsf3x>
     c4e:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__fp_round>
     c52:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__fp_pscB>
     c56:	58 f0       	brcs	.+22     	; 0xc6e <__divsf3+0x24>
     c58:	0e 94 37 07 	call	0xe6e	; 0xe6e <__fp_pscA>
     c5c:	40 f0       	brcs	.+16     	; 0xc6e <__divsf3+0x24>
     c5e:	29 f4       	brne	.+10     	; 0xc6a <__divsf3+0x20>
     c60:	5f 3f       	cpi	r21, 0xFF	; 255
     c62:	29 f0       	breq	.+10     	; 0xc6e <__divsf3+0x24>
     c64:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>
     c68:	51 11       	cpse	r21, r1
     c6a:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_szero>
     c6e:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_nan>

00000c72 <__divsf3x>:
     c72:	0e 94 56 07 	call	0xeac	; 0xeac <__fp_split3>
     c76:	68 f3       	brcs	.-38     	; 0xc52 <__divsf3+0x8>

00000c78 <__divsf3_pse>:
     c78:	99 23       	and	r25, r25
     c7a:	b1 f3       	breq	.-20     	; 0xc68 <__divsf3+0x1e>
     c7c:	55 23       	and	r21, r21
     c7e:	91 f3       	breq	.-28     	; 0xc64 <__divsf3+0x1a>
     c80:	95 1b       	sub	r25, r21
     c82:	55 0b       	sbc	r21, r21
     c84:	bb 27       	eor	r27, r27
     c86:	aa 27       	eor	r26, r26
     c88:	62 17       	cp	r22, r18
     c8a:	73 07       	cpc	r23, r19
     c8c:	84 07       	cpc	r24, r20
     c8e:	38 f0       	brcs	.+14     	; 0xc9e <__divsf3_pse+0x26>
     c90:	9f 5f       	subi	r25, 0xFF	; 255
     c92:	5f 4f       	sbci	r21, 0xFF	; 255
     c94:	22 0f       	add	r18, r18
     c96:	33 1f       	adc	r19, r19
     c98:	44 1f       	adc	r20, r20
     c9a:	aa 1f       	adc	r26, r26
     c9c:	a9 f3       	breq	.-22     	; 0xc88 <__divsf3_pse+0x10>
     c9e:	35 d0       	rcall	.+106    	; 0xd0a <__divsf3_pse+0x92>
     ca0:	0e 2e       	mov	r0, r30
     ca2:	3a f0       	brmi	.+14     	; 0xcb2 <__divsf3_pse+0x3a>
     ca4:	e0 e8       	ldi	r30, 0x80	; 128
     ca6:	32 d0       	rcall	.+100    	; 0xd0c <__divsf3_pse+0x94>
     ca8:	91 50       	subi	r25, 0x01	; 1
     caa:	50 40       	sbci	r21, 0x00	; 0
     cac:	e6 95       	lsr	r30
     cae:	00 1c       	adc	r0, r0
     cb0:	ca f7       	brpl	.-14     	; 0xca4 <__divsf3_pse+0x2c>
     cb2:	2b d0       	rcall	.+86     	; 0xd0a <__divsf3_pse+0x92>
     cb4:	fe 2f       	mov	r31, r30
     cb6:	29 d0       	rcall	.+82     	; 0xd0a <__divsf3_pse+0x92>
     cb8:	66 0f       	add	r22, r22
     cba:	77 1f       	adc	r23, r23
     cbc:	88 1f       	adc	r24, r24
     cbe:	bb 1f       	adc	r27, r27
     cc0:	26 17       	cp	r18, r22
     cc2:	37 07       	cpc	r19, r23
     cc4:	48 07       	cpc	r20, r24
     cc6:	ab 07       	cpc	r26, r27
     cc8:	b0 e8       	ldi	r27, 0x80	; 128
     cca:	09 f0       	breq	.+2      	; 0xcce <__divsf3_pse+0x56>
     ccc:	bb 0b       	sbc	r27, r27
     cce:	80 2d       	mov	r24, r0
     cd0:	bf 01       	movw	r22, r30
     cd2:	ff 27       	eor	r31, r31
     cd4:	93 58       	subi	r25, 0x83	; 131
     cd6:	5f 4f       	sbci	r21, 0xFF	; 255
     cd8:	3a f0       	brmi	.+14     	; 0xce8 <__divsf3_pse+0x70>
     cda:	9e 3f       	cpi	r25, 0xFE	; 254
     cdc:	51 05       	cpc	r21, r1
     cde:	78 f0       	brcs	.+30     	; 0xcfe <__divsf3_pse+0x86>
     ce0:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>
     ce4:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_szero>
     ce8:	5f 3f       	cpi	r21, 0xFF	; 255
     cea:	e4 f3       	brlt	.-8      	; 0xce4 <__divsf3_pse+0x6c>
     cec:	98 3e       	cpi	r25, 0xE8	; 232
     cee:	d4 f3       	brlt	.-12     	; 0xce4 <__divsf3_pse+0x6c>
     cf0:	86 95       	lsr	r24
     cf2:	77 95       	ror	r23
     cf4:	67 95       	ror	r22
     cf6:	b7 95       	ror	r27
     cf8:	f7 95       	ror	r31
     cfa:	9f 5f       	subi	r25, 0xFF	; 255
     cfc:	c9 f7       	brne	.-14     	; 0xcf0 <__divsf3_pse+0x78>
     cfe:	88 0f       	add	r24, r24
     d00:	91 1d       	adc	r25, r1
     d02:	96 95       	lsr	r25
     d04:	87 95       	ror	r24
     d06:	97 f9       	bld	r25, 7
     d08:	08 95       	ret
     d0a:	e1 e0       	ldi	r30, 0x01	; 1
     d0c:	66 0f       	add	r22, r22
     d0e:	77 1f       	adc	r23, r23
     d10:	88 1f       	adc	r24, r24
     d12:	bb 1f       	adc	r27, r27
     d14:	62 17       	cp	r22, r18
     d16:	73 07       	cpc	r23, r19
     d18:	84 07       	cpc	r24, r20
     d1a:	ba 07       	cpc	r27, r26
     d1c:	20 f0       	brcs	.+8      	; 0xd26 <__divsf3_pse+0xae>
     d1e:	62 1b       	sub	r22, r18
     d20:	73 0b       	sbc	r23, r19
     d22:	84 0b       	sbc	r24, r20
     d24:	ba 0b       	sbc	r27, r26
     d26:	ee 1f       	adc	r30, r30
     d28:	88 f7       	brcc	.-30     	; 0xd0c <__divsf3_pse+0x94>
     d2a:	e0 95       	com	r30
     d2c:	08 95       	ret

00000d2e <__fixsfsi>:
     d2e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__fixunssfsi>
     d32:	68 94       	set
     d34:	b1 11       	cpse	r27, r1
     d36:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_szero>
     d3a:	08 95       	ret

00000d3c <__fixunssfsi>:
     d3c:	0e 94 5e 07 	call	0xebc	; 0xebc <__fp_splitA>
     d40:	88 f0       	brcs	.+34     	; 0xd64 <__fixunssfsi+0x28>
     d42:	9f 57       	subi	r25, 0x7F	; 127
     d44:	98 f0       	brcs	.+38     	; 0xd6c <__fixunssfsi+0x30>
     d46:	b9 2f       	mov	r27, r25
     d48:	99 27       	eor	r25, r25
     d4a:	b7 51       	subi	r27, 0x17	; 23
     d4c:	b0 f0       	brcs	.+44     	; 0xd7a <__fixunssfsi+0x3e>
     d4e:	e1 f0       	breq	.+56     	; 0xd88 <__fixunssfsi+0x4c>
     d50:	66 0f       	add	r22, r22
     d52:	77 1f       	adc	r23, r23
     d54:	88 1f       	adc	r24, r24
     d56:	99 1f       	adc	r25, r25
     d58:	1a f0       	brmi	.+6      	; 0xd60 <__fixunssfsi+0x24>
     d5a:	ba 95       	dec	r27
     d5c:	c9 f7       	brne	.-14     	; 0xd50 <__fixunssfsi+0x14>
     d5e:	14 c0       	rjmp	.+40     	; 0xd88 <__fixunssfsi+0x4c>
     d60:	b1 30       	cpi	r27, 0x01	; 1
     d62:	91 f0       	breq	.+36     	; 0xd88 <__fixunssfsi+0x4c>
     d64:	0e 94 78 07 	call	0xef0	; 0xef0 <__fp_zero>
     d68:	b1 e0       	ldi	r27, 0x01	; 1
     d6a:	08 95       	ret
     d6c:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_zero>
     d70:	67 2f       	mov	r22, r23
     d72:	78 2f       	mov	r23, r24
     d74:	88 27       	eor	r24, r24
     d76:	b8 5f       	subi	r27, 0xF8	; 248
     d78:	39 f0       	breq	.+14     	; 0xd88 <__fixunssfsi+0x4c>
     d7a:	b9 3f       	cpi	r27, 0xF9	; 249
     d7c:	cc f3       	brlt	.-14     	; 0xd70 <__fixunssfsi+0x34>
     d7e:	86 95       	lsr	r24
     d80:	77 95       	ror	r23
     d82:	67 95       	ror	r22
     d84:	b3 95       	inc	r27
     d86:	d9 f7       	brne	.-10     	; 0xd7e <__fixunssfsi+0x42>
     d88:	3e f4       	brtc	.+14     	; 0xd98 <__fixunssfsi+0x5c>
     d8a:	90 95       	com	r25
     d8c:	80 95       	com	r24
     d8e:	70 95       	com	r23
     d90:	61 95       	neg	r22
     d92:	7f 4f       	sbci	r23, 0xFF	; 255
     d94:	8f 4f       	sbci	r24, 0xFF	; 255
     d96:	9f 4f       	sbci	r25, 0xFF	; 255
     d98:	08 95       	ret

00000d9a <__floatunsisf>:
     d9a:	e8 94       	clt
     d9c:	09 c0       	rjmp	.+18     	; 0xdb0 <__floatsisf+0x12>

00000d9e <__floatsisf>:
     d9e:	97 fb       	bst	r25, 7
     da0:	3e f4       	brtc	.+14     	; 0xdb0 <__floatsisf+0x12>
     da2:	90 95       	com	r25
     da4:	80 95       	com	r24
     da6:	70 95       	com	r23
     da8:	61 95       	neg	r22
     daa:	7f 4f       	sbci	r23, 0xFF	; 255
     dac:	8f 4f       	sbci	r24, 0xFF	; 255
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	99 23       	and	r25, r25
     db2:	a9 f0       	breq	.+42     	; 0xdde <__floatsisf+0x40>
     db4:	f9 2f       	mov	r31, r25
     db6:	96 e9       	ldi	r25, 0x96	; 150
     db8:	bb 27       	eor	r27, r27
     dba:	93 95       	inc	r25
     dbc:	f6 95       	lsr	r31
     dbe:	87 95       	ror	r24
     dc0:	77 95       	ror	r23
     dc2:	67 95       	ror	r22
     dc4:	b7 95       	ror	r27
     dc6:	f1 11       	cpse	r31, r1
     dc8:	f8 cf       	rjmp	.-16     	; 0xdba <__floatsisf+0x1c>
     dca:	fa f4       	brpl	.+62     	; 0xe0a <__floatsisf+0x6c>
     dcc:	bb 0f       	add	r27, r27
     dce:	11 f4       	brne	.+4      	; 0xdd4 <__floatsisf+0x36>
     dd0:	60 ff       	sbrs	r22, 0
     dd2:	1b c0       	rjmp	.+54     	; 0xe0a <__floatsisf+0x6c>
     dd4:	6f 5f       	subi	r22, 0xFF	; 255
     dd6:	7f 4f       	sbci	r23, 0xFF	; 255
     dd8:	8f 4f       	sbci	r24, 0xFF	; 255
     dda:	9f 4f       	sbci	r25, 0xFF	; 255
     ddc:	16 c0       	rjmp	.+44     	; 0xe0a <__floatsisf+0x6c>
     dde:	88 23       	and	r24, r24
     de0:	11 f0       	breq	.+4      	; 0xde6 <__floatsisf+0x48>
     de2:	96 e9       	ldi	r25, 0x96	; 150
     de4:	11 c0       	rjmp	.+34     	; 0xe08 <__floatsisf+0x6a>
     de6:	77 23       	and	r23, r23
     de8:	21 f0       	breq	.+8      	; 0xdf2 <__floatsisf+0x54>
     dea:	9e e8       	ldi	r25, 0x8E	; 142
     dec:	87 2f       	mov	r24, r23
     dee:	76 2f       	mov	r23, r22
     df0:	05 c0       	rjmp	.+10     	; 0xdfc <__floatsisf+0x5e>
     df2:	66 23       	and	r22, r22
     df4:	71 f0       	breq	.+28     	; 0xe12 <__floatsisf+0x74>
     df6:	96 e8       	ldi	r25, 0x86	; 134
     df8:	86 2f       	mov	r24, r22
     dfa:	70 e0       	ldi	r23, 0x00	; 0
     dfc:	60 e0       	ldi	r22, 0x00	; 0
     dfe:	2a f0       	brmi	.+10     	; 0xe0a <__floatsisf+0x6c>
     e00:	9a 95       	dec	r25
     e02:	66 0f       	add	r22, r22
     e04:	77 1f       	adc	r23, r23
     e06:	88 1f       	adc	r24, r24
     e08:	da f7       	brpl	.-10     	; 0xe00 <__floatsisf+0x62>
     e0a:	88 0f       	add	r24, r24
     e0c:	96 95       	lsr	r25
     e0e:	87 95       	ror	r24
     e10:	97 f9       	bld	r25, 7
     e12:	08 95       	ret

00000e14 <__fp_cmp>:
     e14:	99 0f       	add	r25, r25
     e16:	00 08       	sbc	r0, r0
     e18:	55 0f       	add	r21, r21
     e1a:	aa 0b       	sbc	r26, r26
     e1c:	e0 e8       	ldi	r30, 0x80	; 128
     e1e:	fe ef       	ldi	r31, 0xFE	; 254
     e20:	16 16       	cp	r1, r22
     e22:	17 06       	cpc	r1, r23
     e24:	e8 07       	cpc	r30, r24
     e26:	f9 07       	cpc	r31, r25
     e28:	c0 f0       	brcs	.+48     	; 0xe5a <__fp_cmp+0x46>
     e2a:	12 16       	cp	r1, r18
     e2c:	13 06       	cpc	r1, r19
     e2e:	e4 07       	cpc	r30, r20
     e30:	f5 07       	cpc	r31, r21
     e32:	98 f0       	brcs	.+38     	; 0xe5a <__fp_cmp+0x46>
     e34:	62 1b       	sub	r22, r18
     e36:	73 0b       	sbc	r23, r19
     e38:	84 0b       	sbc	r24, r20
     e3a:	95 0b       	sbc	r25, r21
     e3c:	39 f4       	brne	.+14     	; 0xe4c <__fp_cmp+0x38>
     e3e:	0a 26       	eor	r0, r26
     e40:	61 f0       	breq	.+24     	; 0xe5a <__fp_cmp+0x46>
     e42:	23 2b       	or	r18, r19
     e44:	24 2b       	or	r18, r20
     e46:	25 2b       	or	r18, r21
     e48:	21 f4       	brne	.+8      	; 0xe52 <__fp_cmp+0x3e>
     e4a:	08 95       	ret
     e4c:	0a 26       	eor	r0, r26
     e4e:	09 f4       	brne	.+2      	; 0xe52 <__fp_cmp+0x3e>
     e50:	a1 40       	sbci	r26, 0x01	; 1
     e52:	a6 95       	lsr	r26
     e54:	8f ef       	ldi	r24, 0xFF	; 255
     e56:	81 1d       	adc	r24, r1
     e58:	81 1d       	adc	r24, r1
     e5a:	08 95       	ret

00000e5c <__fp_inf>:
     e5c:	97 f9       	bld	r25, 7
     e5e:	9f 67       	ori	r25, 0x7F	; 127
     e60:	80 e8       	ldi	r24, 0x80	; 128
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	60 e0       	ldi	r22, 0x00	; 0
     e66:	08 95       	ret

00000e68 <__fp_nan>:
     e68:	9f ef       	ldi	r25, 0xFF	; 255
     e6a:	80 ec       	ldi	r24, 0xC0	; 192
     e6c:	08 95       	ret

00000e6e <__fp_pscA>:
     e6e:	00 24       	eor	r0, r0
     e70:	0a 94       	dec	r0
     e72:	16 16       	cp	r1, r22
     e74:	17 06       	cpc	r1, r23
     e76:	18 06       	cpc	r1, r24
     e78:	09 06       	cpc	r0, r25
     e7a:	08 95       	ret

00000e7c <__fp_pscB>:
     e7c:	00 24       	eor	r0, r0
     e7e:	0a 94       	dec	r0
     e80:	12 16       	cp	r1, r18
     e82:	13 06       	cpc	r1, r19
     e84:	14 06       	cpc	r1, r20
     e86:	05 06       	cpc	r0, r21
     e88:	08 95       	ret

00000e8a <__fp_round>:
     e8a:	09 2e       	mov	r0, r25
     e8c:	03 94       	inc	r0
     e8e:	00 0c       	add	r0, r0
     e90:	11 f4       	brne	.+4      	; 0xe96 <__fp_round+0xc>
     e92:	88 23       	and	r24, r24
     e94:	52 f0       	brmi	.+20     	; 0xeaa <__fp_round+0x20>
     e96:	bb 0f       	add	r27, r27
     e98:	40 f4       	brcc	.+16     	; 0xeaa <__fp_round+0x20>
     e9a:	bf 2b       	or	r27, r31
     e9c:	11 f4       	brne	.+4      	; 0xea2 <__fp_round+0x18>
     e9e:	60 ff       	sbrs	r22, 0
     ea0:	04 c0       	rjmp	.+8      	; 0xeaa <__fp_round+0x20>
     ea2:	6f 5f       	subi	r22, 0xFF	; 255
     ea4:	7f 4f       	sbci	r23, 0xFF	; 255
     ea6:	8f 4f       	sbci	r24, 0xFF	; 255
     ea8:	9f 4f       	sbci	r25, 0xFF	; 255
     eaa:	08 95       	ret

00000eac <__fp_split3>:
     eac:	57 fd       	sbrc	r21, 7
     eae:	90 58       	subi	r25, 0x80	; 128
     eb0:	44 0f       	add	r20, r20
     eb2:	55 1f       	adc	r21, r21
     eb4:	59 f0       	breq	.+22     	; 0xecc <__fp_splitA+0x10>
     eb6:	5f 3f       	cpi	r21, 0xFF	; 255
     eb8:	71 f0       	breq	.+28     	; 0xed6 <__fp_splitA+0x1a>
     eba:	47 95       	ror	r20

00000ebc <__fp_splitA>:
     ebc:	88 0f       	add	r24, r24
     ebe:	97 fb       	bst	r25, 7
     ec0:	99 1f       	adc	r25, r25
     ec2:	61 f0       	breq	.+24     	; 0xedc <__fp_splitA+0x20>
     ec4:	9f 3f       	cpi	r25, 0xFF	; 255
     ec6:	79 f0       	breq	.+30     	; 0xee6 <__fp_splitA+0x2a>
     ec8:	87 95       	ror	r24
     eca:	08 95       	ret
     ecc:	12 16       	cp	r1, r18
     ece:	13 06       	cpc	r1, r19
     ed0:	14 06       	cpc	r1, r20
     ed2:	55 1f       	adc	r21, r21
     ed4:	f2 cf       	rjmp	.-28     	; 0xeba <__fp_split3+0xe>
     ed6:	46 95       	lsr	r20
     ed8:	f1 df       	rcall	.-30     	; 0xebc <__fp_splitA>
     eda:	08 c0       	rjmp	.+16     	; 0xeec <__fp_splitA+0x30>
     edc:	16 16       	cp	r1, r22
     ede:	17 06       	cpc	r1, r23
     ee0:	18 06       	cpc	r1, r24
     ee2:	99 1f       	adc	r25, r25
     ee4:	f1 cf       	rjmp	.-30     	; 0xec8 <__fp_splitA+0xc>
     ee6:	86 95       	lsr	r24
     ee8:	71 05       	cpc	r23, r1
     eea:	61 05       	cpc	r22, r1
     eec:	08 94       	sec
     eee:	08 95       	ret

00000ef0 <__fp_zero>:
     ef0:	e8 94       	clt

00000ef2 <__fp_szero>:
     ef2:	bb 27       	eor	r27, r27
     ef4:	66 27       	eor	r22, r22
     ef6:	77 27       	eor	r23, r23
     ef8:	cb 01       	movw	r24, r22
     efa:	97 f9       	bld	r25, 7
     efc:	08 95       	ret

00000efe <__gesf2>:
     efe:	0e 94 0a 07 	call	0xe14	; 0xe14 <__fp_cmp>
     f02:	08 f4       	brcc	.+2      	; 0xf06 <__gesf2+0x8>
     f04:	8f ef       	ldi	r24, 0xFF	; 255
     f06:	08 95       	ret

00000f08 <__mulsf3>:
     f08:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3x>
     f0c:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__fp_round>
     f10:	0e 94 37 07 	call	0xe6e	; 0xe6e <__fp_pscA>
     f14:	38 f0       	brcs	.+14     	; 0xf24 <__mulsf3+0x1c>
     f16:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__fp_pscB>
     f1a:	20 f0       	brcs	.+8      	; 0xf24 <__mulsf3+0x1c>
     f1c:	95 23       	and	r25, r21
     f1e:	11 f0       	breq	.+4      	; 0xf24 <__mulsf3+0x1c>
     f20:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>
     f24:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_nan>
     f28:	11 24       	eor	r1, r1
     f2a:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_szero>

00000f2e <__mulsf3x>:
     f2e:	0e 94 56 07 	call	0xeac	; 0xeac <__fp_split3>
     f32:	70 f3       	brcs	.-36     	; 0xf10 <__mulsf3+0x8>

00000f34 <__mulsf3_pse>:
     f34:	95 9f       	mul	r25, r21
     f36:	c1 f3       	breq	.-16     	; 0xf28 <__mulsf3+0x20>
     f38:	95 0f       	add	r25, r21
     f3a:	50 e0       	ldi	r21, 0x00	; 0
     f3c:	55 1f       	adc	r21, r21
     f3e:	62 9f       	mul	r22, r18
     f40:	f0 01       	movw	r30, r0
     f42:	72 9f       	mul	r23, r18
     f44:	bb 27       	eor	r27, r27
     f46:	f0 0d       	add	r31, r0
     f48:	b1 1d       	adc	r27, r1
     f4a:	63 9f       	mul	r22, r19
     f4c:	aa 27       	eor	r26, r26
     f4e:	f0 0d       	add	r31, r0
     f50:	b1 1d       	adc	r27, r1
     f52:	aa 1f       	adc	r26, r26
     f54:	64 9f       	mul	r22, r20
     f56:	66 27       	eor	r22, r22
     f58:	b0 0d       	add	r27, r0
     f5a:	a1 1d       	adc	r26, r1
     f5c:	66 1f       	adc	r22, r22
     f5e:	82 9f       	mul	r24, r18
     f60:	22 27       	eor	r18, r18
     f62:	b0 0d       	add	r27, r0
     f64:	a1 1d       	adc	r26, r1
     f66:	62 1f       	adc	r22, r18
     f68:	73 9f       	mul	r23, r19
     f6a:	b0 0d       	add	r27, r0
     f6c:	a1 1d       	adc	r26, r1
     f6e:	62 1f       	adc	r22, r18
     f70:	83 9f       	mul	r24, r19
     f72:	a0 0d       	add	r26, r0
     f74:	61 1d       	adc	r22, r1
     f76:	22 1f       	adc	r18, r18
     f78:	74 9f       	mul	r23, r20
     f7a:	33 27       	eor	r19, r19
     f7c:	a0 0d       	add	r26, r0
     f7e:	61 1d       	adc	r22, r1
     f80:	23 1f       	adc	r18, r19
     f82:	84 9f       	mul	r24, r20
     f84:	60 0d       	add	r22, r0
     f86:	21 1d       	adc	r18, r1
     f88:	82 2f       	mov	r24, r18
     f8a:	76 2f       	mov	r23, r22
     f8c:	6a 2f       	mov	r22, r26
     f8e:	11 24       	eor	r1, r1
     f90:	9f 57       	subi	r25, 0x7F	; 127
     f92:	50 40       	sbci	r21, 0x00	; 0
     f94:	9a f0       	brmi	.+38     	; 0xfbc <__mulsf3_pse+0x88>
     f96:	f1 f0       	breq	.+60     	; 0xfd4 <__mulsf3_pse+0xa0>
     f98:	88 23       	and	r24, r24
     f9a:	4a f0       	brmi	.+18     	; 0xfae <__mulsf3_pse+0x7a>
     f9c:	ee 0f       	add	r30, r30
     f9e:	ff 1f       	adc	r31, r31
     fa0:	bb 1f       	adc	r27, r27
     fa2:	66 1f       	adc	r22, r22
     fa4:	77 1f       	adc	r23, r23
     fa6:	88 1f       	adc	r24, r24
     fa8:	91 50       	subi	r25, 0x01	; 1
     faa:	50 40       	sbci	r21, 0x00	; 0
     fac:	a9 f7       	brne	.-22     	; 0xf98 <__mulsf3_pse+0x64>
     fae:	9e 3f       	cpi	r25, 0xFE	; 254
     fb0:	51 05       	cpc	r21, r1
     fb2:	80 f0       	brcs	.+32     	; 0xfd4 <__mulsf3_pse+0xa0>
     fb4:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>
     fb8:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_szero>
     fbc:	5f 3f       	cpi	r21, 0xFF	; 255
     fbe:	e4 f3       	brlt	.-8      	; 0xfb8 <__mulsf3_pse+0x84>
     fc0:	98 3e       	cpi	r25, 0xE8	; 232
     fc2:	d4 f3       	brlt	.-12     	; 0xfb8 <__mulsf3_pse+0x84>
     fc4:	86 95       	lsr	r24
     fc6:	77 95       	ror	r23
     fc8:	67 95       	ror	r22
     fca:	b7 95       	ror	r27
     fcc:	f7 95       	ror	r31
     fce:	e7 95       	ror	r30
     fd0:	9f 5f       	subi	r25, 0xFF	; 255
     fd2:	c1 f7       	brne	.-16     	; 0xfc4 <__mulsf3_pse+0x90>
     fd4:	fe 2b       	or	r31, r30
     fd6:	88 0f       	add	r24, r24
     fd8:	91 1d       	adc	r25, r1
     fda:	96 95       	lsr	r25
     fdc:	87 95       	ror	r24
     fde:	97 f9       	bld	r25, 7
     fe0:	08 95       	ret

00000fe2 <pow>:
     fe2:	fa 01       	movw	r30, r20
     fe4:	ee 0f       	add	r30, r30
     fe6:	ff 1f       	adc	r31, r31
     fe8:	30 96       	adiw	r30, 0x00	; 0
     fea:	21 05       	cpc	r18, r1
     fec:	31 05       	cpc	r19, r1
     fee:	a1 f1       	breq	.+104    	; 0x1058 <pow+0x76>
     ff0:	61 15       	cp	r22, r1
     ff2:	71 05       	cpc	r23, r1
     ff4:	61 f4       	brne	.+24     	; 0x100e <pow+0x2c>
     ff6:	80 38       	cpi	r24, 0x80	; 128
     ff8:	bf e3       	ldi	r27, 0x3F	; 63
     ffa:	9b 07       	cpc	r25, r27
     ffc:	49 f1       	breq	.+82     	; 0x1050 <pow+0x6e>
     ffe:	68 94       	set
    1000:	90 38       	cpi	r25, 0x80	; 128
    1002:	81 05       	cpc	r24, r1
    1004:	61 f0       	breq	.+24     	; 0x101e <pow+0x3c>
    1006:	80 38       	cpi	r24, 0x80	; 128
    1008:	bf ef       	ldi	r27, 0xFF	; 255
    100a:	9b 07       	cpc	r25, r27
    100c:	41 f0       	breq	.+16     	; 0x101e <pow+0x3c>
    100e:	99 23       	and	r25, r25
    1010:	4a f5       	brpl	.+82     	; 0x1064 <pow+0x82>
    1012:	ff 3f       	cpi	r31, 0xFF	; 255
    1014:	e1 05       	cpc	r30, r1
    1016:	31 05       	cpc	r19, r1
    1018:	21 05       	cpc	r18, r1
    101a:	19 f1       	breq	.+70     	; 0x1062 <pow+0x80>
    101c:	e8 94       	clt
    101e:	08 94       	sec
    1020:	e7 95       	ror	r30
    1022:	d9 01       	movw	r26, r18
    1024:	aa 23       	and	r26, r26
    1026:	29 f4       	brne	.+10     	; 0x1032 <pow+0x50>
    1028:	ab 2f       	mov	r26, r27
    102a:	be 2f       	mov	r27, r30
    102c:	f8 5f       	subi	r31, 0xF8	; 248
    102e:	d0 f3       	brcs	.-12     	; 0x1024 <pow+0x42>
    1030:	10 c0       	rjmp	.+32     	; 0x1052 <pow+0x70>
    1032:	ff 5f       	subi	r31, 0xFF	; 255
    1034:	70 f4       	brcc	.+28     	; 0x1052 <pow+0x70>
    1036:	a6 95       	lsr	r26
    1038:	e0 f7       	brcc	.-8      	; 0x1032 <pow+0x50>
    103a:	f7 39       	cpi	r31, 0x97	; 151
    103c:	50 f0       	brcs	.+20     	; 0x1052 <pow+0x70>
    103e:	19 f0       	breq	.+6      	; 0x1046 <pow+0x64>
    1040:	ff 3a       	cpi	r31, 0xAF	; 175
    1042:	38 f4       	brcc	.+14     	; 0x1052 <pow+0x70>
    1044:	9f 77       	andi	r25, 0x7F	; 127
    1046:	9f 93       	push	r25
    1048:	0d d0       	rcall	.+26     	; 0x1064 <pow+0x82>
    104a:	0f 90       	pop	r0
    104c:	07 fc       	sbrc	r0, 7
    104e:	90 58       	subi	r25, 0x80	; 128
    1050:	08 95       	ret
    1052:	46 f0       	brts	.+16     	; 0x1064 <pow+0x82>
    1054:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_nan>
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	80 e8       	ldi	r24, 0x80	; 128
    105e:	9f e3       	ldi	r25, 0x3F	; 63
    1060:	08 95       	ret
    1062:	4f e7       	ldi	r20, 0x7F	; 127
    1064:	9f 77       	andi	r25, 0x7F	; 127
    1066:	5f 93       	push	r21
    1068:	4f 93       	push	r20
    106a:	3f 93       	push	r19
    106c:	2f 93       	push	r18
    106e:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <log>
    1072:	2f 91       	pop	r18
    1074:	3f 91       	pop	r19
    1076:	4f 91       	pop	r20
    1078:	5f 91       	pop	r21
    107a:	0e 94 84 07 	call	0xf08	; 0xf08 <__mulsf3>
    107e:	0c 94 49 08 	jmp	0x1092	; 0x1092 <exp>
    1082:	29 f4       	brne	.+10     	; 0x108e <pow+0xac>
    1084:	16 f0       	brts	.+4      	; 0x108a <pow+0xa8>
    1086:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>
    108a:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_zero>
    108e:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_nan>

00001092 <exp>:
    1092:	0e 94 5e 07 	call	0xebc	; 0xebc <__fp_splitA>
    1096:	a8 f3       	brcs	.-22     	; 0x1082 <pow+0xa0>
    1098:	96 38       	cpi	r25, 0x86	; 134
    109a:	a0 f7       	brcc	.-24     	; 0x1084 <pow+0xa2>
    109c:	07 f8       	bld	r0, 7
    109e:	0f 92       	push	r0
    10a0:	e8 94       	clt
    10a2:	2b e3       	ldi	r18, 0x3B	; 59
    10a4:	3a ea       	ldi	r19, 0xAA	; 170
    10a6:	48 eb       	ldi	r20, 0xB8	; 184
    10a8:	5f e7       	ldi	r21, 0x7F	; 127
    10aa:	0e 94 9a 07 	call	0xf34	; 0xf34 <__mulsf3_pse>
    10ae:	0f 92       	push	r0
    10b0:	0f 92       	push	r0
    10b2:	0f 92       	push	r0
    10b4:	4d b7       	in	r20, 0x3d	; 61
    10b6:	5e b7       	in	r21, 0x3e	; 62
    10b8:	0f 92       	push	r0
    10ba:	0e 94 34 09 	call	0x1268	; 0x1268 <modf>
    10be:	e8 ee       	ldi	r30, 0xE8	; 232
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__fp_powser>
    10c6:	4f 91       	pop	r20
    10c8:	5f 91       	pop	r21
    10ca:	ef 91       	pop	r30
    10cc:	ff 91       	pop	r31
    10ce:	e5 95       	asr	r30
    10d0:	ee 1f       	adc	r30, r30
    10d2:	ff 1f       	adc	r31, r31
    10d4:	49 f0       	breq	.+18     	; 0x10e8 <exp+0x56>
    10d6:	fe 57       	subi	r31, 0x7E	; 126
    10d8:	e0 68       	ori	r30, 0x80	; 128
    10da:	44 27       	eor	r20, r20
    10dc:	ee 0f       	add	r30, r30
    10de:	44 1f       	adc	r20, r20
    10e0:	fa 95       	dec	r31
    10e2:	e1 f7       	brne	.-8      	; 0x10dc <exp+0x4a>
    10e4:	41 95       	neg	r20
    10e6:	55 0b       	sbc	r21, r21
    10e8:	0e 94 ae 08 	call	0x115c	; 0x115c <ldexp>
    10ec:	0f 90       	pop	r0
    10ee:	07 fe       	sbrs	r0, 7
    10f0:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <inverse>
    10f4:	08 95       	ret

000010f6 <__fp_powser>:
    10f6:	df 93       	push	r29
    10f8:	cf 93       	push	r28
    10fa:	1f 93       	push	r17
    10fc:	0f 93       	push	r16
    10fe:	ff 92       	push	r15
    1100:	ef 92       	push	r14
    1102:	df 92       	push	r13
    1104:	7b 01       	movw	r14, r22
    1106:	8c 01       	movw	r16, r24
    1108:	68 94       	set
    110a:	06 c0       	rjmp	.+12     	; 0x1118 <__fp_powser+0x22>
    110c:	da 2e       	mov	r13, r26
    110e:	ef 01       	movw	r28, r30
    1110:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3x>
    1114:	fe 01       	movw	r30, r28
    1116:	e8 94       	clt
    1118:	a5 91       	lpm	r26, Z+
    111a:	25 91       	lpm	r18, Z+
    111c:	35 91       	lpm	r19, Z+
    111e:	45 91       	lpm	r20, Z+
    1120:	55 91       	lpm	r21, Z+
    1122:	a6 f3       	brts	.-24     	; 0x110c <__fp_powser+0x16>
    1124:	ef 01       	movw	r28, r30
    1126:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3x>
    112a:	fe 01       	movw	r30, r28
    112c:	97 01       	movw	r18, r14
    112e:	a8 01       	movw	r20, r16
    1130:	da 94       	dec	r13
    1132:	69 f7       	brne	.-38     	; 0x110e <__fp_powser+0x18>
    1134:	df 90       	pop	r13
    1136:	ef 90       	pop	r14
    1138:	ff 90       	pop	r15
    113a:	0f 91       	pop	r16
    113c:	1f 91       	pop	r17
    113e:	cf 91       	pop	r28
    1140:	df 91       	pop	r29
    1142:	08 95       	ret

00001144 <inverse>:
    1144:	9b 01       	movw	r18, r22
    1146:	ac 01       	movw	r20, r24
    1148:	60 e0       	ldi	r22, 0x00	; 0
    114a:	70 e0       	ldi	r23, 0x00	; 0
    114c:	80 e8       	ldi	r24, 0x80	; 128
    114e:	9f e3       	ldi	r25, 0x3F	; 63
    1150:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__divsf3>
    1154:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>
    1158:	0c 94 68 09 	jmp	0x12d0	; 0x12d0 <__fp_mpack>

0000115c <ldexp>:
    115c:	0e 94 5e 07 	call	0xebc	; 0xebc <__fp_splitA>
    1160:	d8 f3       	brcs	.-10     	; 0x1158 <inverse+0x14>
    1162:	99 23       	and	r25, r25
    1164:	c9 f3       	breq	.-14     	; 0x1158 <inverse+0x14>
    1166:	94 0f       	add	r25, r20
    1168:	51 1d       	adc	r21, r1
    116a:	a3 f3       	brvs	.-24     	; 0x1154 <inverse+0x10>
    116c:	91 50       	subi	r25, 0x01	; 1
    116e:	50 40       	sbci	r21, 0x00	; 0
    1170:	94 f0       	brlt	.+36     	; 0x1196 <ldexp+0x3a>
    1172:	59 f0       	breq	.+22     	; 0x118a <ldexp+0x2e>
    1174:	88 23       	and	r24, r24
    1176:	32 f0       	brmi	.+12     	; 0x1184 <ldexp+0x28>
    1178:	66 0f       	add	r22, r22
    117a:	77 1f       	adc	r23, r23
    117c:	88 1f       	adc	r24, r24
    117e:	91 50       	subi	r25, 0x01	; 1
    1180:	50 40       	sbci	r21, 0x00	; 0
    1182:	c1 f7       	brne	.-16     	; 0x1174 <ldexp+0x18>
    1184:	9e 3f       	cpi	r25, 0xFE	; 254
    1186:	51 05       	cpc	r21, r1
    1188:	2c f7       	brge	.-54     	; 0x1154 <inverse+0x10>
    118a:	88 0f       	add	r24, r24
    118c:	91 1d       	adc	r25, r1
    118e:	96 95       	lsr	r25
    1190:	87 95       	ror	r24
    1192:	97 f9       	bld	r25, 7
    1194:	08 95       	ret
    1196:	5f 3f       	cpi	r21, 0xFF	; 255
    1198:	ac f0       	brlt	.+42     	; 0x11c4 <ldexp+0x68>
    119a:	98 3e       	cpi	r25, 0xE8	; 232
    119c:	9c f0       	brlt	.+38     	; 0x11c4 <ldexp+0x68>
    119e:	bb 27       	eor	r27, r27
    11a0:	86 95       	lsr	r24
    11a2:	77 95       	ror	r23
    11a4:	67 95       	ror	r22
    11a6:	b7 95       	ror	r27
    11a8:	08 f4       	brcc	.+2      	; 0x11ac <ldexp+0x50>
    11aa:	b1 60       	ori	r27, 0x01	; 1
    11ac:	93 95       	inc	r25
    11ae:	c1 f7       	brne	.-16     	; 0x11a0 <ldexp+0x44>
    11b0:	bb 0f       	add	r27, r27
    11b2:	58 f7       	brcc	.-42     	; 0x118a <ldexp+0x2e>
    11b4:	11 f4       	brne	.+4      	; 0x11ba <ldexp+0x5e>
    11b6:	60 ff       	sbrs	r22, 0
    11b8:	e8 cf       	rjmp	.-48     	; 0x118a <ldexp+0x2e>
    11ba:	6f 5f       	subi	r22, 0xFF	; 255
    11bc:	7f 4f       	sbci	r23, 0xFF	; 255
    11be:	8f 4f       	sbci	r24, 0xFF	; 255
    11c0:	9f 4f       	sbci	r25, 0xFF	; 255
    11c2:	e3 cf       	rjmp	.-58     	; 0x118a <ldexp+0x2e>
    11c4:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__fp_szero>
    11c8:	16 f0       	brts	.+4      	; 0x11ce <ldexp+0x72>
    11ca:	0c 94 68 09 	jmp	0x12d0	; 0x12d0 <__fp_mpack>
    11ce:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_nan>
    11d2:	68 94       	set
    11d4:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_inf>

000011d8 <log>:
    11d8:	0e 94 5e 07 	call	0xebc	; 0xebc <__fp_splitA>
    11dc:	a8 f3       	brcs	.-22     	; 0x11c8 <ldexp+0x6c>
    11de:	99 23       	and	r25, r25
    11e0:	c1 f3       	breq	.-16     	; 0x11d2 <ldexp+0x76>
    11e2:	ae f3       	brts	.-22     	; 0x11ce <ldexp+0x72>
    11e4:	df 93       	push	r29
    11e6:	cf 93       	push	r28
    11e8:	1f 93       	push	r17
    11ea:	0f 93       	push	r16
    11ec:	ff 92       	push	r15
    11ee:	c9 2f       	mov	r28, r25
    11f0:	dd 27       	eor	r29, r29
    11f2:	88 23       	and	r24, r24
    11f4:	2a f0       	brmi	.+10     	; 0x1200 <log+0x28>
    11f6:	21 97       	sbiw	r28, 0x01	; 1
    11f8:	66 0f       	add	r22, r22
    11fa:	77 1f       	adc	r23, r23
    11fc:	88 1f       	adc	r24, r24
    11fe:	da f7       	brpl	.-10     	; 0x11f6 <log+0x1e>
    1200:	20 e0       	ldi	r18, 0x00	; 0
    1202:	30 e0       	ldi	r19, 0x00	; 0
    1204:	40 e8       	ldi	r20, 0x80	; 128
    1206:	5f eb       	ldi	r21, 0xBF	; 191
    1208:	9f e3       	ldi	r25, 0x3F	; 63
    120a:	88 39       	cpi	r24, 0x98	; 152
    120c:	20 f0       	brcs	.+8      	; 0x1216 <log+0x3e>
    120e:	80 3e       	cpi	r24, 0xE0	; 224
    1210:	38 f0       	brcs	.+14     	; 0x1220 <log+0x48>
    1212:	21 96       	adiw	r28, 0x01	; 1
    1214:	8f 77       	andi	r24, 0x7F	; 127
    1216:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
    121a:	e0 e1       	ldi	r30, 0x10	; 16
    121c:	f1 e0       	ldi	r31, 0x01	; 1
    121e:	04 c0       	rjmp	.+8      	; 0x1228 <log+0x50>
    1220:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
    1224:	ed e3       	ldi	r30, 0x3D	; 61
    1226:	f1 e0       	ldi	r31, 0x01	; 1
    1228:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__fp_powser>
    122c:	8b 01       	movw	r16, r22
    122e:	be 01       	movw	r22, r28
    1230:	ec 01       	movw	r28, r24
    1232:	fb 2e       	mov	r15, r27
    1234:	6f 57       	subi	r22, 0x7F	; 127
    1236:	71 09       	sbc	r23, r1
    1238:	75 95       	asr	r23
    123a:	77 1f       	adc	r23, r23
    123c:	88 0b       	sbc	r24, r24
    123e:	99 0b       	sbc	r25, r25
    1240:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__floatsisf>
    1244:	28 e1       	ldi	r18, 0x18	; 24
    1246:	32 e7       	ldi	r19, 0x72	; 114
    1248:	41 e3       	ldi	r20, 0x31	; 49
    124a:	5f e3       	ldi	r21, 0x3F	; 63
    124c:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3x>
    1250:	af 2d       	mov	r26, r15
    1252:	98 01       	movw	r18, r16
    1254:	ae 01       	movw	r20, r28
    1256:	ff 90       	pop	r15
    1258:	0f 91       	pop	r16
    125a:	1f 91       	pop	r17
    125c:	cf 91       	pop	r28
    125e:	df 91       	pop	r29
    1260:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3x>
    1264:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__fp_round>

00001268 <modf>:
    1268:	fa 01       	movw	r30, r20
    126a:	dc 01       	movw	r26, r24
    126c:	aa 0f       	add	r26, r26
    126e:	bb 1f       	adc	r27, r27
    1270:	9b 01       	movw	r18, r22
    1272:	ac 01       	movw	r20, r24
    1274:	bf 57       	subi	r27, 0x7F	; 127
    1276:	28 f4       	brcc	.+10     	; 0x1282 <modf+0x1a>
    1278:	22 27       	eor	r18, r18
    127a:	33 27       	eor	r19, r19
    127c:	44 27       	eor	r20, r20
    127e:	50 78       	andi	r21, 0x80	; 128
    1280:	20 c0       	rjmp	.+64     	; 0x12c2 <modf+0x5a>
    1282:	b7 51       	subi	r27, 0x17	; 23
    1284:	90 f4       	brcc	.+36     	; 0x12aa <modf+0x42>
    1286:	ab 2f       	mov	r26, r27
    1288:	00 24       	eor	r0, r0
    128a:	46 95       	lsr	r20
    128c:	37 95       	ror	r19
    128e:	27 95       	ror	r18
    1290:	01 1c       	adc	r0, r1
    1292:	a3 95       	inc	r26
    1294:	d2 f3       	brmi	.-12     	; 0x128a <modf+0x22>
    1296:	00 20       	and	r0, r0
    1298:	71 f0       	breq	.+28     	; 0x12b6 <modf+0x4e>
    129a:	22 0f       	add	r18, r18
    129c:	33 1f       	adc	r19, r19
    129e:	44 1f       	adc	r20, r20
    12a0:	b3 95       	inc	r27
    12a2:	da f3       	brmi	.-10     	; 0x129a <modf+0x32>
    12a4:	0e d0       	rcall	.+28     	; 0x12c2 <modf+0x5a>
    12a6:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__subsf3>
    12aa:	61 30       	cpi	r22, 0x01	; 1
    12ac:	71 05       	cpc	r23, r1
    12ae:	a0 e8       	ldi	r26, 0x80	; 128
    12b0:	8a 07       	cpc	r24, r26
    12b2:	b9 46       	sbci	r27, 0x69	; 105
    12b4:	30 f4       	brcc	.+12     	; 0x12c2 <modf+0x5a>
    12b6:	9b 01       	movw	r18, r22
    12b8:	ac 01       	movw	r20, r24
    12ba:	66 27       	eor	r22, r22
    12bc:	77 27       	eor	r23, r23
    12be:	88 27       	eor	r24, r24
    12c0:	90 78       	andi	r25, 0x80	; 128
    12c2:	30 96       	adiw	r30, 0x00	; 0
    12c4:	21 f0       	breq	.+8      	; 0x12ce <modf+0x66>
    12c6:	20 83       	st	Z, r18
    12c8:	31 83       	std	Z+1, r19	; 0x01
    12ca:	42 83       	std	Z+2, r20	; 0x02
    12cc:	53 83       	std	Z+3, r21	; 0x03
    12ce:	08 95       	ret

000012d0 <__fp_mpack>:
    12d0:	9f 3f       	cpi	r25, 0xFF	; 255
    12d2:	31 f0       	breq	.+12     	; 0x12e0 <__fp_mpack_finite+0xc>

000012d4 <__fp_mpack_finite>:
    12d4:	91 50       	subi	r25, 0x01	; 1
    12d6:	20 f4       	brcc	.+8      	; 0x12e0 <__fp_mpack_finite+0xc>
    12d8:	87 95       	ror	r24
    12da:	77 95       	ror	r23
    12dc:	67 95       	ror	r22
    12de:	b7 95       	ror	r27
    12e0:	88 0f       	add	r24, r24
    12e2:	91 1d       	adc	r25, r1
    12e4:	96 95       	lsr	r25
    12e6:	87 95       	ror	r24
    12e8:	97 f9       	bld	r25, 7
    12ea:	08 95       	ret

000012ec <__divmodsi4>:
    12ec:	05 2e       	mov	r0, r21
    12ee:	97 fb       	bst	r25, 7
    12f0:	1e f4       	brtc	.+6      	; 0x12f8 <__divmodsi4+0xc>
    12f2:	00 94       	com	r0
    12f4:	0e 94 8d 09 	call	0x131a	; 0x131a <__negsi2>
    12f8:	57 fd       	sbrc	r21, 7
    12fa:	07 d0       	rcall	.+14     	; 0x130a <__divmodsi4_neg2>
    12fc:	0e 94 a0 09 	call	0x1340	; 0x1340 <__udivmodsi4>
    1300:	07 fc       	sbrc	r0, 7
    1302:	03 d0       	rcall	.+6      	; 0x130a <__divmodsi4_neg2>
    1304:	4e f4       	brtc	.+18     	; 0x1318 <__divmodsi4_exit>
    1306:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__negsi2>

0000130a <__divmodsi4_neg2>:
    130a:	50 95       	com	r21
    130c:	40 95       	com	r20
    130e:	30 95       	com	r19
    1310:	21 95       	neg	r18
    1312:	3f 4f       	sbci	r19, 0xFF	; 255
    1314:	4f 4f       	sbci	r20, 0xFF	; 255
    1316:	5f 4f       	sbci	r21, 0xFF	; 255

00001318 <__divmodsi4_exit>:
    1318:	08 95       	ret

0000131a <__negsi2>:
    131a:	90 95       	com	r25
    131c:	80 95       	com	r24
    131e:	70 95       	com	r23
    1320:	61 95       	neg	r22
    1322:	7f 4f       	sbci	r23, 0xFF	; 255
    1324:	8f 4f       	sbci	r24, 0xFF	; 255
    1326:	9f 4f       	sbci	r25, 0xFF	; 255
    1328:	08 95       	ret

0000132a <__muluhisi3>:
    132a:	0e 94 c2 09 	call	0x1384	; 0x1384 <__umulhisi3>
    132e:	a5 9f       	mul	r26, r21
    1330:	90 0d       	add	r25, r0
    1332:	b4 9f       	mul	r27, r20
    1334:	90 0d       	add	r25, r0
    1336:	a4 9f       	mul	r26, r20
    1338:	80 0d       	add	r24, r0
    133a:	91 1d       	adc	r25, r1
    133c:	11 24       	eor	r1, r1
    133e:	08 95       	ret

00001340 <__udivmodsi4>:
    1340:	a1 e2       	ldi	r26, 0x21	; 33
    1342:	1a 2e       	mov	r1, r26
    1344:	aa 1b       	sub	r26, r26
    1346:	bb 1b       	sub	r27, r27
    1348:	fd 01       	movw	r30, r26
    134a:	0d c0       	rjmp	.+26     	; 0x1366 <__udivmodsi4_ep>

0000134c <__udivmodsi4_loop>:
    134c:	aa 1f       	adc	r26, r26
    134e:	bb 1f       	adc	r27, r27
    1350:	ee 1f       	adc	r30, r30
    1352:	ff 1f       	adc	r31, r31
    1354:	a2 17       	cp	r26, r18
    1356:	b3 07       	cpc	r27, r19
    1358:	e4 07       	cpc	r30, r20
    135a:	f5 07       	cpc	r31, r21
    135c:	20 f0       	brcs	.+8      	; 0x1366 <__udivmodsi4_ep>
    135e:	a2 1b       	sub	r26, r18
    1360:	b3 0b       	sbc	r27, r19
    1362:	e4 0b       	sbc	r30, r20
    1364:	f5 0b       	sbc	r31, r21

00001366 <__udivmodsi4_ep>:
    1366:	66 1f       	adc	r22, r22
    1368:	77 1f       	adc	r23, r23
    136a:	88 1f       	adc	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	1a 94       	dec	r1
    1370:	69 f7       	brne	.-38     	; 0x134c <__udivmodsi4_loop>
    1372:	60 95       	com	r22
    1374:	70 95       	com	r23
    1376:	80 95       	com	r24
    1378:	90 95       	com	r25
    137a:	9b 01       	movw	r18, r22
    137c:	ac 01       	movw	r20, r24
    137e:	bd 01       	movw	r22, r26
    1380:	cf 01       	movw	r24, r30
    1382:	08 95       	ret

00001384 <__umulhisi3>:
    1384:	a2 9f       	mul	r26, r18
    1386:	b0 01       	movw	r22, r0
    1388:	b3 9f       	mul	r27, r19
    138a:	c0 01       	movw	r24, r0
    138c:	a3 9f       	mul	r26, r19
    138e:	70 0d       	add	r23, r0
    1390:	81 1d       	adc	r24, r1
    1392:	11 24       	eor	r1, r1
    1394:	91 1d       	adc	r25, r1
    1396:	b2 9f       	mul	r27, r18
    1398:	70 0d       	add	r23, r0
    139a:	81 1d       	adc	r24, r1
    139c:	11 24       	eor	r1, r1
    139e:	91 1d       	adc	r25, r1
    13a0:	08 95       	ret

000013a2 <_exit>:
    13a2:	f8 94       	cli

000013a4 <__stop_program>:
    13a4:	ff cf       	rjmp	.-2      	; 0x13a4 <__stop_program>
